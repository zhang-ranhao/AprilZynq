// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
// Date        : Sun May 14 18:07:48 2023
// Host        : LAPTOP-LC3M2DQ5 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               c:/Users/zrh463259112/Desktop/apriltag_demo/an5641_mipi_dp_stage1/project_1/project_1.srcs/sources_1/bd/design_1/ip/design_1_mipi_csi2_rx_subsyst_0_0/bd_0/ip/ip_2/bd_d10d_rx_0_sim_netlist.v
// Design      : bd_d10d_rx_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu2cg-sfvc784-1-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* CHECK_LICENSE_TYPE = "bd_d10d_rx_0,mipi_csi2_rx_ctrl_v1_0_8_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "mipi_csi2_rx_ctrl_v1_0_8_top,Vivado 2020.1" *) 
(* NotValidForBitStream *)
module bd_d10d_rx_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    vfb_full,
    dl0_rxbyteclkhs,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_stopstate,
    dl0_shutdown,
    dl0_rxulpmesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errcontrol,
    dl1_rxbyteclkhs,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_stopstate,
    dl1_shutdown,
    dl1_rxulpmesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errcontrol,
    video_aclk,
    m_axis_aclk,
    m_axis_aresetn,
    m_axis_tready,
    m_axis_tvalid,
    m_axis_tlast,
    m_axis_tdata,
    m_axis_tkeep,
    m_axis_tuser,
    m_axis_tdest,
    mdt_tv,
    mdt_tr,
    sdt_tv,
    sdt_tr,
    vfb_tv,
    vfb_tr,
    interrupt);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axi_signal_clock CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_signal_clock, ASSOCIATED_BUSIF s_axi, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 148146667, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 s_axi_signal_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi_signal_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWADDR" *) input [7:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARADDR" *) input [7:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 s_axi RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axi, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 148146667, ID_WIDTH 0, ADDR_WIDTH 8, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.000, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if CL_STOPSTATE" *) input cl_stopstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if CL_ENABLE" *) output cl_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if CL_RXULPSCLKNOT" *) input cl_rxulpsclknot;
  input vfb_full;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 dl0_rxbyteclkhs CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME dl0_rxbyteclkhs, FREQ_HZ 93750000.0, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN bd_d10d_phy_0_rxbyteclkhs, INSERT_VIP 0" *) input dl0_rxbyteclkhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_RXDATAHS" *) input [7:0]dl0_rxdatahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_RXVALIDHS" *) input dl0_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_RXACTIVEHS" *) input dl0_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_RXSYNCHS" *) input dl0_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_STOPSTATE" *) input dl0_stopstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_ENABLE" *) output dl0_shutdown;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_RXULPSESC" *) input dl0_rxulpmesc;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_ERRSOTHS" *) input dl0_errsoths;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_ERRSOTSYNCHS" *) input dl0_errsotsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_ERRESC" *) input dl0_erresc;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL0_ERRCONTROL" *) input dl0_errcontrol;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 dl1_rxbyteclkhs CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME dl1_rxbyteclkhs, FREQ_HZ 93750000.0, FREQ_TOLERANCE_HZ 0, PHASE 0, CLK_DOMAIN bd_d10d_phy_0_rxbyteclkhs, INSERT_VIP 0" *) input dl1_rxbyteclkhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_RXDATAHS" *) input [7:0]dl1_rxdatahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_RXVALIDHS" *) input dl1_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_RXACTIVEHS" *) input dl1_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_RXSYNCHS" *) input dl1_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_STOPSTATE" *) input dl1_stopstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_ENABLE" *) output dl1_shutdown;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_RXULPSESC" *) input dl1_rxulpmesc;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_ERRSOTHS" *) input dl1_errsoths;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_ERRSOTSYNCHS" *) input dl1_errsotsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_ERRESC" *) input dl1_erresc;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 rx_mipi_ppi_if DL1_ERRCONTROL" *) input dl1_errcontrol;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axis_eni_signal_clock CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_eni_signal_clock, ASSOCIATED_BUSIF m_axis_eni, FREQ_HZ 148146667, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input video_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axis_signal_clock CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_signal_clock, ASSOCIATED_BUSIF m_axis, ASSOCIATED_RESET m_axis_aresetn, FREQ_HZ 148146667, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, INSERT_VIP 0" *) input m_axis_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_axis_signal_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_signal_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input m_axis_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TREADY" *) input m_axis_tready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TVALID" *) output m_axis_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TLAST" *) output m_axis_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TDATA" *) output [63:0]m_axis_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TKEEP" *) output [7:0]m_axis_tkeep;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TUSER" *) output [95:0]m_axis_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 m_axis TDEST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis, TDATA_NUM_BYTES 8, TDEST_WIDTH 4, TID_WIDTH 0, TUSER_WIDTH 96, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 1, HAS_TLAST 1, FREQ_HZ 148146667, PHASE 0.000, CLK_DOMAIN design_1_zynq_ultra_ps_e_0_0_pl_clk0, LAYERED_METADATA undef, INSERT_VIP 0" *) output [3:0]m_axis_tdest;
  input mdt_tv;
  input mdt_tr;
  input sdt_tv;
  input sdt_tr;
  input vfb_tv;
  input vfb_tr;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 signal_interrupt INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME signal_interrupt, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output interrupt;

  wire cl_enable;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire dl0_rxbyteclkhs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxulpmesc;
  wire dl0_rxvalidhs;
  wire dl0_shutdown;
  wire dl0_stopstate;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire dl1_rxbyteclkhs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxulpmesc;
  wire dl1_rxvalidhs;
  wire dl1_shutdown;
  wire dl1_stopstate;
  wire interrupt;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire [63:0]m_axis_tdata;
  wire [3:0]m_axis_tdest;
  wire [7:0]m_axis_tkeep;
  wire m_axis_tlast;
  wire m_axis_tready;
  wire [95:0]m_axis_tuser;
  wire m_axis_tvalid;
  wire mdt_tr;
  wire mdt_tv;
  wire s_axi_aclk;
  wire [7:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [7:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire sdt_tr;
  wire sdt_tv;
  wire vfb_full;
  wire vfb_tr;
  wire vfb_tv;
  wire video_aclk;
  wire NLW_inst_cl_stopstate_intr_UNCONNECTED;
  wire NLW_inst_crc_status_intr_UNCONNECTED;
  wire NLW_inst_disable_in_progress_UNCONNECTED;
  wire NLW_inst_dl0_stopstate_intr_UNCONNECTED;
  wire NLW_inst_dl1_stopstate_intr_UNCONNECTED;
  wire NLW_inst_dl2_shutdown_UNCONNECTED;
  wire NLW_inst_dl2_stopstate_intr_UNCONNECTED;
  wire NLW_inst_dl3_shutdown_UNCONNECTED;
  wire NLW_inst_dl3_stopstate_intr_UNCONNECTED;
  wire NLW_inst_errsoths_intr_UNCONNECTED;
  wire NLW_inst_errsotsynchs_intr_UNCONNECTED;
  wire NLW_inst_frame_rcvd_pulse_out_UNCONNECTED;
  wire NLW_inst_linebuffer_full_UNCONNECTED;
  wire NLW_inst_m_axis_eni_tlast_UNCONNECTED;
  wire NLW_inst_m_axis_eni_tvalid_UNCONNECTED;
  wire [1:0]NLW_inst_ecc_status_intr_UNCONNECTED;
  wire [63:0]NLW_inst_m_axis_eni_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_eni_tdest_UNCONNECTED;
  wire [7:0]NLW_inst_m_axis_eni_tkeep_UNCONNECTED;
  wire [95:0]NLW_inst_m_axis_eni_tuser_UNCONNECTED;

  (* AXIS_FIFO_DCNT_WIDTH = "11" *) 
  (* AXIS_FIFO_DEPTH = "2048" *) 
  (* AXIS_TDATA_WIDTH = "64" *) 
  (* AXIS_TDEST_WIDTH = "4" *) 
  (* AXIS_TUSER_WIDTH = "96" *) 
  (* CSI_EN_VC_SUPPORT = "1" *) 
  (* CSI_FIXED_VC = "0" *) 
  (* CSI_INV_SHUTDOWN = "1" *) 
  (* CSI_LANES = "2" *) 
  (* CSI_OFFLOAD_NONIMAGE = "0" *) 
  (* CSI_VC_OFF_0 = "1" *) 
  (* CSI_VC_OFF_1 = "2" *) 
  (* CSI_VC_OFF_10 = "11" *) 
  (* CSI_VC_OFF_11 = "12" *) 
  (* CSI_VC_OFF_12 = "13" *) 
  (* CSI_VC_OFF_13 = "14" *) 
  (* CSI_VC_OFF_14 = "15" *) 
  (* CSI_VC_OFF_2 = "3" *) 
  (* CSI_VC_OFF_3 = "4" *) 
  (* CSI_VC_OFF_4 = "5" *) 
  (* CSI_VC_OFF_5 = "6" *) 
  (* CSI_VC_OFF_6 = "7" *) 
  (* CSI_VC_OFF_7 = "8" *) 
  (* CSI_VC_OFF_8 = "9" *) 
  (* CSI_VC_OFF_9 = "10" *) 
  (* C_CSI2RX_DBG = "0" *) 
  (* C_CSI_FILTER_USERDATATYPE = "0" *) 
  (* C_CSI_OPT1_REGS = "0" *) 
  (* C_CSI_OPT2_CRC = "0" *) 
  (* C_CSI_OPT3_FIXEDLANES = "1" *) 
  (* C_DISABLE_LITE = "0" *) 
  (* C_EN_CSI_V2_0 = "false" *) 
  (* C_EN_VCX = "false" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_HS_LINE_RATE = "750" *) 
  (* C_IS_EVAL = "0" *) 
  (* C_MIPI_SLV_INT = "0" *) 
  (* C_RCVE_DESKEW_SEQ = "false" *) 
  (* C_S_AXI_ADDR_WIDTH = "8" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* VC_H = "4" *) 
  (* VC_L = "0" *) 
  (* VC_NUMS = "4" *) 
  (* VFB_FIFO = "16" *) 
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_top inst
       (.cl_enable(cl_enable),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_stopstate_intr(NLW_inst_cl_stopstate_intr_UNCONNECTED),
        .core_enable(1'b0),
        .crc_status_intr(NLW_inst_crc_status_intr_UNCONNECTED),
        .disable_in_progress(NLW_inst_disable_in_progress_UNCONNECTED),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxskewcalhs(1'b0),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxulpmesc(dl0_rxulpmesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_shutdown(dl0_shutdown),
        .dl0_stopstate(dl0_stopstate),
        .dl0_stopstate_intr(NLW_inst_dl0_stopstate_intr_UNCONNECTED),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxbyteclkhs(dl1_rxbyteclkhs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxskewcalhs(1'b0),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxulpmesc(dl1_rxulpmesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_shutdown(dl1_shutdown),
        .dl1_stopstate(dl1_stopstate),
        .dl1_stopstate_intr(NLW_inst_dl1_stopstate_intr_UNCONNECTED),
        .dl2_errcontrol(1'b0),
        .dl2_erresc(1'b0),
        .dl2_errsoths(1'b0),
        .dl2_errsotsynchs(1'b0),
        .dl2_rxactivehs(1'b0),
        .dl2_rxbyteclkhs(1'b0),
        .dl2_rxdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl2_rxskewcalhs(1'b0),
        .dl2_rxsynchs(1'b0),
        .dl2_rxulpmesc(1'b0),
        .dl2_rxvalidhs(1'b0),
        .dl2_shutdown(NLW_inst_dl2_shutdown_UNCONNECTED),
        .dl2_stopstate(1'b1),
        .dl2_stopstate_intr(NLW_inst_dl2_stopstate_intr_UNCONNECTED),
        .dl3_errcontrol(1'b0),
        .dl3_erresc(1'b0),
        .dl3_errsoths(1'b0),
        .dl3_errsotsynchs(1'b0),
        .dl3_rxactivehs(1'b0),
        .dl3_rxbyteclkhs(1'b0),
        .dl3_rxdatahs({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dl3_rxskewcalhs(1'b0),
        .dl3_rxsynchs(1'b0),
        .dl3_rxulpmesc(1'b0),
        .dl3_rxvalidhs(1'b0),
        .dl3_shutdown(NLW_inst_dl3_shutdown_UNCONNECTED),
        .dl3_stopstate(1'b1),
        .dl3_stopstate_intr(NLW_inst_dl3_stopstate_intr_UNCONNECTED),
        .ecc_status_intr(NLW_inst_ecc_status_intr_UNCONNECTED[1:0]),
        .errsoths_intr(NLW_inst_errsoths_intr_UNCONNECTED),
        .errsotsynchs_intr(NLW_inst_errsotsynchs_intr_UNCONNECTED),
        .frame_rcvd_pulse_out(NLW_inst_frame_rcvd_pulse_out_UNCONNECTED),
        .interrupt(interrupt),
        .linebuffer_full(NLW_inst_linebuffer_full_UNCONNECTED),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .m_axis_eni_tdata(NLW_inst_m_axis_eni_tdata_UNCONNECTED[63:0]),
        .m_axis_eni_tdest(NLW_inst_m_axis_eni_tdest_UNCONNECTED[3:0]),
        .m_axis_eni_tkeep(NLW_inst_m_axis_eni_tkeep_UNCONNECTED[7:0]),
        .m_axis_eni_tlast(NLW_inst_m_axis_eni_tlast_UNCONNECTED),
        .m_axis_eni_tready(1'b0),
        .m_axis_eni_tuser(NLW_inst_m_axis_eni_tuser_UNCONNECTED[95:0]),
        .m_axis_eni_tvalid(NLW_inst_m_axis_eni_tvalid_UNCONNECTED),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tdest(m_axis_tdest),
        .m_axis_tkeep(m_axis_tkeep),
        .m_axis_tlast(m_axis_tlast),
        .m_axis_tready(m_axis_tready),
        .m_axis_tuser(m_axis_tuser),
        .m_axis_tvalid(m_axis_tvalid),
        .mdt_tr(mdt_tr),
        .mdt_tv(mdt_tv),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .sdt_tr(sdt_tr),
        .sdt_tv(sdt_tv),
        .vfb_full(vfb_full),
        .vfb_tr(vfb_tr),
        .vfb_tv(vfb_tv),
        .video_aclk(video_aclk));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* WIDTH = "2" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ARRAY_SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_array_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [1:0]src_in;
  input dest_clk;
  output [1:0]dest_out;

  wire [1:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[2] ;

  assign async_path_bit = src_in[1:0];
  assign dest_out[1:0] = \syncstages_ff[2] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [0]),
        .Q(\syncstages_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [1]),
        .Q(\syncstages_ff[2] [1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* WIDTH = "2" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ARRAY_SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_array_single__4
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [1:0]src_in;
  input dest_clk;
  output [1:0]dest_out;

  wire [1:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[2] ;

  assign async_path_bit = src_in[1:0];
  assign dest_out[1:0] = \syncstages_ff[2] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [0]),
        .Q(\syncstages_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [1]),
        .Q(\syncstages_ff[2] [1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* WIDTH = "2" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ARRAY_SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_array_single__5
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [1:0]src_in;
  input dest_clk;
  output [1:0]dest_out;

  wire [1:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[2] ;

  assign async_path_bit = src_in[1:0];
  assign dest_out[1:0] = \syncstages_ff[2] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [0]),
        .Q(\syncstages_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [1]),
        .Q(\syncstages_ff[2] [1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* WIDTH = "2" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ARRAY_SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_array_single__6
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [1:0]src_in;
  input dest_clk;
  output [1:0]dest_out;

  wire [1:0]async_path_bit;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [1:0]\syncstages_ff[2] ;

  assign async_path_bit = src_in[1:0];
  assign dest_out[1:0] = \syncstages_ff[2] ;
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [0]),
        .Q(\syncstages_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [1]),
        .Q(\syncstages_ff[2] [1]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_array_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "1" *) (* VERSION = "0" *) 
(* WIDTH = "46" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ARRAY_SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_array_single__parameterized0
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input [45:0]src_in;
  input dest_clk;
  output [45:0]dest_out;

  wire [45:0]async_path_bit;
  wire dest_clk;
  wire src_clk;
  wire [45:0]src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [45:0]\syncstages_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [45:0]\syncstages_ff[1] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ARRAY_SINGLE" *) wire [45:0]\syncstages_ff[2] ;

  assign dest_out[45:0] = \syncstages_ff[2] ;
  FDRE \src_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[0]),
        .Q(async_path_bit[0]),
        .R(1'b0));
  FDRE \src_ff_reg[10] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[10]),
        .Q(async_path_bit[10]),
        .R(1'b0));
  FDRE \src_ff_reg[11] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[11]),
        .Q(async_path_bit[11]),
        .R(1'b0));
  FDRE \src_ff_reg[12] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[12]),
        .Q(async_path_bit[12]),
        .R(1'b0));
  FDRE \src_ff_reg[13] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[13]),
        .Q(async_path_bit[13]),
        .R(1'b0));
  FDRE \src_ff_reg[14] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[14]),
        .Q(async_path_bit[14]),
        .R(1'b0));
  FDRE \src_ff_reg[15] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[15]),
        .Q(async_path_bit[15]),
        .R(1'b0));
  FDRE \src_ff_reg[16] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[16]),
        .Q(async_path_bit[16]),
        .R(1'b0));
  FDRE \src_ff_reg[17] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[17]),
        .Q(async_path_bit[17]),
        .R(1'b0));
  FDRE \src_ff_reg[18] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[18]),
        .Q(async_path_bit[18]),
        .R(1'b0));
  FDRE \src_ff_reg[19] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[19]),
        .Q(async_path_bit[19]),
        .R(1'b0));
  FDRE \src_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[1]),
        .Q(async_path_bit[1]),
        .R(1'b0));
  FDRE \src_ff_reg[20] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[20]),
        .Q(async_path_bit[20]),
        .R(1'b0));
  FDRE \src_ff_reg[21] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[21]),
        .Q(async_path_bit[21]),
        .R(1'b0));
  FDRE \src_ff_reg[22] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[22]),
        .Q(async_path_bit[22]),
        .R(1'b0));
  FDRE \src_ff_reg[23] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[23]),
        .Q(async_path_bit[23]),
        .R(1'b0));
  FDRE \src_ff_reg[24] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[24]),
        .Q(async_path_bit[24]),
        .R(1'b0));
  FDRE \src_ff_reg[25] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[25]),
        .Q(async_path_bit[25]),
        .R(1'b0));
  FDRE \src_ff_reg[26] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[26]),
        .Q(async_path_bit[26]),
        .R(1'b0));
  FDRE \src_ff_reg[27] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[27]),
        .Q(async_path_bit[27]),
        .R(1'b0));
  FDRE \src_ff_reg[28] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[28]),
        .Q(async_path_bit[28]),
        .R(1'b0));
  FDRE \src_ff_reg[29] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[29]),
        .Q(async_path_bit[29]),
        .R(1'b0));
  FDRE \src_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[2]),
        .Q(async_path_bit[2]),
        .R(1'b0));
  FDRE \src_ff_reg[30] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[30]),
        .Q(async_path_bit[30]),
        .R(1'b0));
  FDRE \src_ff_reg[31] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[31]),
        .Q(async_path_bit[31]),
        .R(1'b0));
  FDRE \src_ff_reg[32] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[32]),
        .Q(async_path_bit[32]),
        .R(1'b0));
  FDRE \src_ff_reg[33] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[33]),
        .Q(async_path_bit[33]),
        .R(1'b0));
  FDRE \src_ff_reg[34] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[34]),
        .Q(async_path_bit[34]),
        .R(1'b0));
  FDRE \src_ff_reg[35] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[35]),
        .Q(async_path_bit[35]),
        .R(1'b0));
  FDRE \src_ff_reg[36] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[36]),
        .Q(async_path_bit[36]),
        .R(1'b0));
  FDRE \src_ff_reg[37] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[37]),
        .Q(async_path_bit[37]),
        .R(1'b0));
  FDRE \src_ff_reg[38] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[38]),
        .Q(async_path_bit[38]),
        .R(1'b0));
  FDRE \src_ff_reg[39] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[39]),
        .Q(async_path_bit[39]),
        .R(1'b0));
  FDRE \src_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[3]),
        .Q(async_path_bit[3]),
        .R(1'b0));
  FDRE \src_ff_reg[40] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[40]),
        .Q(async_path_bit[40]),
        .R(1'b0));
  FDRE \src_ff_reg[41] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[41]),
        .Q(async_path_bit[41]),
        .R(1'b0));
  FDRE \src_ff_reg[42] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[42]),
        .Q(async_path_bit[42]),
        .R(1'b0));
  FDRE \src_ff_reg[43] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[43]),
        .Q(async_path_bit[43]),
        .R(1'b0));
  FDRE \src_ff_reg[44] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[44]),
        .Q(async_path_bit[44]),
        .R(1'b0));
  FDRE \src_ff_reg[45] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[45]),
        .Q(async_path_bit[45]),
        .R(1'b0));
  FDRE \src_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[4]),
        .Q(async_path_bit[4]),
        .R(1'b0));
  FDRE \src_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[5]),
        .Q(async_path_bit[5]),
        .R(1'b0));
  FDRE \src_ff_reg[6] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[6]),
        .Q(async_path_bit[6]),
        .R(1'b0));
  FDRE \src_ff_reg[7] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[7]),
        .Q(async_path_bit[7]),
        .R(1'b0));
  FDRE \src_ff_reg[8] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[8]),
        .Q(async_path_bit[8]),
        .R(1'b0));
  FDRE \src_ff_reg[9] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in[9]),
        .Q(async_path_bit[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[0]),
        .Q(\syncstages_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][10] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[10]),
        .Q(\syncstages_ff[0] [10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][11] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[11]),
        .Q(\syncstages_ff[0] [11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][12] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[12]),
        .Q(\syncstages_ff[0] [12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][13] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[13]),
        .Q(\syncstages_ff[0] [13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][14] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[14]),
        .Q(\syncstages_ff[0] [14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][15] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[15]),
        .Q(\syncstages_ff[0] [15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][16] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[16]),
        .Q(\syncstages_ff[0] [16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][17] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[17]),
        .Q(\syncstages_ff[0] [17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][18] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[18]),
        .Q(\syncstages_ff[0] [18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][19] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[19]),
        .Q(\syncstages_ff[0] [19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[1]),
        .Q(\syncstages_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][20] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[20]),
        .Q(\syncstages_ff[0] [20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][21] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[21]),
        .Q(\syncstages_ff[0] [21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][22] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[22]),
        .Q(\syncstages_ff[0] [22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][23] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[23]),
        .Q(\syncstages_ff[0] [23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][24] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[24]),
        .Q(\syncstages_ff[0] [24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][25] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[25]),
        .Q(\syncstages_ff[0] [25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][26] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[26]),
        .Q(\syncstages_ff[0] [26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][27] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[27]),
        .Q(\syncstages_ff[0] [27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][28] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[28]),
        .Q(\syncstages_ff[0] [28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][29] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[29]),
        .Q(\syncstages_ff[0] [29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[2]),
        .Q(\syncstages_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][30] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[30]),
        .Q(\syncstages_ff[0] [30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][31] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[31]),
        .Q(\syncstages_ff[0] [31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][32] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[32]),
        .Q(\syncstages_ff[0] [32]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][33] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[33]),
        .Q(\syncstages_ff[0] [33]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][34] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[34]),
        .Q(\syncstages_ff[0] [34]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][35] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[35]),
        .Q(\syncstages_ff[0] [35]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][36] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[36]),
        .Q(\syncstages_ff[0] [36]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][37] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[37]),
        .Q(\syncstages_ff[0] [37]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][38] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[38]),
        .Q(\syncstages_ff[0] [38]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][39] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[39]),
        .Q(\syncstages_ff[0] [39]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[3]),
        .Q(\syncstages_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][40] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[40]),
        .Q(\syncstages_ff[0] [40]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][41] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[41]),
        .Q(\syncstages_ff[0] [41]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][42] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[42]),
        .Q(\syncstages_ff[0] [42]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][43] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[43]),
        .Q(\syncstages_ff[0] [43]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][44] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[44]),
        .Q(\syncstages_ff[0] [44]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][45] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[45]),
        .Q(\syncstages_ff[0] [45]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[4]),
        .Q(\syncstages_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[5]),
        .Q(\syncstages_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[6]),
        .Q(\syncstages_ff[0] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[7]),
        .Q(\syncstages_ff[0] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[8]),
        .Q(\syncstages_ff[0] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[0][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path_bit[9]),
        .Q(\syncstages_ff[0] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [0]),
        .Q(\syncstages_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][10] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [10]),
        .Q(\syncstages_ff[1] [10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][11] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [11]),
        .Q(\syncstages_ff[1] [11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][12] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [12]),
        .Q(\syncstages_ff[1] [12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][13] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [13]),
        .Q(\syncstages_ff[1] [13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][14] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [14]),
        .Q(\syncstages_ff[1] [14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][15] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [15]),
        .Q(\syncstages_ff[1] [15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][16] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [16]),
        .Q(\syncstages_ff[1] [16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][17] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [17]),
        .Q(\syncstages_ff[1] [17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][18] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [18]),
        .Q(\syncstages_ff[1] [18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][19] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [19]),
        .Q(\syncstages_ff[1] [19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [1]),
        .Q(\syncstages_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][20] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [20]),
        .Q(\syncstages_ff[1] [20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][21] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [21]),
        .Q(\syncstages_ff[1] [21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][22] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [22]),
        .Q(\syncstages_ff[1] [22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][23] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [23]),
        .Q(\syncstages_ff[1] [23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][24] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [24]),
        .Q(\syncstages_ff[1] [24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][25] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [25]),
        .Q(\syncstages_ff[1] [25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][26] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [26]),
        .Q(\syncstages_ff[1] [26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][27] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [27]),
        .Q(\syncstages_ff[1] [27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][28] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [28]),
        .Q(\syncstages_ff[1] [28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][29] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [29]),
        .Q(\syncstages_ff[1] [29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [2]),
        .Q(\syncstages_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][30] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [30]),
        .Q(\syncstages_ff[1] [30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][31] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [31]),
        .Q(\syncstages_ff[1] [31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][32] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [32]),
        .Q(\syncstages_ff[1] [32]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][33] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [33]),
        .Q(\syncstages_ff[1] [33]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][34] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [34]),
        .Q(\syncstages_ff[1] [34]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][35] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [35]),
        .Q(\syncstages_ff[1] [35]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][36] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [36]),
        .Q(\syncstages_ff[1] [36]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][37] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [37]),
        .Q(\syncstages_ff[1] [37]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][38] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [38]),
        .Q(\syncstages_ff[1] [38]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][39] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [39]),
        .Q(\syncstages_ff[1] [39]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [3]),
        .Q(\syncstages_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][40] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [40]),
        .Q(\syncstages_ff[1] [40]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][41] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [41]),
        .Q(\syncstages_ff[1] [41]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][42] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [42]),
        .Q(\syncstages_ff[1] [42]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][43] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [43]),
        .Q(\syncstages_ff[1] [43]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][44] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [44]),
        .Q(\syncstages_ff[1] [44]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][45] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [45]),
        .Q(\syncstages_ff[1] [45]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [4]),
        .Q(\syncstages_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [5]),
        .Q(\syncstages_ff[1] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [6]),
        .Q(\syncstages_ff[1] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [7]),
        .Q(\syncstages_ff[1] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [8]),
        .Q(\syncstages_ff[1] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[1][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[0] [9]),
        .Q(\syncstages_ff[1] [9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [0]),
        .Q(\syncstages_ff[2] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][10] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [10]),
        .Q(\syncstages_ff[2] [10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][11] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [11]),
        .Q(\syncstages_ff[2] [11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][12] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [12]),
        .Q(\syncstages_ff[2] [12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][13] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [13]),
        .Q(\syncstages_ff[2] [13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][14] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [14]),
        .Q(\syncstages_ff[2] [14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][15] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [15]),
        .Q(\syncstages_ff[2] [15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][16] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [16]),
        .Q(\syncstages_ff[2] [16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][17] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [17]),
        .Q(\syncstages_ff[2] [17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][18] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [18]),
        .Q(\syncstages_ff[2] [18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][19] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [19]),
        .Q(\syncstages_ff[2] [19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [1]),
        .Q(\syncstages_ff[2] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][20] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [20]),
        .Q(\syncstages_ff[2] [20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][21] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [21]),
        .Q(\syncstages_ff[2] [21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][22] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [22]),
        .Q(\syncstages_ff[2] [22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][23] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [23]),
        .Q(\syncstages_ff[2] [23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][24] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [24]),
        .Q(\syncstages_ff[2] [24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][25] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [25]),
        .Q(\syncstages_ff[2] [25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][26] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [26]),
        .Q(\syncstages_ff[2] [26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][27] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [27]),
        .Q(\syncstages_ff[2] [27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][28] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [28]),
        .Q(\syncstages_ff[2] [28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][29] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [29]),
        .Q(\syncstages_ff[2] [29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [2]),
        .Q(\syncstages_ff[2] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][30] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [30]),
        .Q(\syncstages_ff[2] [30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][31] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [31]),
        .Q(\syncstages_ff[2] [31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][32] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [32]),
        .Q(\syncstages_ff[2] [32]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][33] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [33]),
        .Q(\syncstages_ff[2] [33]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][34] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [34]),
        .Q(\syncstages_ff[2] [34]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][35] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [35]),
        .Q(\syncstages_ff[2] [35]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][36] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [36]),
        .Q(\syncstages_ff[2] [36]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][37] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [37]),
        .Q(\syncstages_ff[2] [37]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][38] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [38]),
        .Q(\syncstages_ff[2] [38]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][39] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [39]),
        .Q(\syncstages_ff[2] [39]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [3]),
        .Q(\syncstages_ff[2] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][40] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [40]),
        .Q(\syncstages_ff[2] [40]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][41] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [41]),
        .Q(\syncstages_ff[2] [41]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][42] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [42]),
        .Q(\syncstages_ff[2] [42]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][43] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [43]),
        .Q(\syncstages_ff[2] [43]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][44] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [44]),
        .Q(\syncstages_ff[2] [44]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][45] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [45]),
        .Q(\syncstages_ff[2] [45]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [4]),
        .Q(\syncstages_ff[2] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [5]),
        .Q(\syncstages_ff[2] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][6] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [6]),
        .Q(\syncstages_ff[2] [6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][7] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [7]),
        .Q(\syncstages_ff[2] [7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][8] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [8]),
        .Q(\syncstages_ff[2] [8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  FDRE \syncstages_ff_reg[2][9] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\syncstages_ff[1] [9]),
        .Q(\syncstages_ff[2] [9]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_async_rst
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [2:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[2];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[2]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[1]),
        .Q(arststages_ff[2]));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_async_rst__1
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [2:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[2];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[2]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[1]),
        .Q(arststages_ff[2]));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_async_rst__2
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [2:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[2];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[2]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[1]),
        .Q(arststages_ff[2]));
endmodule

(* DEF_VAL = "1'b1" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* INV_DEF_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_cdc_async_rst" *) (* RST_ACTIVE_HIGH = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "ASYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_async_rst__3
   (src_arst,
    dest_clk,
    dest_arst);
  input src_arst;
  input dest_clk;
  output dest_arst;

  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "ASYNC_RST" *) wire [2:0]arststages_ff;
  wire dest_clk;
  wire reset_pol;
  wire src_arst;

  assign dest_arst = arststages_ff[2];
  LUT1 #(
    .INIT(2'h1)) 
    \arststages_ff[2]_i_1 
       (.I0(src_arst),
        .O(reset_pol));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(1'b1),
        .Q(arststages_ff[0]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[0]),
        .Q(arststages_ff[1]));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  FDCE #(
    .INIT(1'b1)) 
    \arststages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .CLR(reset_pol),
        .D(arststages_ff[1]),
        .Q(arststages_ff[2]));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[1] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[1] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[1] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [4:0]src_in_bin;
  input dest_clk;
  output [4:0]dest_out_bin;

  wire [4:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [4:0]\dest_graysync_ff[1] ;
  wire [3:0]\^dest_out_bin ;
  wire [3:0]gray_enc;
  wire src_clk;
  wire [4:0]src_in_bin;

  assign dest_out_bin[4] = \dest_graysync_ff[1] [4];
  assign dest_out_bin[3:0] = \^dest_out_bin [3:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [3]),
        .I4(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[4]),
        .Q(async_path[4]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__parameterized0
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[1] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .I5(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [4]),
        .I4(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__parameterized0__4
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[1] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .I5(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [4]),
        .I4(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__parameterized0__5
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[1] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .I5(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [4]),
        .I4(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "2" *) (* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_gray" *) 
(* REG_OUTPUT = "0" *) (* SIM_ASSERT_CHK = "0" *) (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
(* VERSION = "0" *) (* WIDTH = "6" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "GRAY" *) 
module bd_d10d_rx_0_xpm_cdc_gray__parameterized0__6
   (src_clk,
    src_in_bin,
    dest_clk,
    dest_out_bin);
  input src_clk;
  input [5:0]src_in_bin;
  input dest_clk;
  output [5:0]dest_out_bin;

  wire [5:0]async_path;
  wire dest_clk;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[0] ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "GRAY" *) wire [5:0]\dest_graysync_ff[1] ;
  wire [4:0]\^dest_out_bin ;
  wire [4:0]gray_enc;
  wire src_clk;
  wire [5:0]src_in_bin;

  assign dest_out_bin[5] = \dest_graysync_ff[1] [5];
  assign dest_out_bin[4:0] = \^dest_out_bin [4:0];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[0]),
        .Q(\dest_graysync_ff[0] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[1]),
        .Q(\dest_graysync_ff[0] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[2]),
        .Q(\dest_graysync_ff[0] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[3]),
        .Q(\dest_graysync_ff[0] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[4]),
        .Q(\dest_graysync_ff[0] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[0][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(async_path[5]),
        .Q(\dest_graysync_ff[0] [5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [0]),
        .Q(\dest_graysync_ff[1] [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [1]),
        .Q(\dest_graysync_ff[1] [1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [2]),
        .Q(\dest_graysync_ff[1] [2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][3] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [3]),
        .Q(\dest_graysync_ff[1] [3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][4] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [4]),
        .Q(\dest_graysync_ff[1] [4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "GRAY" *) 
  FDRE \dest_graysync_ff_reg[1][5] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(\dest_graysync_ff[0] [5]),
        .Q(\dest_graysync_ff[1] [5]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \dest_out_bin[0]_INST_0 
       (.I0(\dest_graysync_ff[1] [0]),
        .I1(\dest_graysync_ff[1] [2]),
        .I2(\dest_graysync_ff[1] [4]),
        .I3(\dest_graysync_ff[1] [5]),
        .I4(\dest_graysync_ff[1] [3]),
        .I5(\dest_graysync_ff[1] [1]),
        .O(\^dest_out_bin [0]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \dest_out_bin[1]_INST_0 
       (.I0(\dest_graysync_ff[1] [1]),
        .I1(\dest_graysync_ff[1] [3]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [4]),
        .I4(\dest_graysync_ff[1] [2]),
        .O(\^dest_out_bin [1]));
  LUT4 #(
    .INIT(16'h6996)) 
    \dest_out_bin[2]_INST_0 
       (.I0(\dest_graysync_ff[1] [2]),
        .I1(\dest_graysync_ff[1] [4]),
        .I2(\dest_graysync_ff[1] [5]),
        .I3(\dest_graysync_ff[1] [3]),
        .O(\^dest_out_bin [2]));
  LUT3 #(
    .INIT(8'h96)) 
    \dest_out_bin[3]_INST_0 
       (.I0(\dest_graysync_ff[1] [3]),
        .I1(\dest_graysync_ff[1] [5]),
        .I2(\dest_graysync_ff[1] [4]),
        .O(\^dest_out_bin [3]));
  LUT2 #(
    .INIT(4'h6)) 
    \dest_out_bin[4]_INST_0 
       (.I0(\dest_graysync_ff[1] [4]),
        .I1(\dest_graysync_ff[1] [5]),
        .O(\^dest_out_bin [4]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[0]_i_1 
       (.I0(src_in_bin[1]),
        .I1(src_in_bin[0]),
        .O(gray_enc[0]));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[1]_i_1 
       (.I0(src_in_bin[2]),
        .I1(src_in_bin[1]),
        .O(gray_enc[1]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[2]_i_1 
       (.I0(src_in_bin[3]),
        .I1(src_in_bin[2]),
        .O(gray_enc[2]));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[3]_i_1 
       (.I0(src_in_bin[4]),
        .I1(src_in_bin[3]),
        .O(gray_enc[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \src_gray_ff[4]_i_1 
       (.I0(src_in_bin[5]),
        .I1(src_in_bin[4]),
        .O(gray_enc[4]));
  FDRE \src_gray_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[0]),
        .Q(async_path[0]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[1] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[1]),
        .Q(async_path[1]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[2] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[2]),
        .Q(async_path[2]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[3] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[3]),
        .Q(async_path[3]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[4] 
       (.C(src_clk),
        .CE(1'b1),
        .D(gray_enc[4]),
        .Q(async_path[4]),
        .R(1'b0));
  FDRE \src_gray_ff_reg[5] 
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in_bin[5]),
        .Q(async_path[5]),
        .R(1'b0));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__244 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__243 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "2" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__parameterized0
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [1:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [1:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire [1:0]dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire p_0_in;
  wire src_clk;
  wire [1:0]src_hsdata_ff;
  wire [1:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[1:0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[0]),
        .Q(dest_hsdata_ff[0]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[1] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[1]),
        .Q(dest_hsdata_ff[1]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \src_hsdata_ff[1]_i_1 
       (.I0(src_sendd_ff),
        .O(p_0_in));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[0]),
        .Q(src_hsdata_ff[0]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[1] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[1]),
        .Q(src_hsdata_ff[1]),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__131 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__130 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "26" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__parameterized1
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [25:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [25:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire [25:0]dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire p_0_in;
  wire src_clk;
  wire [25:0]src_hsdata_ff;
  wire [25:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[25:0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[0]),
        .Q(dest_hsdata_ff[0]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[10] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[10]),
        .Q(dest_hsdata_ff[10]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[11] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[11]),
        .Q(dest_hsdata_ff[11]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[12] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[12]),
        .Q(dest_hsdata_ff[12]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[13] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[13]),
        .Q(dest_hsdata_ff[13]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[14] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[14]),
        .Q(dest_hsdata_ff[14]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[15] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[15]),
        .Q(dest_hsdata_ff[15]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[16] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[16]),
        .Q(dest_hsdata_ff[16]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[17] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[17]),
        .Q(dest_hsdata_ff[17]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[18] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[18]),
        .Q(dest_hsdata_ff[18]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[19] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[19]),
        .Q(dest_hsdata_ff[19]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[1] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[1]),
        .Q(dest_hsdata_ff[1]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[20] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[20]),
        .Q(dest_hsdata_ff[20]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[21] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[21]),
        .Q(dest_hsdata_ff[21]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[22] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[22]),
        .Q(dest_hsdata_ff[22]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[23] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[23]),
        .Q(dest_hsdata_ff[23]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[24] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[24]),
        .Q(dest_hsdata_ff[24]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[25] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[25]),
        .Q(dest_hsdata_ff[25]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[2] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[2]),
        .Q(dest_hsdata_ff[2]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[3] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[3]),
        .Q(dest_hsdata_ff[3]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[4] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[4]),
        .Q(dest_hsdata_ff[4]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[5] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[5]),
        .Q(dest_hsdata_ff[5]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[6] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[6]),
        .Q(dest_hsdata_ff[6]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[7] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[7]),
        .Q(dest_hsdata_ff[7]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[8] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[8]),
        .Q(dest_hsdata_ff[8]),
        .R(1'b0));
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[9] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff[9]),
        .Q(dest_hsdata_ff[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \src_hsdata_ff[25]_i_1 
       (.I0(src_sendd_ff),
        .O(p_0_in));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[0]),
        .Q(src_hsdata_ff[0]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[10] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[10]),
        .Q(src_hsdata_ff[10]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[11] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[11]),
        .Q(src_hsdata_ff[11]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[12] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[12]),
        .Q(src_hsdata_ff[12]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[13] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[13]),
        .Q(src_hsdata_ff[13]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[14] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[14]),
        .Q(src_hsdata_ff[14]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[15] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[15]),
        .Q(src_hsdata_ff[15]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[16] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[16]),
        .Q(src_hsdata_ff[16]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[17] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[17]),
        .Q(src_hsdata_ff[17]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[18] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[18]),
        .Q(src_hsdata_ff[18]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[19] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[19]),
        .Q(src_hsdata_ff[19]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[1] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[1]),
        .Q(src_hsdata_ff[1]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[20] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[20]),
        .Q(src_hsdata_ff[20]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[21] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[21]),
        .Q(src_hsdata_ff[21]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[22] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[22]),
        .Q(src_hsdata_ff[22]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[23] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[23]),
        .Q(src_hsdata_ff[23]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[24] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[24]),
        .Q(src_hsdata_ff[24]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[25] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[25]),
        .Q(src_hsdata_ff[25]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[2] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[2]),
        .Q(src_hsdata_ff[2]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[3] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[3]),
        .Q(src_hsdata_ff[3]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[4] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[4]),
        .Q(src_hsdata_ff[4]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[5] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[5]),
        .Q(src_hsdata_ff[5]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[6] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[6]),
        .Q(src_hsdata_ff[6]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[7] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[7]),
        .Q(src_hsdata_ff[7]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[8] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[8]),
        .Q(src_hsdata_ff[8]),
        .R(1'b0));
  FDRE \src_hsdata_ff_reg[9] 
       (.C(src_clk),
        .CE(p_0_in),
        .D(src_in[9]),
        .Q(src_hsdata_ff[9]),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__251 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__250 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__1
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__156 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__155 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__10
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__174 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__173 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__11
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__176 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__175 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__12
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__178 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__177 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__13
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__180 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__179 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__14
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__182 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__181 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__15
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__184 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__183 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__16
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__186 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__185 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__17
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__188 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__187 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__18
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__190 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__189 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__19
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__192 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__191 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__2
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__158 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__157 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__20
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__194 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__193 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__21
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__196 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__195 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__22
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__198 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__197 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__23
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__200 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__199 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__24
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__202 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__201 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__25
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__204 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__203 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__26
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__206 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__205 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__27
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__208 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__207 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__28
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__210 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__209 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__29
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__212 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__211 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__3
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__160 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__159 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__30
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__214 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__213 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__31
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__216 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__215 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__32
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__218 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__217 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__33
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__220 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__219 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__34
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__222 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__221 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__35
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__224 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__223 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__36
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__226 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__225 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__37
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__228 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__227 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__38
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__230 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__229 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__39
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__232 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__231 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__4
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__162 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__161 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__40
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__234 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__233 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__41
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__236 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__235 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__42
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__238 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__237 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__43
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__240 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__239 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__44
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__242 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__241 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__5
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__164 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__163 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__6
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__166 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__165 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__7
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__168 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__167 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__8
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__170 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__169 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_EXT_HSK = "0" *) (* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) 
(* ORIG_REF_NAME = "xpm_cdc_handshake" *) (* SIM_ASSERT_CHK = "0" *) (* SRC_SYNC_FF = "3" *) 
(* VERSION = "0" *) (* WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* keep_hierarchy = "true" *) (* xpm_cdc = "HANDSHAKE" *) 
module bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__9
   (src_clk,
    src_in,
    src_send,
    src_rcv,
    dest_clk,
    dest_out,
    dest_req,
    dest_ack);
  input src_clk;
  input [0:0]src_in;
  input src_send;
  output src_rcv;
  input dest_clk;
  output [0:0]dest_out;
  output dest_req;
  input dest_ack;

  wire dest_clk;
  (* DIRECT_ENABLE *) wire dest_hsdata_en;
  (* RTL_KEEP = "true" *) (* xpm_cdc = "HANDSHAKE" *) wire dest_hsdata_ff;
  wire dest_req;
  wire dest_req_ff;
  wire dest_req_nxt;
  wire src_clk;
  wire src_hsdata_ff;
  wire \src_hsdata_ff[0]_i_1_n_0 ;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  wire src_sendd_ff;

  assign dest_out[0] = dest_hsdata_ff;
  (* KEEP = "true" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  FDRE \dest_hsdata_ff_reg[0] 
       (.C(dest_clk),
        .CE(dest_hsdata_en),
        .D(src_hsdata_ff),
        .Q(dest_hsdata_ff),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    dest_req_ext_ff_i_1
       (.I0(dest_req_nxt),
        .I1(dest_req_ff),
        .O(dest_hsdata_en));
  FDRE dest_req_ext_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_hsdata_en),
        .Q(dest_req),
        .R(1'b0));
  FDRE dest_req_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_req_nxt),
        .Q(dest_req_ff),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \src_hsdata_ff[0]_i_1 
       (.I0(src_hsdata_ff),
        .I1(src_sendd_ff),
        .I2(src_in),
        .O(\src_hsdata_ff[0]_i_1_n_0 ));
  FDRE \src_hsdata_ff_reg[0] 
       (.C(src_clk),
        .CE(1'b1),
        .D(\src_hsdata_ff[0]_i_1_n_0 ),
        .Q(src_hsdata_ff),
        .R(1'b0));
  FDRE src_sendd_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_send),
        .Q(src_sendd_ff),
        .R(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__172 xpm_cdc_single_dest2src_inst
       (.dest_clk(src_clk),
        .dest_out(src_rcv),
        .src_clk(dest_clk),
        .src_in(dest_req_ff));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__171 xpm_cdc_single_src2dest_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_req_nxt),
        .src_clk(src_clk),
        .src_in(src_sendd_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_pulse" *) 
(* REG_OUTPUT = "0" *) (* RST_USED = "1" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "PULSE" *) 
module bd_d10d_rx_0_xpm_cdc_pulse
   (src_clk,
    src_pulse,
    dest_clk,
    src_rst,
    dest_rst,
    dest_pulse);
  input src_clk;
  input src_pulse;
  input dest_clk;
  input src_rst;
  input dest_rst;
  output dest_pulse;

  wire dest_clk;
  wire dest_event_ff;
  wire dest_event_ff_i_1_n_0;
  wire dest_pulse;
  wire dest_rst;
  wire dest_sync_out;
  wire src_clk;
  wire src_in_ff;
  wire src_level_ff;
  wire src_level_nxt;
  wire src_pulse;
  wire src_rst;

  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_event_ff_i_1
       (.I0(dest_sync_out),
        .I1(dest_rst),
        .O(dest_event_ff_i_1_n_0));
  FDRE dest_event_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_event_ff_i_1_n_0),
        .Q(dest_event_ff),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    dest_pulse_INST_0
       (.I0(dest_event_ff),
        .I1(dest_rst),
        .I2(dest_sync_out),
        .O(dest_pulse));
  FDRE src_in_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_pulse),
        .Q(src_in_ff),
        .R(src_rst));
  LUT3 #(
    .INIT(8'hB4)) 
    src_level_ff_i_1
       (.I0(src_in_ff),
        .I1(src_pulse),
        .I2(src_level_ff),
        .O(src_level_nxt));
  FDRE #(
    .INIT(1'b0)) 
    src_level_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_level_nxt),
        .Q(src_level_ff),
        .R(src_rst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__257 xpm_cdc_single_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_sync_out),
        .src_clk(src_clk),
        .src_in(src_level_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_pulse" *) 
(* REG_OUTPUT = "0" *) (* RST_USED = "1" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "PULSE" *) 
module bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__1
   (src_clk,
    src_pulse,
    dest_clk,
    src_rst,
    dest_rst,
    dest_pulse);
  input src_clk;
  input src_pulse;
  input dest_clk;
  input src_rst;
  input dest_rst;
  output dest_pulse;

  wire dest_clk;
  wire dest_event_ff;
  wire dest_event_ff_i_1_n_0;
  wire dest_pulse;
  wire dest_rst;
  wire dest_sync_out;
  wire src_clk;
  wire src_in_ff;
  wire src_level_ff;
  wire src_level_nxt;
  wire src_pulse;
  wire src_rst;

  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_event_ff_i_1
       (.I0(dest_sync_out),
        .I1(dest_rst),
        .O(dest_event_ff_i_1_n_0));
  FDRE dest_event_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_event_ff_i_1_n_0),
        .Q(dest_event_ff),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    dest_pulse_INST_0
       (.I0(dest_event_ff),
        .I1(dest_rst),
        .I2(dest_sync_out),
        .O(dest_pulse));
  FDRE src_in_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_pulse),
        .Q(src_in_ff),
        .R(src_rst));
  LUT3 #(
    .INIT(8'hB4)) 
    src_level_ff_i_1
       (.I0(src_in_ff),
        .I1(src_pulse),
        .I2(src_level_ff),
        .O(src_level_nxt));
  FDRE #(
    .INIT(1'b0)) 
    src_level_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_level_nxt),
        .Q(src_level_ff),
        .R(src_rst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__132 xpm_cdc_single_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_sync_out),
        .src_clk(src_clk),
        .src_in(src_level_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_pulse" *) 
(* REG_OUTPUT = "0" *) (* RST_USED = "1" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "PULSE" *) 
module bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__2
   (src_clk,
    src_pulse,
    dest_clk,
    src_rst,
    dest_rst,
    dest_pulse);
  input src_clk;
  input src_pulse;
  input dest_clk;
  input src_rst;
  input dest_rst;
  output dest_pulse;

  wire dest_clk;
  wire dest_event_ff;
  wire dest_event_ff_i_1_n_0;
  wire dest_pulse;
  wire dest_rst;
  wire dest_sync_out;
  wire src_clk;
  wire src_in_ff;
  wire src_level_ff;
  wire src_level_nxt;
  wire src_pulse;
  wire src_rst;

  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_event_ff_i_1
       (.I0(dest_sync_out),
        .I1(dest_rst),
        .O(dest_event_ff_i_1_n_0));
  FDRE dest_event_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_event_ff_i_1_n_0),
        .Q(dest_event_ff),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    dest_pulse_INST_0
       (.I0(dest_event_ff),
        .I1(dest_rst),
        .I2(dest_sync_out),
        .O(dest_pulse));
  FDRE src_in_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_pulse),
        .Q(src_in_ff),
        .R(src_rst));
  LUT3 #(
    .INIT(8'hB4)) 
    src_level_ff_i_1
       (.I0(src_in_ff),
        .I1(src_pulse),
        .I2(src_level_ff),
        .O(src_level_nxt));
  FDRE #(
    .INIT(1'b0)) 
    src_level_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_level_nxt),
        .Q(src_level_ff),
        .R(src_rst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__254 xpm_cdc_single_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_sync_out),
        .src_clk(src_clk),
        .src_in(src_level_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_pulse" *) 
(* REG_OUTPUT = "0" *) (* RST_USED = "1" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "PULSE" *) 
module bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__3
   (src_clk,
    src_pulse,
    dest_clk,
    src_rst,
    dest_rst,
    dest_pulse);
  input src_clk;
  input src_pulse;
  input dest_clk;
  input src_rst;
  input dest_rst;
  output dest_pulse;

  wire dest_clk;
  wire dest_event_ff;
  wire dest_event_ff_i_1_n_0;
  wire dest_pulse;
  wire dest_rst;
  wire dest_sync_out;
  wire src_clk;
  wire src_in_ff;
  wire src_level_ff;
  wire src_level_nxt;
  wire src_pulse;
  wire src_rst;

  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_event_ff_i_1
       (.I0(dest_sync_out),
        .I1(dest_rst),
        .O(dest_event_ff_i_1_n_0));
  FDRE dest_event_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_event_ff_i_1_n_0),
        .Q(dest_event_ff),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    dest_pulse_INST_0
       (.I0(dest_event_ff),
        .I1(dest_rst),
        .I2(dest_sync_out),
        .O(dest_pulse));
  FDRE src_in_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_pulse),
        .Q(src_in_ff),
        .R(src_rst));
  LUT3 #(
    .INIT(8'hB4)) 
    src_level_ff_i_1
       (.I0(src_in_ff),
        .I1(src_pulse),
        .I2(src_level_ff),
        .O(src_level_nxt));
  FDRE #(
    .INIT(1'b0)) 
    src_level_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_level_nxt),
        .Q(src_level_ff),
        .R(src_rst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__255 xpm_cdc_single_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_sync_out),
        .src_clk(src_clk),
        .src_in(src_level_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_pulse" *) 
(* REG_OUTPUT = "0" *) (* RST_USED = "1" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "PULSE" *) 
module bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__4
   (src_clk,
    src_pulse,
    dest_clk,
    src_rst,
    dest_rst,
    dest_pulse);
  input src_clk;
  input src_pulse;
  input dest_clk;
  input src_rst;
  input dest_rst;
  output dest_pulse;

  wire dest_clk;
  wire dest_event_ff;
  wire dest_event_ff_i_1_n_0;
  wire dest_pulse;
  wire dest_rst;
  wire dest_sync_out;
  wire src_clk;
  wire src_in_ff;
  wire src_level_ff;
  wire src_level_nxt;
  wire src_pulse;
  wire src_rst;

  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dest_event_ff_i_1
       (.I0(dest_sync_out),
        .I1(dest_rst),
        .O(dest_event_ff_i_1_n_0));
  FDRE dest_event_ff_reg
       (.C(dest_clk),
        .CE(1'b1),
        .D(dest_event_ff_i_1_n_0),
        .Q(dest_event_ff),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    dest_pulse_INST_0
       (.I0(dest_event_ff),
        .I1(dest_rst),
        .I2(dest_sync_out),
        .O(dest_pulse));
  FDRE src_in_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_pulse),
        .Q(src_in_ff),
        .R(src_rst));
  LUT3 #(
    .INIT(8'hB4)) 
    src_level_ff_i_1
       (.I0(src_in_ff),
        .I1(src_pulse),
        .I2(src_level_ff),
        .O(src_level_nxt));
  FDRE #(
    .INIT(1'b0)) 
    src_level_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_level_nxt),
        .Q(src_level_ff),
        .R(src_rst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__256 xpm_cdc_single_inst
       (.dest_clk(dest_clk),
        .dest_out(dest_sync_out),
        .src_clk(src_clk),
        .src_in(src_level_ff));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__129
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__130
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__131
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__132
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__133
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__134
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__135
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__136
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__137
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__138
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__139
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__140
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__141
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__142
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__143
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__144
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__145
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__146
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__147
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__148
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__149
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__150
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__151
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__152
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__153
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__154
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__155
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__156
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__157
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__158
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__159
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__160
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__161
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__162
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__163
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__164
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__165
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__166
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__167
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__168
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__169
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__170
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__171
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__172
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__173
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__174
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__175
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__176
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__177
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__178
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__179
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__180
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__181
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__182
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__183
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__184
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__185
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__186
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__187
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__188
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__189
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__190
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__191
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__192
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__193
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__194
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__195
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__196
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__197
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__198
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__199
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__200
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__201
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__202
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__203
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__204
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__205
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__206
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__207
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__208
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__209
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__210
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__211
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__212
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__213
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__214
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__215
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__216
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__217
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__218
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__219
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__220
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__221
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__222
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__223
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__224
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__225
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__226
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__227
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__228
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__229
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__230
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__231
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__232
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__233
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__234
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__235
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__236
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__237
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__238
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__239
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__240
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__241
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__242
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__243
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__244
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__245
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__246
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__247
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__248
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__249
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__250
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__251
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__252
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__253
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__254
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__255
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__256
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__257
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "0" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__258
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "1" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__parameterized0
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire [0:0]p_0_in;
  wire src_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  FDRE src_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(p_0_in),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEST_SYNC_FF = "3" *) (* INIT_SYNC_FF = "0" *) (* ORIG_REF_NAME = "xpm_cdc_single" *) 
(* SIM_ASSERT_CHK = "0" *) (* SRC_INPUT_REG = "1" *) (* VERSION = "0" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) (* xpm_cdc = "SINGLE" *) 
module bd_d10d_rx_0_xpm_cdc_single__parameterized0__2
   (src_clk,
    src_in,
    dest_clk,
    dest_out);
  input src_clk;
  input src_in;
  input dest_clk;
  output dest_out;

  wire dest_clk;
  wire [0:0]p_0_in;
  wire src_clk;
  wire src_in;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SINGLE" *) wire [2:0]syncstages_ff;

  assign dest_out = syncstages_ff[2];
  FDRE src_ff_reg
       (.C(src_clk),
        .CE(1'b1),
        .D(src_in),
        .Q(p_0_in),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SINGLE" *) 
  FDRE \syncstages_ff_reg[2] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[1]),
        .Q(syncstages_ff[2]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_sync_rst
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [1:0]syncstages_ff;

  assign dest_rst = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_sync_rst__4
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [1:0]syncstages_ff;

  assign dest_rst = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_sync_rst__5
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [1:0]syncstages_ff;

  assign dest_rst = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* DEF_VAL = "1'b0" *) (* DEST_SYNC_FF = "2" *) (* INIT = "0" *) 
(* INIT_SYNC_FF = "1" *) (* ORIG_REF_NAME = "xpm_cdc_sync_rst" *) (* SIM_ASSERT_CHK = "0" *) 
(* VERSION = "0" *) (* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "true" *) 
(* xpm_cdc = "SYNC_RST" *) 
module bd_d10d_rx_0_xpm_cdc_sync_rst__6
   (src_rst,
    dest_clk,
    dest_rst);
  input src_rst;
  input dest_clk;
  output dest_rst;

  wire dest_clk;
  wire src_rst;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* xpm_cdc = "SYNC_RST" *) wire [1:0]syncstages_ff;

  assign dest_rst = syncstages_ff[1];
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[0] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(src_rst),
        .Q(syncstages_ff[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "true" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  FDRE #(
    .INIT(1'b0)) 
    \syncstages_ff_reg[1] 
       (.C(dest_clk),
        .CE(1'b1),
        .D(syncstages_ff[0]),
        .Q(syncstages_ff[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn
   (Q,
    S,
    DI,
    ram_empty_i,
    \count_value_i_reg[0]_0 ,
    rd_en,
    \gwdc.wr_data_count_i_reg[11]_i_2 ,
    \gwdc.wr_data_count_i_reg[11]_i_2_0 ,
    SR,
    wr_clk);
  output [0:0]Q;
  output [1:0]S;
  output [0:0]DI;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input [1:0]\gwdc.wr_data_count_i_reg[11]_i_2 ;
  input [1:0]\gwdc.wr_data_count_i_reg[11]_i_2_0 ;
  input [0:0]SR;
  input wr_clk;

  wire [0:0]DI;
  wire [0:0]Q;
  wire [1:0]S;
  wire [0:0]SR;
  wire [0:0]count_value_i;
  wire \count_value_i[0]_i_1__4_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire \gen_fwft.count_en ;
  wire [1:0]\gwdc.wr_data_count_i_reg[11]_i_2 ;
  wire [1:0]\gwdc.wr_data_count_i_reg[11]_i_2_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__4 
       (.I0(count_value_i),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[0]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__4_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[0]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[0]_0 [0]),
        .I5(count_value_i),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__4_n_0 ),
        .Q(count_value_i),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q),
        .R(SR));
  (* HLUTNM = "lutpair0" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \gwdc.wr_data_count_i[11]_i_16 
       (.I0(count_value_i),
        .I1(\gwdc.wr_data_count_i_reg[11]_i_2 [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9669)) 
    \gwdc.wr_data_count_i[11]_i_23 
       (.I0(DI),
        .I1(\gwdc.wr_data_count_i_reg[11]_i_2 [1]),
        .I2(Q),
        .I3(\gwdc.wr_data_count_i_reg[11]_i_2_0 [1]),
        .O(S[1]));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \gwdc.wr_data_count_i[11]_i_24 
       (.I0(count_value_i),
        .I1(\gwdc.wr_data_count_i_reg[11]_i_2 [0]),
        .I2(\gwdc.wr_data_count_i_reg[11]_i_2_0 [0]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn_13
   (Q,
    D,
    ram_empty_i,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \gwdc.wr_data_count_i_reg[0] ,
    \gwdc.wr_data_count_i_reg[0]_0 ,
    SR,
    wr_clk);
  output [1:0]Q;
  output [0:0]D;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\gwdc.wr_data_count_i_reg[0] ;
  input [0:0]\gwdc.wr_data_count_i_reg[0]_0 ;
  input [0:0]SR;
  input wr_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire \gen_fwft.count_en ;
  wire [0:0]\gwdc.wr_data_count_i_reg[0] ;
  wire [0:0]\gwdc.wr_data_count_i_reg[0]_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT3 #(
    .INIT(8'h96)) 
    \gwdc.wr_data_count_i[0]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[0] ),
        .I2(\gwdc.wr_data_count_i_reg[0]_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn_8
   (Q,
    D,
    ram_empty_i,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \gwdc.wr_data_count_i_reg[0] ,
    \gwdc.wr_data_count_i_reg[0]_0 ,
    SR,
    wr_clk);
  output [1:0]Q;
  output [0:0]D;
  input ram_empty_i;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\gwdc.wr_data_count_i_reg[0] ;
  input [0:0]\gwdc.wr_data_count_i_reg[0]_0 ;
  input [0:0]SR;
  input wr_clk;

  wire [0:0]D;
  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_3_n_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire \gen_fwft.count_en ;
  wire [0:0]\gwdc.wr_data_count_i_reg[0] ;
  wire [0:0]\gwdc.wr_data_count_i_reg[0]_0 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT5 #(
    .INIT(32'h5AAAA655)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(\count_value_i_reg[1]_0 [1]),
        .I4(ram_empty_i),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT4 #(
    .INIT(16'hC02F)) 
    \count_value_i[1]_i_2 
       (.I0(\count_value_i_reg[1]_0 [0]),
        .I1(rd_en),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(ram_empty_i),
        .O(\gen_fwft.count_en ));
  LUT6 #(
    .INIT(64'hA999A9A96AAA6AAA)) 
    \count_value_i[1]_i_3 
       (.I0(Q[1]),
        .I1(ram_empty_i),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(rd_en),
        .I4(\count_value_i_reg[1]_0 [0]),
        .I5(Q[0]),
        .O(\count_value_i[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\gen_fwft.count_en ),
        .D(\count_value_i[1]_i_3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  LUT3 #(
    .INIT(8'h96)) 
    \gwdc.wr_data_count_i[0]_i_1 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[0] ),
        .I2(\gwdc.wr_data_count_i_reg[0]_0 ),
        .O(D));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized0
   (D,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    p_14_in,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[2] ,
    \count_value_i_reg[0]_1 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[4]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output [1:0]\count_value_i_reg[3]_0 ;
  output \count_value_i_reg[0]_0 ;
  output [2:0]\count_value_i_reg[4]_0 ;
  input [4:0]\grdc.rd_data_count_i_reg[4] ;
  input p_14_in;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  input [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_0 ;
  input [1:0]\grdc.rd_data_count_i_reg[2] ;
  input [1:0]\count_value_i_reg[0]_1 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[4]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [3:0]Q;
  wire [4:4]count_value_i;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[0]_1 ;
  wire [1:0]\count_value_i_reg[3]_0 ;
  wire [2:0]\count_value_i_reg[4]_0 ;
  wire [0:0]\count_value_i_reg[4]_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  wire [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[2] ;
  wire [4:0]\grdc.rd_data_count_i_reg[4] ;
  wire \grdc.rd_data_count_i_reg[4]_0 ;
  wire \gwdc.wr_data_count_i[2]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire p_14_in;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(\count_value_i_reg[0]_1 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__1 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(count_value_i),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(count_value_i),
        .R(\count_value_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5DFF55550455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[4] [2]),
        .I3(\grdc.rd_data_count_i_reg[4] [3]),
        .I4(Q[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hD4D444D4DDDDD4DD)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [0]),
        .I3(p_14_in),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I4(Q[1]),
        .O(\count_value_i_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [3]),
        .I3(Q[3]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(\count_value_i_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000900090909990)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I3(ram_wr_en_pf),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[2] [1]),
        .I5(\grdc.rd_data_count_i_reg[4] [1]),
        .O(\count_value_i_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \gwdc.wr_data_count_i[2]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(Q[0]),
        .I4(\grdc.rd_data_count_i_reg[2] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gwdc.wr_data_count_i[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [3]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(\count_value_i_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4]_0 ),
        .I2(\grdc.rd_data_count_i_reg[4] [4]),
        .I3(count_value_i),
        .I4(\grdc.rd_data_count_i_reg[4] [3]),
        .I5(Q[3]),
        .O(\count_value_i_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hF999FFF990009990)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .I4(Q[1]),
        .I5(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized0_10
   (D,
    Q,
    ram_empty_i0,
    leaving_empty0,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[2]_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ,
    ram_wr_en_pf,
    read_only,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[1] ,
    \count_value_i_reg[0]_1 ,
    wr_clk);
  output [1:0]D;
  output [4:0]Q;
  output ram_empty_i0;
  output leaving_empty0;
  output [0:0]\count_value_i_reg[0]_0 ;
  output \count_value_i_reg[2]_0 ;
  input [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  input ram_wr_en_pf;
  input read_only;
  input ram_empty_i;
  input [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input [0:0]\count_value_i_reg[0]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[2]_0 ;
  wire [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  wire going_empty1;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire read_only;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I2(Q[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I4(Q[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(leaving_empty0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I1(going_empty1),
        .I2(leaving_empty0),
        .I3(ram_wr_en_pf),
        .I4(ram_empty_i),
        .O(ram_empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .O(going_empty1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6966666669666966)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ),
        .I5(ram_wr_en_pf),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(read_only),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I3(Q[1]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[1] [1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(\count_value_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized0_14
   (D,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4] ,
    p_14_in,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[4]_0 ,
    \grdc.rd_data_count_i_reg[2] ,
    \count_value_i_reg[0]_1 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[4]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output [1:0]\count_value_i_reg[3]_0 ;
  output \count_value_i_reg[0]_0 ;
  output [2:0]\count_value_i_reg[4]_0 ;
  input [4:0]\grdc.rd_data_count_i_reg[4] ;
  input p_14_in;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  input [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  input \grdc.rd_data_count_i_reg[4]_0 ;
  input [1:0]\grdc.rd_data_count_i_reg[2] ;
  input [1:0]\count_value_i_reg[0]_1 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[4]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [3:0]Q;
  wire [4:4]count_value_i;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[0]_1 ;
  wire [1:0]\count_value_i_reg[3]_0 ;
  wire [2:0]\count_value_i_reg[4]_0 ;
  wire [0:0]\count_value_i_reg[4]_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ;
  wire [3:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[2] ;
  wire [4:0]\grdc.rd_data_count_i_reg[4] ;
  wire \grdc.rd_data_count_i_reg[4]_0 ;
  wire \gwdc.wr_data_count_i[2]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[4]_i_2_n_0 ;
  wire p_14_in;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(\count_value_i_reg[0]_1 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__1 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(count_value_i),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[4]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(count_value_i),
        .R(\count_value_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(Q[1]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF5DFF55550455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] ),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 ),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\grdc.rd_data_count_i_reg[4] [2]),
        .I3(\grdc.rd_data_count_i_reg[4] [3]),
        .I4(Q[3]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hD4D444D4DDDDD4DD)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[4] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [0]),
        .I3(p_14_in),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[3]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I4(Q[1]),
        .O(\count_value_i_reg[3]_0 [0]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [3]),
        .I3(Q[3]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(\count_value_i_reg[3]_0 [1]));
  LUT6 #(
    .INIT(64'h0000900090909990)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [1]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 [0]),
        .I3(ram_wr_en_pf),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(Q[0]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_1 [1]),
        .I1(\count_value_i_reg[0]_1 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT6 #(
    .INIT(64'h9696699669966969)) 
    \gwdc.wr_data_count_i[2]_i_1 
       (.I0(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\grdc.rd_data_count_i_reg[2] [1]),
        .I5(\grdc.rd_data_count_i_reg[4] [1]),
        .O(\count_value_i_reg[4]_0 [0]));
  LUT6 #(
    .INIT(64'h69FF696969690069)) 
    \gwdc.wr_data_count_i[2]_i_2 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[2] [1]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(Q[0]),
        .I4(\grdc.rd_data_count_i_reg[2] [0]),
        .I5(\grdc.rd_data_count_i_reg[4] [0]),
        .O(\gwdc.wr_data_count_i[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h69699669)) 
    \gwdc.wr_data_count_i[3]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4] [3]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[4] [2]),
        .I4(Q[2]),
        .O(\count_value_i_reg[4]_0 [1]));
  LUT6 #(
    .INIT(64'h1EE1788787781EE1)) 
    \gwdc.wr_data_count_i[4]_i_1 
       (.I0(\gwdc.wr_data_count_i[4]_i_2_n_0 ),
        .I1(\grdc.rd_data_count_i_reg[4]_0 ),
        .I2(\grdc.rd_data_count_i_reg[4] [4]),
        .I3(count_value_i),
        .I4(\grdc.rd_data_count_i_reg[4] [3]),
        .I5(Q[3]),
        .O(\count_value_i_reg[4]_0 [2]));
  LUT6 #(
    .INIT(64'hF999FFF990009990)) 
    \gwdc.wr_data_count_i[4]_i_2 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[4] [2]),
        .I2(\grdc.rd_data_count_i_reg[4] [1]),
        .I3(\grdc.rd_data_count_i_reg[2] [1]),
        .I4(Q[1]),
        .I5(\gwdc.wr_data_count_i[2]_i_2_n_0 ),
        .O(\gwdc.wr_data_count_i[4]_i_2_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized0_17
   (D,
    Q,
    ram_empty_i0,
    leaving_empty0,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[2]_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ,
    ram_wr_en_pf,
    read_only,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    \grdc.rd_data_count_i_reg[1] ,
    \count_value_i_reg[0]_1 ,
    wr_clk);
  output [1:0]D;
  output [4:0]Q;
  output ram_empty_i0;
  output leaving_empty0;
  output [0:0]\count_value_i_reg[0]_0 ;
  output \count_value_i_reg[2]_0 ;
  input [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  input ram_wr_en_pf;
  input read_only;
  input ram_empty_i;
  input [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  input [1:0]\grdc.rd_data_count_i_reg[1] ;
  input [0:0]\count_value_i_reg[0]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire [0:0]\count_value_i_reg[0]_1 ;
  wire \count_value_i_reg[2]_0 ;
  wire [3:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire [3:0]\gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ;
  wire going_empty1;
  wire [1:0]\grdc.rd_data_count_i_reg[1] ;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire read_only;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h8200000000008200)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I2(Q[1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I4(Q[0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(leaving_empty0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [3]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I1(going_empty1),
        .I2(leaving_empty0),
        .I3(ram_wr_en_pf),
        .I4(ram_empty_i),
        .O(ram_empty_i0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h90)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .O(going_empty1));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6966666669666966)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 ),
        .I5(ram_wr_en_pf),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'hD42B2BD4)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[1]_i_1 
       (.I0(Q[0]),
        .I1(read_only),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .I3(Q[1]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hC33C96696996C33C)) 
    \gwdc.wr_data_count_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\grdc.rd_data_count_i_reg[1] [1]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [1]),
        .I4(\grdc.rd_data_count_i_reg[1] [0]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [0]),
        .O(\count_value_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[4]_i_3 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 [2]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized1
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[1]_1 ,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\count_value_i_reg[1]_1 ;
  input \count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized1_11
   (D,
    Q,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[3]_0 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \count_value_i_reg[1]_0 ;
  output \count_value_i_reg[3]_0 ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  input [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  wire ram_wr_en_pf;
  wire wr_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[2]_i_1 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized1_15
   (Q,
    \count_value_i_reg[1]_0 ,
    rd_en,
    \count_value_i_reg[1]_1 ,
    \count_value_i_reg[0]_0 ,
    wr_clk);
  output [3:0]Q;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input [0:0]\count_value_i_reg[1]_1 ;
  input \count_value_i_reg[0]_0 ;
  input wr_clk;

  wire [3:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized1_18
   (D,
    Q,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[3]_0 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [1:0]D;
  output [3:0]Q;
  output \count_value_i_reg[1]_0 ;
  output \count_value_i_reg[3]_0 ;
  input ram_wr_en_pf;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  input [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [1:0]D;
  wire [3:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire \count_value_i_reg[3]_0 ;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ;
  wire ram_wr_en_pf;
  wire wr_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]),
        .O(\count_value_i_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[1]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[2]_i_1 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .I5(Q[1]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[4]_i_3 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]),
        .O(\count_value_i_reg[1]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized4
   (Q,
    ram_wr_en_pf,
    wr_en,
    \count_value_i_reg[5]_0 ,
    \count_value_i_reg[0]_0 ,
    rst_d1,
    wr_clk);
  output [10:0]Q;
  input ram_wr_en_pf;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input [0:0]\count_value_i_reg[0]_0 ;
  input rst_d1;
  input wr_clk;

  wire [10:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[10]_i_1_n_0 ;
  wire \count_value_i[10]_i_2_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[6]_i_1_n_0 ;
  wire \count_value_i[6]_i_2_n_0 ;
  wire \count_value_i[7]_i_1_n_0 ;
  wire \count_value_i[8]_i_1_n_0 ;
  wire \count_value_i[9]_i_1_n_0 ;
  wire \count_value_i[9]_i_2_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire ram_wr_en_pf;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;

  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[10]_i_1 
       (.I0(Q[8]),
        .I1(\count_value_i[10]_i_2_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .I4(Q[10]),
        .O(\count_value_i[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[10]_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2_n_0 ),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\count_value_i[10]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(\count_value_i_reg[0]_0 ),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(ram_wr_en_pf),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[10] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[10]_i_1_n_0 ),
        .Q(Q[10]),
        .R(\count_value_i_reg[0]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized5
   (\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg ,
    DI,
    Q,
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ,
    ram_full_i0,
    leaving_empty0,
    S,
    \count_value_i_reg[1]_0 ,
    \count_value_i_reg[10]_0 ,
    \count_value_i_reg[6]_0 ,
    \count_value_i_reg[6]_1 ,
    \count_value_i_reg[7]_0 ,
    \count_value_i_reg[10]_1 ,
    almost_full,
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_0 ,
    rst,
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_1 ,
    ram_wr_en_pf,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gwdc.wr_data_count_i_reg[11]_i_2 ,
    \grdc.rd_data_count_i_reg[11] ,
    \count_value_i_reg[0]_0 ,
    rd_en,
    ram_empty_i,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_1 ,
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 ,
    \count_value_i_reg[11]_0 ,
    wr_clk);
  output \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg ;
  output [0:0]DI;
  output [10:0]Q;
  output \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  output ram_full_i0;
  output leaving_empty0;
  output [2:0]S;
  output [0:0]\count_value_i_reg[1]_0 ;
  output [3:0]\count_value_i_reg[10]_0 ;
  output [5:0]\count_value_i_reg[6]_0 ;
  output [4:0]\count_value_i_reg[6]_1 ;
  output [6:0]\count_value_i_reg[7]_0 ;
  output [2:0]\count_value_i_reg[10]_1 ;
  input almost_full;
  input \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_0 ;
  input rst;
  input \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_1 ;
  input ram_wr_en_pf;
  input [10:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]\gwdc.wr_data_count_i_reg[11]_i_2 ;
  input [11:0]\grdc.rd_data_count_i_reg[11] ;
  input [1:0]\count_value_i_reg[0]_0 ;
  input rd_en;
  input ram_empty_i;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_1 ;
  input [10:0]\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 ;
  input [0:0]\count_value_i_reg[11]_0 ;
  input wr_clk;

  wire [0:0]DI;
  wire \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ;
  wire [10:0]Q;
  wire [2:0]S;
  wire almost_full;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[10]_i_1__2_n_0 ;
  wire \count_value_i[11]_i_1__0_n_0 ;
  wire \count_value_i[11]_i_2__0_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i[5]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_1__2_n_0 ;
  wire \count_value_i[6]_i_2__2_n_0 ;
  wire \count_value_i[7]_i_1__2_n_0 ;
  wire \count_value_i[8]_i_1__2_n_0 ;
  wire \count_value_i[9]_i_1__2_n_0 ;
  wire \count_value_i[9]_i_2__2_n_0 ;
  wire [1:0]\count_value_i_reg[0]_0 ;
  wire [3:0]\count_value_i_reg[10]_0 ;
  wire [2:0]\count_value_i_reg[10]_1 ;
  wire [0:0]\count_value_i_reg[11]_0 ;
  wire [0:0]\count_value_i_reg[1]_0 ;
  wire [5:0]\count_value_i_reg[6]_0 ;
  wire [4:0]\count_value_i_reg[6]_1 ;
  wire [6:0]\count_value_i_reg[7]_0 ;
  wire \count_value_i_reg_n_0_[11] ;
  wire [10:0]\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_7_n_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_8_n_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_0 ;
  wire \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_1 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_10_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_8_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_9_n_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_1 ;
  wire [10:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] ;
  wire going_afull;
  wire going_full1;
  wire [11:0]\grdc.rd_data_count_i_reg[11] ;
  wire [0:0]\gwdc.wr_data_count_i_reg[11]_i_2 ;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_full_i0;
  wire ram_wr_en_pf;
  wire rd_en;
  wire rst;
  wire wr_clk;

  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(\count_value_i_reg[0]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[10]_i_1__2 
       (.I0(Q[8]),
        .I1(\count_value_i[11]_i_2__0_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .I4(Q[10]),
        .O(\count_value_i[10]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[11]_i_1__0 
       (.I0(Q[9]),
        .I1(Q[7]),
        .I2(\count_value_i[11]_i_2__0_n_0 ),
        .I3(Q[8]),
        .I4(Q[10]),
        .I5(\count_value_i_reg_n_0_[11] ),
        .O(\count_value_i[11]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[11]_i_2__0 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__2_n_0 ),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\count_value_i[11]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__2 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__2_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__2_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__2 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[0]_0 [1]),
        .I2(\count_value_i_reg[0]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__2 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2__2_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__2 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2__2_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1__2 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__2_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2__2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[10] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[10]_i_1__2_n_0 ),
        .Q(Q[10]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[11] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[11]_i_1__0_n_0 ),
        .Q(\count_value_i_reg_n_0_[11] ),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[5]_i_1__2_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[6]_i_1__2_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[7]_i_1__2_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[8]_i_1__2_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[11]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .D(\count_value_i[9]_i_1__2_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[11]_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAFF2A)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_1 
       (.I0(almost_full),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_0 ),
        .I2(going_full1),
        .I3(going_afull),
        .I4(rst),
        .I5(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_1 ),
        .O(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg ));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3 
       (.I0(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_5_n_0 ),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_6_n_0 ),
        .I2(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_7_n_0 ),
        .I3(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_8_n_0 ),
        .I4(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I5(ram_wr_en_pf),
        .O(going_afull));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_5 
       (.I0(Q[9]),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [9]),
        .I2(Q[10]),
        .I3(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [10]),
        .O(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_6 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [3]),
        .I2(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [4]),
        .I5(Q[4]),
        .O(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_7 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [0]),
        .I2(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_8 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [6]),
        .I2(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 [7]),
        .I5(Q[7]),
        .O(\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h0FFF0088)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(going_full1),
        .I2(leaving_empty0),
        .I3(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .O(ram_full_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_10 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[11] [3]),
        .I2(\grdc.rd_data_count_i_reg[11] [5]),
        .I3(Q[5]),
        .I4(\grdc.rd_data_count_i_reg[11] [4]),
        .I5(Q[4]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h8000008000000000)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ),
        .I3(Q[9]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [9]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_1 ),
        .O(going_full1));
  LUT6 #(
    .INIT(64'h8000008000000000)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_8_n_0 ),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_9_n_0 ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_10_n_0 ),
        .I3(Q[9]),
        .I4(\grdc.rd_data_count_i_reg[11] [9]),
        .I5(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .O(leaving_empty0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [6]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [8]),
        .I3(Q[8]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [7]),
        .I5(Q[7]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [0]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [3]),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [5]),
        .I3(Q[5]),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [4]),
        .I5(Q[4]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_8 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[11] [6]),
        .I2(\grdc.rd_data_count_i_reg[11] [8]),
        .I3(Q[8]),
        .I4(\grdc.rd_data_count_i_reg[11] [7]),
        .I5(Q[7]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_9 
       (.I0(Q[0]),
        .I1(\grdc.rd_data_count_i_reg[11] [0]),
        .I2(\grdc.rd_data_count_i_reg[11] [2]),
        .I3(Q[2]),
        .I4(\grdc.rd_data_count_i_reg[11] [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[10]_i_2 
       (.I0(Q[10]),
        .I1(\grdc.rd_data_count_i_reg[11] [10]),
        .O(\count_value_i_reg[10]_1 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[10]_i_3 
       (.I0(Q[9]),
        .I1(\grdc.rd_data_count_i_reg[11] [9]),
        .O(\count_value_i_reg[10]_1 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[10]_i_4 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[11] [8]),
        .O(\count_value_i_reg[10]_1 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_3 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[11] [7]),
        .O(\count_value_i_reg[7]_0 [6]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_4 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[11] [6]),
        .O(\count_value_i_reg[7]_0 [5]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_5 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[11] [5]),
        .O(\count_value_i_reg[7]_0 [4]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_6 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[11] [4]),
        .O(\count_value_i_reg[7]_0 [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_7 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[11] [3]),
        .O(\count_value_i_reg[7]_0 [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_8 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[11] [2]),
        .O(\count_value_i_reg[7]_0 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_9 
       (.I0(Q[1]),
        .I1(\grdc.rd_data_count_i_reg[11] [1]),
        .O(\count_value_i_reg[7]_0 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_4 
       (.I0(Q[9]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [9]),
        .I2(Q[10]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [10]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_5 
       (.I0(Q[8]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [8]),
        .I2(Q[9]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [9]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_6 
       (.I0(Q[7]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [7]),
        .I2(Q[8]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [8]),
        .O(S[0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_10 
       (.I0(Q[5]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [5]),
        .I2(Q[6]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [6]),
        .O(\count_value_i_reg[6]_0 [4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_11 
       (.I0(Q[4]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [4]),
        .I2(Q[5]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [5]),
        .O(\count_value_i_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_12 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [3]),
        .I2(Q[4]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [4]),
        .O(\count_value_i_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_13 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [2]),
        .I2(Q[3]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [3]),
        .O(\count_value_i_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_14 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [1]),
        .I2(Q[2]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [2]),
        .O(\count_value_i_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'h7510)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_8 
       (.I0(Q[0]),
        .I1(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [0]),
        .O(DI));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_9 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [6]),
        .I2(Q[7]),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] [7]),
        .O(\count_value_i_reg[6]_0 [5]));
  LUT4 #(
    .INIT(16'h00FD)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(\count_value_i_reg[0]_0 [1]),
        .I1(\count_value_i_reg[0]_0 [0]),
        .I2(rd_en),
        .I3(ram_empty_i),
        .O(\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] ));
  LUT3 #(
    .INIT(8'hD4)) 
    \gwdc.wr_data_count_i[11]_i_15 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[11]_i_2 ),
        .I2(\grdc.rd_data_count_i_reg[11] [1]),
        .O(\count_value_i_reg[1]_0 ));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_17 
       (.I0(Q[6]),
        .I1(\grdc.rd_data_count_i_reg[11] [6]),
        .I2(Q[7]),
        .I3(\grdc.rd_data_count_i_reg[11] [7]),
        .O(\count_value_i_reg[6]_1 [4]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_18 
       (.I0(Q[5]),
        .I1(\grdc.rd_data_count_i_reg[11] [5]),
        .I2(Q[6]),
        .I3(\grdc.rd_data_count_i_reg[11] [6]),
        .O(\count_value_i_reg[6]_1 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_19 
       (.I0(Q[4]),
        .I1(\grdc.rd_data_count_i_reg[11] [4]),
        .I2(Q[5]),
        .I3(\grdc.rd_data_count_i_reg[11] [5]),
        .O(\count_value_i_reg[6]_1 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_20 
       (.I0(Q[3]),
        .I1(\grdc.rd_data_count_i_reg[11] [3]),
        .I2(Q[4]),
        .I3(\grdc.rd_data_count_i_reg[11] [4]),
        .O(\count_value_i_reg[6]_1 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_21 
       (.I0(Q[2]),
        .I1(\grdc.rd_data_count_i_reg[11] [2]),
        .I2(Q[3]),
        .I3(\grdc.rd_data_count_i_reg[11] [3]),
        .O(\count_value_i_reg[6]_1 [0]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_6 
       (.I0(Q[10]),
        .I1(\grdc.rd_data_count_i_reg[11] [10]),
        .I2(\count_value_i_reg_n_0_[11] ),
        .I3(\grdc.rd_data_count_i_reg[11] [11]),
        .O(\count_value_i_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_7 
       (.I0(Q[9]),
        .I1(\grdc.rd_data_count_i_reg[11] [9]),
        .I2(Q[10]),
        .I3(\grdc.rd_data_count_i_reg[11] [10]),
        .O(\count_value_i_reg[10]_0 [2]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_8 
       (.I0(Q[8]),
        .I1(\grdc.rd_data_count_i_reg[11] [8]),
        .I2(Q[9]),
        .I3(\grdc.rd_data_count_i_reg[11] [9]),
        .O(\count_value_i_reg[10]_0 [1]));
  LUT4 #(
    .INIT(16'hB44B)) 
    \gwdc.wr_data_count_i[11]_i_9 
       (.I0(Q[7]),
        .I1(\grdc.rd_data_count_i_reg[11] [7]),
        .I2(Q[8]),
        .I3(\grdc.rd_data_count_i_reg[11] [8]),
        .O(\count_value_i_reg[10]_0 [0]));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized5_6
   (Q,
    ram_empty_i0,
    O,
    D,
    \count_value_i_reg[10]_0 ,
    ram_wr_en_pf,
    wr_en,
    \count_value_i_reg[5]_0 ,
    \count_value_i_reg[0]_0 ,
    rst_d1,
    \gen_pntr_flags_cc.ram_empty_i_reg ,
    leaving_empty0,
    ram_empty_i,
    \gen_pntr_flags_cc.ram_empty_i_reg_0 ,
    DI,
    S,
    \grdc.rd_data_count_i_reg[11] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] ,
    \gwdc.wr_data_count_i_reg[11]_i_2_0 ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 ,
    wr_clk);
  output [11:0]Q;
  output ram_empty_i0;
  output [0:0]O;
  output [10:0]D;
  output \count_value_i_reg[10]_0 ;
  input ram_wr_en_pf;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input [0:0]\count_value_i_reg[0]_0 ;
  input rst_d1;
  input \gen_pntr_flags_cc.ram_empty_i_reg ;
  input leaving_empty0;
  input ram_empty_i;
  input [10:0]\gen_pntr_flags_cc.ram_empty_i_reg_0 ;
  input [1:0]DI;
  input [6:0]S;
  input [3:0]\grdc.rd_data_count_i_reg[11] ;
  input [0:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ;
  input [7:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ;
  input [2:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] ;
  input [0:0]\gwdc.wr_data_count_i_reg[11]_i_2_0 ;
  input [9:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 ;
  input wr_clk;

  wire [10:0]D;
  wire [1:0]DI;
  wire [0:0]O;
  wire [11:0]Q;
  wire [6:0]S;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[10]_i_1__0_n_0 ;
  wire \count_value_i[11]_i_1_n_0 ;
  wire \count_value_i[11]_i_2_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_1__0_n_0 ;
  wire \count_value_i[6]_i_2__0_n_0 ;
  wire \count_value_i[7]_i_1__0_n_0 ;
  wire \count_value_i[8]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_1__0_n_0 ;
  wire \count_value_i[9]_i_2__0_n_0 ;
  wire [0:0]\count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[10]_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire [9:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_2_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_4_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_i_5_n_0 ;
  wire \gen_pntr_flags_cc.ram_empty_i_reg ;
  wire [10:0]\gen_pntr_flags_cc.ram_empty_i_reg_0 ;
  wire [2:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_n_6 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_n_7 ;
  wire [0:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ;
  wire [7:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_2 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_3 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_4 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_5 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_6 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_7 ;
  wire [3:0]\grdc.rd_data_count_i_reg[11] ;
  wire \gwdc.wr_data_count_i[11]_i_10_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_11_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_12_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_13_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_14_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_22_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[11]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_1_n_7 ;
  wire [0:0]\gwdc.wr_data_count_i_reg[11]_i_2_0 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_1 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_2 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_3 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_4 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_5 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_6 ;
  wire \gwdc.wr_data_count_i_reg[11]_i_2_n_7 ;
  wire leaving_empty0;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_wr_en_pf;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire [7:2]\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_O_UNCONNECTED ;
  wire [7:3]\NLW_gwdc.wr_data_count_i_reg[11]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[11]_i_1_O_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[11]_i_2_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[10]_i_1__0 
       (.I0(Q[8]),
        .I1(\count_value_i[11]_i_2_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .I4(Q[10]),
        .O(\count_value_i[10]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[11]_i_1 
       (.I0(Q[9]),
        .I1(Q[7]),
        .I2(\count_value_i[11]_i_2_n_0 ),
        .I3(Q[8]),
        .I4(Q[10]),
        .I5(Q[11]),
        .O(\count_value_i[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[11]_i_2 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__0_n_0 ),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\count_value_i[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__0_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__0_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__0 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(\count_value_i_reg[0]_0 ),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__0 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__0 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2__0_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1__0 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__0_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(ram_wr_en_pf),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[10] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[10]_i_1__0_n_0 ),
        .Q(Q[10]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[11] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[11]_i_1_n_0 ),
        .Q(Q[11]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[8]_i_1__0_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_11 
       (.I0(Q[10]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [9]),
        .O(\count_value_i_reg[10]_0 ));
  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ram_empty_i_i_1 
       (.I0(\gen_pntr_flags_cc.ram_empty_i_reg ),
        .I1(\gen_pntr_flags_cc.ram_empty_i_i_2_n_0 ),
        .I2(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ),
        .I3(leaving_empty0),
        .I4(ram_wr_en_pf),
        .I5(ram_empty_i),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_2 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg_0 [6]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg_0 [8]),
        .I3(Q[8]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg_0 [7]),
        .I5(Q[7]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \gen_pntr_flags_cc.ram_empty_i_i_3 
       (.I0(\gen_pntr_flags_cc.ram_empty_i_reg_0 [10]),
        .I1(Q[10]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg_0 [9]),
        .I3(Q[9]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_i_4_n_0 ),
        .I5(\gen_pntr_flags_cc.ram_empty_i_i_5_n_0 ),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_4 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg_0 [3]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg_0 [5]),
        .I3(Q[5]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg_0 [4]),
        .I5(Q[4]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pntr_flags_cc.ram_empty_i_i_5 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ram_empty_i_reg_0 [0]),
        .I2(\gen_pntr_flags_cc.ram_empty_i_reg_0 [2]),
        .I3(Q[2]),
        .I4(\gen_pntr_flags_cc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.ram_empty_i_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1 
       (.CI(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_CO_UNCONNECTED [7:2],\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_n_6 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[9:8]}),
        .O({\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10]_i_1_O_UNCONNECTED [7:3],D[10:8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY8 \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1 
       (.CI(Q[0]),
        .CI_TOP(1'b0),
        .CO({\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_1 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_2 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_3 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_4 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_5 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_6 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_i_1_n_7 }),
        .DI({Q[7:1],\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] }),
        .O(D[7:0]),
        .S(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_10 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [5]),
        .O(\gwdc.wr_data_count_i[11]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_11 
       (.I0(Q[5]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [4]),
        .O(\gwdc.wr_data_count_i[11]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_12 
       (.I0(Q[4]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [3]),
        .O(\gwdc.wr_data_count_i[11]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_13 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [2]),
        .O(\gwdc.wr_data_count_i[11]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_14 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [1]),
        .O(\gwdc.wr_data_count_i[11]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    \gwdc.wr_data_count_i[11]_i_22 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[11]_i_2_0 ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [0]),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [1]),
        .I4(Q[2]),
        .O(\gwdc.wr_data_count_i[11]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_3 
       (.I0(Q[9]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [8]),
        .O(\gwdc.wr_data_count_i[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_4 
       (.I0(Q[8]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [7]),
        .O(\gwdc.wr_data_count_i[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gwdc.wr_data_count_i[11]_i_5 
       (.I0(Q[7]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 [6]),
        .O(\gwdc.wr_data_count_i[11]_i_5_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[11]_i_1 
       (.CI(\gwdc.wr_data_count_i_reg[11]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[11]_i_1_CO_UNCONNECTED [7:3],\gwdc.wr_data_count_i_reg[11]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[11]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[11]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,\gwdc.wr_data_count_i[11]_i_3_n_0 ,\gwdc.wr_data_count_i[11]_i_4_n_0 ,\gwdc.wr_data_count_i[11]_i_5_n_0 }),
        .O({\NLW_gwdc.wr_data_count_i_reg[11]_i_1_O_UNCONNECTED [7:4],O,\NLW_gwdc.wr_data_count_i_reg[11]_i_1_O_UNCONNECTED [2:0]}),
        .S({1'b0,1'b0,1'b0,1'b0,\grdc.rd_data_count_i_reg[11] }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[11]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gwdc.wr_data_count_i_reg[11]_i_2_n_0 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_1 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_2 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_3 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_4 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_5 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_6 ,\gwdc.wr_data_count_i_reg[11]_i_2_n_7 }),
        .DI({\gwdc.wr_data_count_i[11]_i_10_n_0 ,\gwdc.wr_data_count_i[11]_i_11_n_0 ,\gwdc.wr_data_count_i[11]_i_12_n_0 ,\gwdc.wr_data_count_i[11]_i_13_n_0 ,\gwdc.wr_data_count_i[11]_i_14_n_0 ,DI,Q[0]}),
        .O(\NLW_gwdc.wr_data_count_i_reg[11]_i_2_O_UNCONNECTED [7:0]),
        .S({S[6:2],\gwdc.wr_data_count_i[11]_i_22_n_0 ,S[1:0]}));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized6
   (Q,
    \count_value_i_reg[0]_0 ,
    \count_value_i_reg[1]_0 ,
    rd_en,
    ram_empty_i,
    \count_value_i_reg[1]_1 ,
    wr_clk);
  output [10:0]Q;
  input \count_value_i_reg[0]_0 ;
  input [1:0]\count_value_i_reg[1]_0 ;
  input rd_en;
  input ram_empty_i;
  input [0:0]\count_value_i_reg[1]_1 ;
  input wr_clk;

  wire [10:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[10]_i_1__3_n_0 ;
  wire \count_value_i[10]_i_2__1_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_1__3_n_0 ;
  wire \count_value_i[6]_i_2__3_n_0 ;
  wire \count_value_i[7]_i_1__3_n_0 ;
  wire \count_value_i[8]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_1__3_n_0 ;
  wire \count_value_i[9]_i_2__3_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire [1:0]\count_value_i_reg[1]_0 ;
  wire [0:0]\count_value_i_reg[1]_1 ;
  wire ram_empty_i;
  wire rd_en;
  wire wr_clk;

  LUT4 #(
    .INIT(16'h10EF)) 
    \count_value_i[0]_i_1__3 
       (.I0(rd_en),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(\count_value_i_reg[1]_0 [1]),
        .I3(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[10]_i_1__3 
       (.I0(Q[8]),
        .I1(\count_value_i[10]_i_2__1_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .I4(Q[10]),
        .O(\count_value_i[10]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[10]_i_2__1 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__3_n_0 ),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\count_value_i[10]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h02FFFD00)) 
    \count_value_i[1]_i_1__3 
       (.I0(\count_value_i_reg[1]_0 [1]),
        .I1(\count_value_i_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(Q[0]),
        .I4(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__3 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__3_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__3_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h0000AAA200000000)) 
    \count_value_i[6]_i_2__3 
       (.I0(Q[1]),
        .I1(\count_value_i_reg[1]_0 [1]),
        .I2(\count_value_i_reg[1]_0 [0]),
        .I3(rd_en),
        .I4(ram_empty_i),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__3 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2__3_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__3 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2__3_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1__3 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__3_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2__3 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\count_value_i_reg[0]_0 ),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2__3_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[10] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[10]_i_1__3_n_0 ),
        .Q(Q[10]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[5]_i_1__3_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[6]_i_1__3_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[7]_i_1__3_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[8]_i_1__3_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[1]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(\count_value_i_reg[0]_0 ),
        .D(\count_value_i[9]_i_1__3_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[1]_1 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized6_7
   (Q,
    D,
    \count_value_i_reg[10]_0 ,
    ram_wr_en_pf,
    wr_en,
    \count_value_i_reg[5]_0 ,
    \count_value_i_reg[1]_0 ,
    rst_d1,
    DI,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] ,
    S,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 ,
    wr_clk);
  output [10:0]Q;
  output [10:0]D;
  output \count_value_i_reg[10]_0 ;
  input ram_wr_en_pf;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input [0:0]\count_value_i_reg[1]_0 ;
  input rst_d1;
  input [0:0]DI;
  input [5:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] ;
  input [2:0]S;
  input [9:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 ;
  input wr_clk;

  wire [10:0]D;
  wire [0:0]DI;
  wire [10:0]Q;
  wire [2:0]S;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[10]_i_1__1_n_0 ;
  wire \count_value_i[10]_i_2__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_1__1_n_0 ;
  wire \count_value_i[6]_i_2__1_n_0 ;
  wire \count_value_i[7]_i_1__1_n_0 ;
  wire \count_value_i[8]_i_1__1_n_0 ;
  wire \count_value_i[9]_i_1__1_n_0 ;
  wire \count_value_i[9]_i_2__1_n_0 ;
  wire \count_value_i_reg[10]_0 ;
  wire [0:0]\count_value_i_reg[1]_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire [9:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_15_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_16_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_2_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_4_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_5_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_6_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_7_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_n_6 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_n_7 ;
  wire [5:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_2 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_3 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_4 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_5 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_6 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_7 ;
  wire ram_wr_en_pf;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire [7:2]\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_CO_UNCONNECTED ;
  wire [7:3]\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[10]_i_1__1 
       (.I0(Q[8]),
        .I1(\count_value_i[10]_i_2__0_n_0 ),
        .I2(Q[7]),
        .I3(Q[9]),
        .I4(Q[10]),
        .O(\count_value_i[10]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[10]_i_2__0 
       (.I0(Q[6]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\count_value_i[6]_i_2__1_n_0 ),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\count_value_i[10]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__1 
       (.I0(Q[3]),
        .I1(\count_value_i[6]_i_2__1_n_0 ),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[6]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\count_value_i[6]_i_2__1_n_0 ),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(\count_value_i[6]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[6]_i_2__1 
       (.I0(Q[1]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(\count_value_i_reg[1]_0 ),
        .I4(rst_d1),
        .I5(Q[0]),
        .O(\count_value_i[6]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[7]_i_1__1 
       (.I0(Q[5]),
        .I1(\count_value_i[9]_i_2__1_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\count_value_i[7]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[8]_i_1__1 
       (.I0(Q[6]),
        .I1(\count_value_i[9]_i_2__1_n_0 ),
        .I2(Q[5]),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\count_value_i[8]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \count_value_i[9]_i_1__1 
       (.I0(Q[7]),
        .I1(Q[5]),
        .I2(\count_value_i[9]_i_2__1_n_0 ),
        .I3(Q[6]),
        .I4(Q[8]),
        .I5(Q[9]),
        .O(\count_value_i[9]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \count_value_i[9]_i_2__1 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(ram_wr_en_pf),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\count_value_i[9]_i_2__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .S(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[10] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[10]_i_1__1_n_0 ),
        .Q(Q[10]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[6] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[7] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[8] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[8]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(\count_value_i_reg[1]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[9] 
       (.C(wr_clk),
        .CE(ram_wr_en_pf),
        .D(\count_value_i[9]_i_1__1_n_0 ),
        .Q(Q[9]),
        .R(\count_value_i_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_7 
       (.I0(Q[10]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [9]),
        .O(\count_value_i_reg[10]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_2 
       (.I0(Q[8]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [8]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_3 
       (.I0(Q[7]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [7]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF75108AE08AEF751)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_15 
       (.I0(Q[0]),
        .I1(ram_wr_en_pf),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 ),
        .I3(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [0]),
        .I4(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [1]),
        .I5(Q[1]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9969)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_16 
       (.I0(Q[0]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [0]),
        .I2(ram_wr_en_pf),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_2 
       (.I0(Q[6]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [6]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_3 
       (.I0(Q[5]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [5]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_4 
       (.I0(Q[4]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [4]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_5 
       (.I0(Q[3]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [3]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_6 
       (.I0(Q[2]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [2]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_7 
       (.I0(Q[1]),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 [1]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_7_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1 
       (.CI(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_CO_UNCONNECTED [7:2],\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_n_6 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_2_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[11]_i_3_n_0 }),
        .O({\NLW_gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11]_i_1_O_UNCONNECTED [7:3],D[10:8]}),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,S}));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_1 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_2 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_3 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_4 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_5 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_6 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_i_1_n_7 }),
        .DI({\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_2_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_3_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_4_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_5_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_6_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_7_n_0 ,DI,1'b0}),
        .O(D[7:0]),
        .S({\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_15_n_0 ,\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q[8]_i_16_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized7
   (E,
    D,
    Q,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[4]_0 ,
    rd_en,
    \count_value_i_reg[5]_0 ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    \count_value_i_reg[5]_1 ,
    rd_clk);
  output [0:0]E;
  output [0:0]D;
  output [5:0]Q;
  output \gen_pf_ic_rc.ram_empty_i_reg ;
  output \count_value_i_reg[3]_0 ;
  output \count_value_i_reg[4]_0 ;
  input rd_en;
  input \count_value_i_reg[5]_0 ;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input \count_value_i_reg[5]_1 ;
  input rd_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_2__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \count_value_i_reg[5]_1 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \count_value_i[4]_i_2 
       (.I0(\count_value_i_reg[5]_0 ),
        .I1(rd_en),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(\count_value_i[5]_i_2__0_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \count_value_i[5]_i_2__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(rd_en),
        .O(\count_value_i[5]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(\count_value_i_reg[5]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(\count_value_i_reg[5]_1 ));
  LUT6 #(
    .INIT(64'h20F2DF0DDF0D20F2)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[5]_0 ),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_3 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .O(\count_value_i_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .O(\count_value_i_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[5]_0 ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized7_24
   (E,
    D,
    Q,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \count_value_i_reg[3]_0 ,
    \count_value_i_reg[4]_0 ,
    rd_en,
    \count_value_i_reg[5]_0 ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    SR,
    rd_clk);
  output [0:0]E;
  output [0:0]D;
  output [5:0]Q;
  output \gen_pf_ic_rc.ram_empty_i_reg ;
  output \count_value_i_reg[3]_0 ;
  output \count_value_i_reg[4]_0 ;
  input rd_en;
  input \count_value_i_reg[5]_0 ;
  input [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [0:0]SR;
  input rd_clk;

  wire [0:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__3_n_0 ;
  wire \count_value_i[1]_i_1__3_n_0 ;
  wire \count_value_i[2]_i_1__3_n_0 ;
  wire \count_value_i[3]_i_1__3_n_0 ;
  wire \count_value_i[4]_i_1__3_n_0 ;
  wire \count_value_i[5]_i_1__0_n_0 ;
  wire \count_value_i[5]_i_2__0_n_0 ;
  wire \count_value_i_reg[3]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire [3:0]\gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__3 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \count_value_i[4]_i_1__3 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\count_value_i[4]_i_1__3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \count_value_i[4]_i_2 
       (.I0(\count_value_i_reg[5]_0 ),
        .I1(rd_en),
        .O(\gen_pf_ic_rc.ram_empty_i_reg ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1__0 
       (.I0(\count_value_i[5]_i_2__0_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \count_value_i[5]_i_2__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(rd_en),
        .O(\count_value_i[5]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__3_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__3_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__3_n_0 ),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__3_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__3_n_0 ),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'h20F2DF0DDF0D20F2)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[1]_i_1 
       (.I0(rd_en),
        .I1(\count_value_i_reg[5]_0 ),
        .I2(Q[0]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_0 [0]),
        .I4(\gen_pf_ic_rc.ram_empty_i_reg_0 [1]),
        .I5(Q[1]),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_3 
       (.I0(Q[4]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .O(\count_value_i_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 [2]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_0 [3]),
        .O(\count_value_i_reg[3]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_sdpram.xpm_memory_base_inst_i_2 
       (.I0(rd_en),
        .I1(\count_value_i_reg[5]_0 ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized7_27
   (Q,
    D,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[5] ,
    E,
    wr_clk);
  output [5:0]Q;
  output [4:0]D;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [5:0]\gwdc.wr_data_count_i_reg[5] ;
  input [0:0]E;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [5:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[5]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[5]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_7_n_0 ;
  wire [5:0]\gwdc.wr_data_count_i_reg[5] ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;
  wire [7:5]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i[5]_i_2_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[5]_i_2 
       (.I0(Q[0]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[1]),
        .O(\count_value_i[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_2 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[5] [5]),
        .O(\gwdc.wr_data_count_i[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_3 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[5] [4]),
        .O(\gwdc.wr_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_4 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[5] [3]),
        .O(\gwdc.wr_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_5 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[5] [2]),
        .O(\gwdc.wr_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_6 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[5] [1]),
        .O(\gwdc.wr_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_7 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[5] [0]),
        .O(\gwdc.wr_data_count_i[5]_i_7_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[5]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED [7:5],\gwdc.wr_data_count_i_reg[5]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,Q[4:0]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [7:6],D,\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [0]}),
        .S({1'b0,1'b0,\gwdc.wr_data_count_i[5]_i_2_n_0 ,\gwdc.wr_data_count_i[5]_i_3_n_0 ,\gwdc.wr_data_count_i[5]_i_4_n_0 ,\gwdc.wr_data_count_i[5]_i_5_n_0 ,\gwdc.wr_data_count_i[5]_i_6_n_0 ,\gwdc.wr_data_count_i[5]_i_7_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized7_3
   (Q,
    O,
    wr_en,
    \count_value_i_reg[5]_0 ,
    wrst_busy,
    rst_d1,
    \gwdc.wr_data_count_i_reg[5] ,
    E,
    wr_clk);
  output [5:0]Q;
  output [0:0]O;
  input wr_en;
  input \count_value_i_reg[5]_0 ;
  input wrst_busy;
  input rst_d1;
  input [5:0]\gwdc.wr_data_count_i_reg[5] ;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [0:0]O;
  wire [5:0]Q;
  wire \count_value_i[0]_i_1__1_n_0 ;
  wire \count_value_i[1]_i_1__1_n_0 ;
  wire \count_value_i[2]_i_1__1_n_0 ;
  wire \count_value_i[3]_i_1__1_n_0 ;
  wire \count_value_i[4]_i_1__1_n_0 ;
  wire \count_value_i[5]_i_1_n_0 ;
  wire \count_value_i[5]_i_2_n_0 ;
  wire \count_value_i_reg[5]_0 ;
  wire \gwdc.wr_data_count_i[5]_i_2_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_3_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_4_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_5_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_6_n_0 ;
  wire \gwdc.wr_data_count_i[5]_i_7_n_0 ;
  wire [5:0]\gwdc.wr_data_count_i_reg[5] ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_3 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_4 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_5 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_6 ;
  wire \gwdc.wr_data_count_i_reg[5]_i_1_n_7 ;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire wrst_busy;
  wire [7:5]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__1 
       (.I0(Q[0]),
        .O(\count_value_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\count_value_i[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .O(\count_value_i[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .O(\count_value_i[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\count_value_i[4]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[5]_i_1 
       (.I0(\count_value_i[5]_i_2_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[5]),
        .O(\count_value_i[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \count_value_i[5]_i_2 
       (.I0(Q[0]),
        .I1(wr_en),
        .I2(\count_value_i_reg[5]_0 ),
        .I3(wrst_busy),
        .I4(rst_d1),
        .I5(Q[1]),
        .O(\count_value_i[5]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[5] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_2 
       (.I0(Q[5]),
        .I1(\gwdc.wr_data_count_i_reg[5] [5]),
        .O(\gwdc.wr_data_count_i[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_3 
       (.I0(Q[4]),
        .I1(\gwdc.wr_data_count_i_reg[5] [4]),
        .O(\gwdc.wr_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_4 
       (.I0(Q[3]),
        .I1(\gwdc.wr_data_count_i_reg[5] [3]),
        .O(\gwdc.wr_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_5 
       (.I0(Q[2]),
        .I1(\gwdc.wr_data_count_i_reg[5] [2]),
        .O(\gwdc.wr_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_6 
       (.I0(Q[1]),
        .I1(\gwdc.wr_data_count_i_reg[5] [1]),
        .O(\gwdc.wr_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gwdc.wr_data_count_i[5]_i_7 
       (.I0(Q[0]),
        .I1(\gwdc.wr_data_count_i_reg[5] [0]),
        .O(\gwdc.wr_data_count_i[5]_i_7_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gwdc.wr_data_count_i_reg[5]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_CO_UNCONNECTED [7:5],\gwdc.wr_data_count_i_reg[5]_i_1_n_3 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_4 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_5 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_6 ,\gwdc.wr_data_count_i_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,Q[4:0]}),
        .O({\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [7:6],O,\NLW_gwdc.wr_data_count_i_reg[5]_i_1_O_UNCONNECTED [4:0]}),
        .S({1'b0,1'b0,\gwdc.wr_data_count_i[5]_i_2_n_0 ,\gwdc.wr_data_count_i[5]_i_3_n_0 ,\gwdc.wr_data_count_i[5]_i_4_n_0 ,\gwdc.wr_data_count_i[5]_i_5_n_0 ,\gwdc.wr_data_count_i[5]_i_6_n_0 ,\gwdc.wr_data_count_i[5]_i_7_n_0 }));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized8
   (empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[4]_0 ,
    \count_value_i_reg[0]_0 ,
    E,
    rd_clk);
  output empty_i0;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [4:0]Q;
  input rd_en;
  input \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[4]_0 ;
  input \count_value_i_reg[0]_0 ;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i_reg[0]_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire empty_i0;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFF20000000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[4]_0 ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(\count_value_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(\count_value_i_reg[0]_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .O(empty_i0));
  LUT4 #(
    .INIT(16'h0090)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .I2(rd_en),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized8_25
   (empty_i0,
    \gen_pf_ic_rc.ram_empty_i_reg ,
    \gen_pf_ic_rc.ram_empty_i_reg_0 ,
    Q,
    rd_en,
    \gen_pf_ic_rc.ram_empty_i_reg_1 ,
    \count_value_i_reg[4]_0 ,
    SR,
    E,
    rd_clk);
  output empty_i0;
  input \gen_pf_ic_rc.ram_empty_i_reg ;
  input \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  input [4:0]Q;
  input rd_en;
  input \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  input \count_value_i_reg[4]_0 ;
  input [0:0]SR;
  input [0:0]E;
  input rd_clk;

  wire [0:0]E;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \count_value_i[0]_i_1__2_n_0 ;
  wire \count_value_i[1]_i_1__2_n_0 ;
  wire \count_value_i[2]_i_1__2_n_0 ;
  wire \count_value_i[3]_i_1__2_n_0 ;
  wire \count_value_i[4]_i_1__2_n_0 ;
  wire \count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire \count_value_i_reg_n_0_[3] ;
  wire \count_value_i_reg_n_0_[4] ;
  wire empty_i0;
  wire \gen_pf_ic_rc.ram_empty_i_i_4_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_i_6_n_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_0 ;
  wire \gen_pf_ic_rc.ram_empty_i_reg_1 ;
  wire rd_clk;
  wire rd_en;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[3] ),
        .O(\count_value_i[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hDFFFFFFF20000000)) 
    \count_value_i[4]_i_1__2 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[4]_0 ),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(\count_value_i_reg_n_0_[2] ),
        .I4(\count_value_i_reg_n_0_[1] ),
        .I5(\count_value_i_reg_n_0_[4] ),
        .O(\count_value_i[4]_i_1__2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__2_n_0 ),
        .Q(\count_value_i_reg_n_0_[4] ),
        .R(SR));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ram_empty_i_i_1 
       (.I0(\gen_pf_ic_rc.ram_empty_i_reg ),
        .I1(\gen_pf_ic_rc.ram_empty_i_reg_0 ),
        .I2(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ),
        .I3(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ),
        .I4(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ),
        .O(empty_i0));
  LUT4 #(
    .INIT(16'h0090)) 
    \gen_pf_ic_rc.ram_empty_i_i_4 
       (.I0(\count_value_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .I2(rd_en),
        .I3(\gen_pf_ic_rc.ram_empty_i_reg_1 ),
        .O(\gen_pf_ic_rc.ram_empty_i_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_5 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ram_empty_i_i_6 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[3] ),
        .I3(Q[3]),
        .O(\gen_pf_ic_rc.ram_empty_i_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized8_28
   (\count_value_i_reg[2]_0 ,
    Q,
    D,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ,
    E,
    wrst_busy,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]Q;
  output [4:0]D;
  input [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  input [0:0]E;
  input wrst_busy;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 ;
  wire [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_7 ;
  wire wr_clk;
  wire [3:1]wr_pntr_plus1_pf;
  wire wrst_busy;
  wire [7:4]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:5]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(wr_pntr_plus1_pf[1]),
        .I2(wr_pntr_plus1_pf[3]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(Q[0]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(Q[0]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(wr_pntr_plus1_pf[2]),
        .I4(Q[1]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1 
       (.CI(E),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED [7:4],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,Q[0],wr_pntr_plus1_pf}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED [7:5],D}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 }));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .I2(wr_pntr_plus1_pf[2]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .I5(wr_pntr_plus1_pf[1]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized8_4
   (\count_value_i_reg[2]_0 ,
    Q,
    D,
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ,
    E,
    wrst_busy,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]Q;
  output [3:0]D;
  input [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  input [0:0]E;
  input wrst_busy;
  input wr_clk;

  wire [3:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire \count_value_i[0]_i_1__0_n_0 ;
  wire \count_value_i[1]_i_1__0_n_0 ;
  wire \count_value_i[2]_i_1__0_n_0 ;
  wire \count_value_i[3]_i_1__0_n_0 ;
  wire \count_value_i[4]_i_1__0_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 ;
  wire [4:0]\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_4 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_5 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_6 ;
  wire \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_7 ;
  wire wr_clk;
  wire [3:1]wr_pntr_plus1_pf;
  wire wrst_busy;
  wire [7:4]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .O(\count_value_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .O(\count_value_i[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1__0 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(wr_pntr_plus1_pf[1]),
        .I2(wr_pntr_plus1_pf[3]),
        .O(\count_value_i[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(wr_pntr_plus1_pf[2]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(Q[0]),
        .O(\count_value_i[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1__0 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(Q[0]),
        .I2(wr_pntr_plus1_pf[3]),
        .I3(wr_pntr_plus1_pf[2]),
        .I4(Q[1]),
        .O(\count_value_i[4]_i_1__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[1]),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1__0_n_0 ),
        .Q(wr_pntr_plus1_pf[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(wrst_busy));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2 
       (.I0(Q[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [4]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [3]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5 
       (.I0(wr_pntr_plus1_pf[2]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6 
       (.I0(wr_pntr_plus1_pf[1]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .O(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1 
       (.CI(E),
        .CI_TOP(1'b0),
        .CO({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_CO_UNCONNECTED [7:4],\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_4 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_5 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_6 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,Q[0],wr_pntr_plus1_pf}),
        .O({\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED [7:5],D,\NLW_gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5]_i_1_O_UNCONNECTED [0]}),
        .S({1'b0,1'b0,1'b0,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_2_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_3_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_4_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_5_n_0 ,\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q[5]_i_6_n_0 }));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_3 
       (.I0(wr_pntr_plus1_pf[3]),
        .I1(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [2]),
        .I2(wr_pntr_plus1_pf[2]),
        .I3(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [1]),
        .I4(\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] [0]),
        .I5(wr_pntr_plus1_pf[1]),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized9
   (\count_value_i_reg[2]_0 ,
    \count_value_i_reg[4]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]\count_value_i_reg[4]_0 ;
  input [2:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire [1:0]\count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire wr_clk;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg[4]_0 [0]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[4]_0 [0]),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[1] ),
        .I4(\count_value_i_reg[4]_0 [1]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [1]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_counter_updn" *) 
module bd_d10d_rx_0_xpm_counter_updn__parameterized9_29
   (\count_value_i_reg[2]_0 ,
    \count_value_i_reg[4]_0 ,
    Q,
    wrst_busy,
    E,
    wr_clk);
  output \count_value_i_reg[2]_0 ;
  output [1:0]\count_value_i_reg[4]_0 ;
  input [2:0]Q;
  input wrst_busy;
  input [0:0]E;
  input wr_clk;

  wire [0:0]E;
  wire [2:0]Q;
  wire \count_value_i[0]_i_1_n_0 ;
  wire \count_value_i[1]_i_1_n_0 ;
  wire \count_value_i[2]_i_1_n_0 ;
  wire \count_value_i[3]_i_1_n_0 ;
  wire \count_value_i[4]_i_1_n_0 ;
  wire \count_value_i_reg[2]_0 ;
  wire [1:0]\count_value_i_reg[4]_0 ;
  wire \count_value_i_reg_n_0_[0] ;
  wire \count_value_i_reg_n_0_[1] ;
  wire \count_value_i_reg_n_0_[2] ;
  wire wr_clk;
  wire wrst_busy;

  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \count_value_i[0]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \count_value_i[1]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .O(\count_value_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \count_value_i[2]_i_1 
       (.I0(\count_value_i_reg_n_0_[1] ),
        .I1(\count_value_i_reg_n_0_[0] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .O(\count_value_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \count_value_i[3]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg_n_0_[1] ),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg[4]_0 [0]),
        .O(\count_value_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \count_value_i[4]_i_1 
       (.I0(\count_value_i_reg_n_0_[0] ),
        .I1(\count_value_i_reg[4]_0 [0]),
        .I2(\count_value_i_reg_n_0_[2] ),
        .I3(\count_value_i_reg_n_0_[1] ),
        .I4(\count_value_i_reg[4]_0 [1]),
        .O(\count_value_i[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[0]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[0] ),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \count_value_i_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[1]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[1] ),
        .S(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[2]_i_1_n_0 ),
        .Q(\count_value_i_reg_n_0_[2] ),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[3]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \count_value_i_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .D(\count_value_i[4]_i_1_n_0 ),
        .Q(\count_value_i_reg[4]_0 [1]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_4 
       (.I0(\count_value_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\count_value_i_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\count_value_i_reg_n_0_[0] ),
        .O(\count_value_i_reg[2]_0 ));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "2" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_WRITE_DEPTH = "32" *) (* FULL_RESET_VALUE = "0" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "29" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "0" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "5" *) 
(* READ_DATA_WIDTH = "26" *) (* READ_MODE = "std" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "26" *) (* WR_DATA_COUNT_WIDTH = "5" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) 
module bd_d10d_rx_0_xpm_fifo_async
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [25:0]din;
  output full;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [25:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [25:0]din;
  wire [25:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "32" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_SIZE = "832" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "10" *) 
  (* PE_THRESH_MAX = "29" *) 
  (* PE_THRESH_MIN = "3" *) 
  (* PF_THRESH_ADJ = "29" *) 
  (* PF_THRESH_MAX = "29" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "29" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* RD_DC_WIDTH_EXT = "6" *) 
  (* RD_LATENCY = "1" *) 
  (* RD_MODE = "0" *) 
  (* RD_PNTR_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "26" *) 
  (* READ_MODE = "0" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "26" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* WR_DC_WIDTH_EXT = "6" *) 
  (* WR_DEPTH_LOG = "5" *) 
  (* WR_PNTR_WIDTH = "5" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  bd_d10d_rx_0_xpm_fifo_base__parameterized1 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_SYNC_STAGES = "2" *) (* DOUT_RESET_VALUE = "0" *) 
(* ECC_MODE = "no_ecc" *) (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_WRITE_DEPTH = "32" *) (* FULL_RESET_VALUE = "0" *) 
(* ORIG_REF_NAME = "xpm_fifo_async" *) (* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "10" *) 
(* P_COMMON_CLOCK = "0" *) (* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) 
(* P_READ_MODE = "0" *) (* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "1" *) 
(* READ_DATA_WIDTH = "42" *) (* READ_MODE = "std" *) (* RELATED_CLOCKS = "0" *) 
(* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) (* WAKEUP_TIME = "0" *) 
(* WRITE_DATA_WIDTH = "42" *) (* WR_DATA_COUNT_WIDTH = "1" *) (* XPM_MODULE = "TRUE" *) 
(* dont_touch = "true" *) 
module bd_d10d_rx_0_xpm_fifo_async__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire rd_clk;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire wr_rst_busy;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ;
  wire \NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "32" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_SIZE = "1344" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "10" *) 
  (* PE_THRESH_MAX = "29" *) 
  (* PE_THRESH_MIN = "3" *) 
  (* PF_THRESH_ADJ = "10" *) 
  (* PF_THRESH_MAX = "29" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "10" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* RD_DC_WIDTH_EXT = "6" *) 
  (* RD_LATENCY = "1" *) 
  (* RD_MODE = "0" *) 
  (* RD_PNTR_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "42" *) 
  (* READ_MODE = "0" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "42" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* WR_DC_WIDTH_EXT = "6" *) 
  (* WR_DEPTH_LOG = "5" *) 
  (* WR_PNTR_WIDTH = "5" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "6" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  bd_d10d_rx_0_xpm_fifo_base__parameterized2 \gnuram_async_fifo.xpm_fifo_base_inst 
       (.almost_empty(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_almost_full_UNCONNECTED ),
        .data_valid(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_full_n_UNCONNECTED ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(rd_clk),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(rd_rst_busy),
        .rst(rst),
        .sbiterr(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_sbiterr_UNCONNECTED ),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(\NLW_gnuram_async_fifo.xpm_fifo_base_inst_wr_ack_UNCONNECTED ),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_SIZE = "192" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "3" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "5" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "5" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "12" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "12" *) (* WR_DATA_COUNT_WIDTH = "5" *) 
(* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "4" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module bd_d10d_rx_0_xpm_fifo_base
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [11:0]din;
  output full;
  output full_n;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [11:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [3:0]count_value_i__0;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [11:0]din;
  wire [11:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_0 ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_fwft.rdpp1_inst_n_2 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_14_in;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire rdp_inst_n_6;
  wire rdp_inst_n_9;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_3;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire [3:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_10;
  wire wrp_inst_n_2;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_7;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [11:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn_8 \gen_fwft.rdpp1_inst 
       (.D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\gwdc.wr_data_count_i_reg[0] (rd_pntr_ext[0]),
        .\gwdc.wr_data_count_i_reg[0]_0 (wr_pntr_ext[0]),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty),
        .O(p_14_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .O(prog_empty_i1));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_7),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[4]),
        .I3(diff_pntr_pf_q[1]),
        .O(prog_full_i215_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_0),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_6),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "12" *) 
  (* BYTE_WRITE_WIDTH_B = "12" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "192" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "12" *) 
  (* P_MIN_WIDTH_DATA_A = "12" *) 
  (* P_MIN_WIDTH_DATA_B = "12" *) 
  (* P_MIN_WIDTH_DATA_ECC = "12" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "12" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "12" *) 
  (* P_WIDTH_COL_WRITE_B = "12" *) 
  (* READ_DATA_WIDTH_A = "12" *) 
  (* READ_DATA_WIDTH_B = "12" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "12" *) 
  (* WRITE_DATA_WIDTH_B = "12" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "12" *) 
  (* rstb_loop_iter = "12" *) 
  bd_d10d_rx_0_xpm_memory_base \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [11:0]),
        .doutb(dout),
        .ena(ram_wr_en_pf),
        .enb(rdp_inst_n_6),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q(wr_data_count[0]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(wr_data_count[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(wr_data_count[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(wr_data_count[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(wr_data_count[4]),
        .R(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn__parameterized0 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_6),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (rdp_inst_n_9),
        .\count_value_i_reg[0]_1 (curr_fwft_state),
        .\count_value_i_reg[3]_0 (diff_pntr_pf_q0[4:3]),
        .\count_value_i_reg[4]_0 (\grdc.diff_wr_rd_pntr_rdc [4:2]),
        .\count_value_i_reg[4]_1 (xpm_fifo_rst_inst_n_2),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] (rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] (wrpp1_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\grdc.rd_data_count_i_reg[2] ({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .\grdc.rd_data_count_i_reg[4] ({wrp_inst_n_2,wr_pntr_ext}),
        .\grdc.rd_data_count_i_reg[4]_0 (wrp_inst_n_10),
        .p_14_in(p_14_in),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_counter_updn__parameterized1 rdpp1_inst
       (.Q(count_value_i__0),
        .\count_value_i_reg[0]_0 (rdp_inst_n_6),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_fifo_reg_bit_9 rst_d1_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (rdp_inst_n_6),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  bd_d10d_rx_0_xpm_counter_updn__parameterized0_10 wrp_inst
       (.D(diff_pntr_pe[1:0]),
        .Q({wrp_inst_n_2,wr_pntr_ext}),
        .\count_value_i_reg[0]_0 (\grdc.diff_wr_rd_pntr_rdc [1]),
        .\count_value_i_reg[0]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[2]_0 (wrp_inst_n_10),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 (rd_pntr_ext),
        .\gen_pntr_flags_cc.ram_empty_i_reg (count_value_i__0),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 (full),
        .\grdc.rd_data_count_i_reg[1] ({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .read_only(read_only),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_counter_updn__parameterized1_11 wrpp1_inst
       (.D(diff_pntr_pf_q0[2:1]),
        .Q({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\count_value_i_reg[1]_0 (wrpp1_inst_n_6),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] (rdp_inst_n_6),
        .ram_wr_en_pf(ram_wr_en_pf),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_fifo_rst_12 xpm_fifo_rst_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .SR(\grdc.rd_data_count_i0 ),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (rdp_inst_n_9),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_7),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (xpm_fifo_rst_inst_n_0),
        .\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 (\gen_fwft.count_rst ),
        .\grdc.rd_data_count_i_reg[0] (curr_fwft_state),
        .leaving_empty0(leaving_empty0),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .prog_full(prog_full),
        .prog_full_i215_in(prog_full_i215_in),
        .ram_empty_i(ram_empty_i),
        .ram_full_i0(ram_full_i0),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf(ram_wr_en_pf),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .rd_en(rd_en),
        .read_only(read_only),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "16" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_SIZE = "192" *) (* FIFO_WRITE_DEPTH = "16" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "3" *) (* PE_THRESH_MAX = "11" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "9" *) (* PF_THRESH_MAX = "11" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "5" *) (* PROG_FULL_THRESH = "11" *) (* RD_DATA_COUNT_WIDTH = "5" *) 
(* RD_DC_WIDTH_EXT = "5" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "4" *) (* READ_DATA_WIDTH = "12" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "12" *) (* WR_DATA_COUNT_WIDTH = "5" *) 
(* WR_DC_WIDTH_EXT = "5" *) (* WR_DEPTH_LOG = "4" *) (* WR_PNTR_WIDTH = "4" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "4" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module bd_d10d_rx_0_xpm_fifo_base__2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [11:0]din;
  output full;
  output full_n;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [11:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [3:0]count_value_i__0;
  wire [1:0]curr_fwft_state;
  wire [3:0]diff_pntr_pe;
  wire [4:1]diff_pntr_pf_q;
  wire [4:1]diff_pntr_pf_q0;
  wire [11:0]din;
  wire [11:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_0 ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_fwft.rdpp1_inst_n_2 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire [4:1]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_14_in;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire [3:0]rd_pntr_ext;
  wire rdp_inst_n_6;
  wire rdp_inst_n_9;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_3;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire [3:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_10;
  wire wrp_inst_n_2;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_7;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [11:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn_13 \gen_fwft.rdpp1_inst 
       (.D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\gwdc.wr_data_count_i_reg[0] (rd_pntr_ext[0]),
        .\gwdc.wr_data_count_i_reg[0]_0 (wr_pntr_ext[0]),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_3 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(curr_fwft_state[1]),
        .I4(empty),
        .O(p_14_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .O(prog_empty_i1));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_7),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT4 #(
    .INIT(16'h1000)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[3]),
        .I1(diff_pntr_pf_q[2]),
        .I2(diff_pntr_pf_q[4]),
        .I3(diff_pntr_pf_q[1]),
        .O(prog_full_i215_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_0),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_6),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "4" *) 
  (* ADDR_WIDTH_B = "4" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "12" *) 
  (* BYTE_WRITE_WIDTH_B = "12" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "192" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "16" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "12" *) 
  (* P_MIN_WIDTH_DATA_A = "12" *) 
  (* P_MIN_WIDTH_DATA_B = "12" *) 
  (* P_MIN_WIDTH_DATA_ECC = "12" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "12" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "4" *) 
  (* P_WIDTH_ADDR_READ_B = "4" *) 
  (* P_WIDTH_ADDR_WRITE_A = "4" *) 
  (* P_WIDTH_ADDR_WRITE_B = "4" *) 
  (* P_WIDTH_COL_WRITE_A = "12" *) 
  (* P_WIDTH_COL_WRITE_B = "12" *) 
  (* READ_DATA_WIDTH_A = "12" *) 
  (* READ_DATA_WIDTH_B = "12" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "12" *) 
  (* WRITE_DATA_WIDTH_B = "12" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "12" *) 
  (* rstb_loop_iter = "12" *) 
  bd_d10d_rx_0_xpm_memory_base__2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [11:0]),
        .doutb(dout),
        .ena(ram_wr_en_pf),
        .enb(rdp_inst_n_6),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q(rd_data_count[0]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(rd_data_count[1]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(rd_data_count[2]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(rd_data_count[3]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(rd_data_count[4]),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_fwft.rdpp1_inst_n_2 ),
        .Q(wr_data_count[0]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [1]),
        .Q(wr_data_count[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [2]),
        .Q(wr_data_count[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [3]),
        .Q(wr_data_count[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc [4]),
        .Q(wr_data_count[4]),
        .R(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn__parameterized0_14 rdp_inst
       (.D(diff_pntr_pe[3:2]),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_6),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[0]_0 (rdp_inst_n_9),
        .\count_value_i_reg[0]_1 (curr_fwft_state),
        .\count_value_i_reg[3]_0 (diff_pntr_pf_q0[4:3]),
        .\count_value_i_reg[4]_0 (\grdc.diff_wr_rd_pntr_rdc [4:2]),
        .\count_value_i_reg[4]_1 (xpm_fifo_rst_inst_n_2),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2]_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] (rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] (wrpp1_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4]_0 ({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\grdc.rd_data_count_i_reg[2] ({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .\grdc.rd_data_count_i_reg[4] ({wrp_inst_n_2,wr_pntr_ext}),
        .\grdc.rd_data_count_i_reg[4]_0 (wrp_inst_n_10),
        .p_14_in(p_14_in),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_counter_updn__parameterized1_15 rdpp1_inst
       (.Q(count_value_i__0),
        .\count_value_i_reg[0]_0 (rdp_inst_n_6),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_fifo_reg_bit_16 rst_d1_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_3),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (rdp_inst_n_6),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  bd_d10d_rx_0_xpm_counter_updn__parameterized0_17 wrp_inst
       (.D(diff_pntr_pe[1:0]),
        .Q({wrp_inst_n_2,wr_pntr_ext}),
        .\count_value_i_reg[0]_0 (\grdc.diff_wr_rd_pntr_rdc [1]),
        .\count_value_i_reg[0]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[2]_0 (wrp_inst_n_10),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_4_0 (rd_pntr_ext),
        .\gen_pntr_flags_cc.ram_empty_i_reg (count_value_i__0),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0]_1 (full),
        .\grdc.rd_data_count_i_reg[1] ({\gen_fwft.rdpp1_inst_n_0 ,\gen_fwft.rdpp1_inst_n_1 }),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .read_only(read_only),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_counter_updn__parameterized1_18 wrpp1_inst
       (.D(diff_pntr_pf_q0[2:1]),
        .Q({wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5}),
        .\count_value_i_reg[1]_0 (wrpp1_inst_n_6),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[3]_0 (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({rd_pntr_ext[3],rd_pntr_ext[1:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] (rdp_inst_n_6),
        .ram_wr_en_pf(ram_wr_en_pf),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_fifo_rst_19 xpm_fifo_rst_inst
       (.Q(xpm_fifo_rst_inst_n_2),
        .SR(\grdc.rd_data_count_i0 ),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_7),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (rdp_inst_n_9),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 (rdp_inst_n_6),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 (full),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_7),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (xpm_fifo_rst_inst_n_0),
        .\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 (\gen_fwft.count_rst ),
        .\grdc.rd_data_count_i_reg[0] (curr_fwft_state),
        .leaving_empty0(leaving_empty0),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .prog_full(prog_full),
        .prog_full_i215_in(prog_full_i215_in),
        .ram_empty_i(ram_empty_i),
        .ram_full_i0(ram_full_i0),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf(ram_wr_en_pf),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .rd_en(rd_en),
        .read_only(read_only),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "1" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000111100001111" *) (* EN_AE = "1'b1" *) (* EN_AF = "1'b1" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "2" *) (* FIFO_MEM_TYPE = "2" *) (* FIFO_READ_DEPTH = "2048" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_SIZE = "139264" *) (* FIFO_WRITE_DEPTH = "2048" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "8" *) (* PE_THRESH_MAX = "2043" *) (* PE_THRESH_MIN = "5" *) 
(* PF_THRESH_ADJ = "2041" *) (* PF_THRESH_MAX = "2043" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "2043" *) (* RD_DATA_COUNT_WIDTH = "1" *) 
(* RD_DC_WIDTH_EXT = "12" *) (* RD_LATENCY = "2" *) (* RD_MODE = "1" *) 
(* RD_PNTR_WIDTH = "11" *) (* READ_DATA_WIDTH = "68" *) (* READ_MODE = "1" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0f0f" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "68" *) (* WR_DATA_COUNT_WIDTH = "1" *) 
(* WR_DC_WIDTH_EXT = "12" *) (* WR_DEPTH_LOG = "11" *) (* WR_PNTR_WIDTH = "11" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "7" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module bd_d10d_rx_0_xpm_fifo_base__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [67:0]din;
  output full;
  output full_n;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [67:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire aempty_fwft_i0;
  wire almost_empty;
  wire almost_full;
  wire [1:1]count_value_i;
  wire [1:0]curr_fwft_state;
  wire [10:0]diff_pntr_pe;
  wire [11:1]diff_pntr_pf_q;
  wire [11:1]diff_pntr_pf_q0;
  wire [67:0]din;
  wire [67:0]dout;
  wire empty;
  wire empty_fwft_i0;
  wire full;
  wire \gen_fwft.count_rst ;
  wire \gen_fwft.ram_regout_en ;
  wire \gen_fwft.rdpp1_inst_n_1 ;
  wire \gen_fwft.rdpp1_inst_n_2 ;
  wire \gen_fwft.rdpp1_inst_n_3 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[10] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[5] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[6] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[7] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[8] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[9] ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_4_n_0 ;
  wire [11:11]\grdc.diff_wr_rd_pntr_rdc ;
  wire \grdc.rd_data_count_i0 ;
  wire leaving_empty0;
  wire [1:0]next_fwft_state__0;
  wire overflow;
  wire overflow_i0;
  wire p_1_in__0;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i214_in;
  wire ram_empty_i;
  wire ram_empty_i0;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire [10:0]rd_pntr_ext;
  wire rdp_inst_n_0;
  wire rdp_inst_n_1;
  wire rdp_inst_n_13;
  wire rdp_inst_n_16;
  wire rdp_inst_n_17;
  wire rdp_inst_n_18;
  wire rdp_inst_n_19;
  wire rdp_inst_n_20;
  wire rdp_inst_n_21;
  wire rdp_inst_n_22;
  wire rdp_inst_n_23;
  wire rdp_inst_n_24;
  wire rdp_inst_n_25;
  wire rdp_inst_n_26;
  wire rdp_inst_n_27;
  wire rdp_inst_n_28;
  wire rdp_inst_n_29;
  wire rdp_inst_n_30;
  wire rdp_inst_n_31;
  wire rdp_inst_n_32;
  wire rdp_inst_n_33;
  wire rdp_inst_n_34;
  wire rdp_inst_n_35;
  wire rdp_inst_n_36;
  wire rdp_inst_n_37;
  wire rdp_inst_n_38;
  wire rdp_inst_n_39;
  wire rdp_inst_n_40;
  wire rdp_inst_n_41;
  wire rdp_inst_n_42;
  wire rdp_inst_n_43;
  wire rdp_inst_n_44;
  wire rdpp1_inst_n_0;
  wire rdpp1_inst_n_1;
  wire rdpp1_inst_n_10;
  wire rdpp1_inst_n_2;
  wire rdpp1_inst_n_3;
  wire rdpp1_inst_n_4;
  wire rdpp1_inst_n_5;
  wire rdpp1_inst_n_6;
  wire rdpp1_inst_n_7;
  wire rdpp1_inst_n_8;
  wire rdpp1_inst_n_9;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire rst_d1_inst_n_4;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire [10:0]wr_pntr_ext;
  wire wr_rst_busy;
  wire write_only;
  wire write_only_q;
  wire wrp_inst_n_0;
  wire wrp_inst_n_25;
  wire wrpp1_inst_n_0;
  wire wrpp1_inst_n_1;
  wire wrpp1_inst_n_10;
  wire wrpp1_inst_n_2;
  wire wrpp1_inst_n_22;
  wire wrpp1_inst_n_3;
  wire wrpp1_inst_n_4;
  wire wrpp1_inst_n_5;
  wire wrpp1_inst_n_6;
  wire wrpp1_inst_n_7;
  wire wrpp1_inst_n_8;
  wire wrpp1_inst_n_9;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_10;
  wire wrpp2_inst_n_2;
  wire wrpp2_inst_n_3;
  wire wrpp2_inst_n_4;
  wire wrpp2_inst_n_5;
  wire wrpp2_inst_n_6;
  wire wrpp2_inst_n_7;
  wire wrpp2_inst_n_8;
  wire wrpp2_inst_n_9;
  wire xpm_fifo_rst_inst_n_0;
  wire xpm_fifo_rst_inst_n_2;
  wire xpm_fifo_rst_inst_n_5;
  wire xpm_fifo_rst_inst_n_8;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [67:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT4 #(
    .INIT(16'h6A85)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .I3(ram_empty_i),
        .O(next_fwft_state__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h7C)) 
    \FSM_sequential_gen_fwft.curr_fwft_state[1]_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[1]),
        .I2(curr_fwft_state[0]),
        .O(next_fwft_state__0[1]));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[0]),
        .Q(curr_fwft_state[0]),
        .R(xpm_fifo_rst_inst_n_2));
  (* FSM_ENCODED_STATES = "invalid:00,stage1_valid:01,both_stages_valid:10,stage2_valid:11" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_fwft.curr_fwft_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(next_fwft_state__0[1]),
        .Q(curr_fwft_state[1]),
        .R(xpm_fifo_rst_inst_n_2));
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'hF380)) 
    \gen_fwft.empty_fwft_i_i_1 
       (.I0(rd_en),
        .I1(curr_fwft_state[0]),
        .I2(curr_fwft_state[1]),
        .I3(empty),
        .O(empty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.empty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .Q(empty),
        .S(xpm_fifo_rst_inst_n_2));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'hFDDD4000)) 
    \gen_fwft.gae_fwft.aempty_fwft_i_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(ram_empty_i),
        .I2(curr_fwft_state[1]),
        .I3(rd_en),
        .I4(almost_empty),
        .O(aempty_fwft_i0));
  FDSE #(
    .INIT(1'b1)) 
    \gen_fwft.gae_fwft.aempty_fwft_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .Q(almost_empty),
        .S(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn \gen_fwft.rdpp1_inst 
       (.DI(\gen_fwft.rdpp1_inst_n_3 ),
        .Q(count_value_i),
        .S({\gen_fwft.rdpp1_inst_n_1 ,\gen_fwft.rdpp1_inst_n_2 }),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\gwdc.wr_data_count_i_reg[11]_i_2 (rd_pntr_ext[1:0]),
        .\gwdc.wr_data_count_i_reg[11]_i_2_0 (wr_pntr_ext[1:0]),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_0),
        .Q(almost_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(xpm_fifo_rst_inst_n_2));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.ram_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .Q(ram_empty_i),
        .S(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[10]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[10] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[4] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[5]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[5] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[6]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[6] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[7]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[7] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[8]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[8] ),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[9]),
        .Q(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[9] ),
        .R(xpm_fifo_rst_inst_n_2));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_2 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[8] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[7] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[6] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[10] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[9] ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_3_n_0 ),
        .O(prog_empty_i1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFB)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_3 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[1] ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[3] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[0] ),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[5] ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[2] ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg_n_0_[4] ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_3_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(xpm_fifo_rst_inst_n_5),
        .Q(prog_empty),
        .R(1'b0));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(read_only),
        .Q(read_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(write_only),
        .Q(write_only_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[10] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[10]),
        .Q(diff_pntr_pf_q[10]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[11]),
        .Q(diff_pntr_pf_q[11]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[6] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[6]),
        .Q(diff_pntr_pf_q[6]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[7] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[7]),
        .Q(diff_pntr_pf_q[7]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[8]),
        .Q(diff_pntr_pf_q[8]),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[9] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[9]),
        .Q(diff_pntr_pf_q[9]),
        .R(xpm_fifo_rst_inst_n_2));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[11]),
        .I1(diff_pntr_pf_q[9]),
        .I2(diff_pntr_pf_q[10]),
        .I3(diff_pntr_pf_q[2]),
        .I4(diff_pntr_pf_q[3]),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_4_n_0 ),
        .O(prog_full_i214_in));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_4 
       (.I0(diff_pntr_pf_q[1]),
        .I1(diff_pntr_pf_q[4]),
        .I2(diff_pntr_pf_q[5]),
        .I3(diff_pntr_pf_q[6]),
        .I4(diff_pntr_pf_q[7]),
        .I5(diff_pntr_pf_q[8]),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_rd_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rdp_inst_n_13),
        .Q(ram_rd_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.ram_wr_en_pf_q_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_wr_en_pf),
        .Q(ram_wr_en_pf_q),
        .R(xpm_fifo_rst_inst_n_2));
  (* ADDR_WIDTH_A = "11" *) 
  (* ADDR_WIDTH_B = "11" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "68" *) 
  (* BYTE_WRITE_WIDTH_B = "68" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* \MEM.ADDRESS_SPACE  *) 
  (* \MEM.ADDRESS_SPACE_BEGIN  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_LSB  = "0" *) 
  (* \MEM.ADDRESS_SPACE_DATA_MSB  = "67" *) 
  (* \MEM.ADDRESS_SPACE_END  = "2047" *) 
  (* \MEM.CORE_MEMORY_WIDTH  = "68" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "2" *) 
  (* MEMORY_SIZE = "139264" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "2048" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "block" *) 
  (* P_MIN_WIDTH_DATA = "68" *) 
  (* P_MIN_WIDTH_DATA_A = "68" *) 
  (* P_MIN_WIDTH_DATA_B = "68" *) 
  (* P_MIN_WIDTH_DATA_ECC = "68" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "68" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "no" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "11" *) 
  (* P_WIDTH_ADDR_READ_B = "11" *) 
  (* P_WIDTH_ADDR_WRITE_A = "11" *) 
  (* P_WIDTH_ADDR_WRITE_B = "11" *) 
  (* P_WIDTH_COL_WRITE_A = "68" *) 
  (* P_WIDTH_COL_WRITE_B = "68" *) 
  (* READ_DATA_WIDTH_A = "68" *) 
  (* READ_DATA_WIDTH_B = "68" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "2" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "0" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "68" *) 
  (* WRITE_DATA_WIDTH_B = "68" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "2" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "68" *) 
  (* rstb_loop_iter = "68" *) 
  bd_d10d_rx_0_xpm_memory_base__parameterized0 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext),
        .addrb(rd_pntr_ext),
        .clka(wr_clk),
        .clkb(1'b0),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [67:0]),
        .doutb(dout),
        .ena(1'b0),
        .enb(rdp_inst_n_13),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(\gen_fwft.ram_regout_en ),
        .rsta(1'b0),
        .rstb(xpm_fifo_rst_inst_n_2),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(ram_wr_en_pf),
        .web(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h62)) 
    \gen_sdpram.xpm_memory_base_inst_i_3 
       (.I0(curr_fwft_state[0]),
        .I1(curr_fwft_state[1]),
        .I2(rd_en),
        .O(\gen_fwft.ram_regout_en ));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[11] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc ),
        .Q(rd_data_count),
        .R(\grdc.rd_data_count_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[11] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc ),
        .Q(wr_data_count),
        .R(xpm_fifo_rst_inst_n_2));
  bd_d10d_rx_0_xpm_counter_updn__parameterized5 rdp_inst
       (.DI(rdp_inst_n_1),
        .\FSM_sequential_gen_fwft.curr_fwft_state_reg[1] (rdp_inst_n_13),
        .Q(rd_pntr_ext),
        .S({rdp_inst_n_16,rdp_inst_n_17,rdp_inst_n_18}),
        .almost_full(almost_full),
        .\count_value_i_reg[0]_0 (curr_fwft_state),
        .\count_value_i_reg[10]_0 ({rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\count_value_i_reg[10]_1 ({rdp_inst_n_42,rdp_inst_n_43,rdp_inst_n_44}),
        .\count_value_i_reg[11]_0 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[1]_0 (rdp_inst_n_19),
        .\count_value_i_reg[6]_0 ({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29}),
        .\count_value_i_reg[6]_1 ({rdp_inst_n_30,rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34}),
        .\count_value_i_reg[7]_0 ({rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38,rdp_inst_n_39,rdp_inst_n_40,rdp_inst_n_41}),
        .\gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_3_0 ({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8,wrpp2_inst_n_9,wrpp2_inst_n_10}),
        .\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg (rdp_inst_n_0),
        .\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_0 (xpm_fifo_rst_inst_n_0),
        .\gen_pntr_flags_cc.gaf_cc.ram_afull_i_reg_1 (rst_d1_inst_n_4),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 (wrp_inst_n_25),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_1 (wrpp1_inst_n_22),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[11] ({wrpp1_inst_n_0,wrpp1_inst_n_1,wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5,wrpp1_inst_n_6,wrpp1_inst_n_7,wrpp1_inst_n_8,wrpp1_inst_n_9,wrpp1_inst_n_10}),
        .\grdc.rd_data_count_i_reg[11] ({wrp_inst_n_0,wr_pntr_ext}),
        .\gwdc.wr_data_count_i_reg[11]_i_2 (count_value_i),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_full_i0(ram_full_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_counter_updn__parameterized6 rdpp1_inst
       (.Q({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7,rdpp1_inst_n_8,rdpp1_inst_n_9,rdpp1_inst_n_10}),
        .\count_value_i_reg[0]_0 (rdp_inst_n_13),
        .\count_value_i_reg[1]_0 (curr_fwft_state),
        .\count_value_i_reg[1]_1 (xpm_fifo_rst_inst_n_2),
        .ram_empty_i(ram_empty_i),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  bd_d10d_rx_0_xpm_fifo_reg_bit_5 rst_d1_inst
       (.DI(p_1_in__0),
        .Q(xpm_fifo_rst_inst_n_2),
        .d_out_reg_0(rst_d1_inst_n_4),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (rdp_inst_n_13),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 (empty),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg (rst_d1_inst_n_1),
        .\gof.overflow_i_reg (full),
        .overflow_i0(overflow_i0),
        .prog_full(prog_full),
        .prog_full_i214_in(prog_full_i214_in),
        .ram_rd_en_pf_q(ram_rd_en_pf_q),
        .ram_wr_en_pf_q(ram_wr_en_pf_q),
        .read_only(read_only),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .write_only(write_only));
  bd_d10d_rx_0_xpm_counter_updn__parameterized5_6 wrp_inst
       (.D(diff_pntr_pe),
        .DI({rdp_inst_n_19,\gen_fwft.rdpp1_inst_n_3 }),
        .O(\grdc.diff_wr_rd_pntr_rdc ),
        .Q({wrp_inst_n_0,wr_pntr_ext}),
        .S({rdp_inst_n_30,rdp_inst_n_31,rdp_inst_n_32,rdp_inst_n_33,rdp_inst_n_34,\gen_fwft.rdpp1_inst_n_1 ,\gen_fwft.rdpp1_inst_n_2 }),
        .\count_value_i_reg[0]_0 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[10]_0 (wrp_inst_n_25),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_3 (rd_pntr_ext[10:1]),
        .\gen_pntr_flags_cc.ram_empty_i_reg (rdp_inst_n_13),
        .\gen_pntr_flags_cc.ram_empty_i_reg_0 ({rdpp1_inst_n_0,rdpp1_inst_n_1,rdpp1_inst_n_2,rdpp1_inst_n_3,rdpp1_inst_n_4,rdpp1_inst_n_5,rdpp1_inst_n_6,rdpp1_inst_n_7,rdpp1_inst_n_8,rdpp1_inst_n_9,rdpp1_inst_n_10}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[10] ({rdp_inst_n_42,rdp_inst_n_43,rdp_inst_n_44}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] (p_1_in__0),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ({rdp_inst_n_35,rdp_inst_n_36,rdp_inst_n_37,rdp_inst_n_38,rdp_inst_n_39,rdp_inst_n_40,rdp_inst_n_41,xpm_fifo_rst_inst_n_8}),
        .\grdc.rd_data_count_i_reg[11] ({rdp_inst_n_20,rdp_inst_n_21,rdp_inst_n_22,rdp_inst_n_23}),
        .\gwdc.wr_data_count_i_reg[11]_i_2_0 (count_value_i),
        .leaving_empty0(leaving_empty0),
        .ram_empty_i(ram_empty_i),
        .ram_empty_i0(ram_empty_i0),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  bd_d10d_rx_0_xpm_counter_updn__parameterized6_7 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .DI(rdp_inst_n_1),
        .Q({wrpp1_inst_n_0,wrpp1_inst_n_1,wrpp1_inst_n_2,wrpp1_inst_n_3,wrpp1_inst_n_4,wrpp1_inst_n_5,wrpp1_inst_n_6,wrpp1_inst_n_7,wrpp1_inst_n_8,wrpp1_inst_n_9,wrpp1_inst_n_10}),
        .S({rdp_inst_n_16,rdp_inst_n_17,rdp_inst_n_18}),
        .\count_value_i_reg[10]_0 (wrpp1_inst_n_22),
        .\count_value_i_reg[1]_0 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[5]_0 (full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_2 ({rd_pntr_ext[10],rd_pntr_ext[8:0]}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8] ({rdp_inst_n_24,rdp_inst_n_25,rdp_inst_n_26,rdp_inst_n_27,rdp_inst_n_28,rdp_inst_n_29}),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.diff_pntr_pf_q_reg[8]_0 (rdp_inst_n_13),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  bd_d10d_rx_0_xpm_counter_updn__parameterized4 wrpp2_inst
       (.Q({wrpp2_inst_n_0,wrpp2_inst_n_1,wrpp2_inst_n_2,wrpp2_inst_n_3,wrpp2_inst_n_4,wrpp2_inst_n_5,wrpp2_inst_n_6,wrpp2_inst_n_7,wrpp2_inst_n_8,wrpp2_inst_n_9,wrpp2_inst_n_10}),
        .\count_value_i_reg[0]_0 (xpm_fifo_rst_inst_n_2),
        .\count_value_i_reg[5]_0 (full),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  bd_d10d_rx_0_xpm_fifo_rst xpm_fifo_rst_inst
       (.Q(curr_fwft_state),
        .SR(\gen_fwft.count_rst ),
        .\count_value_i_reg[10] (full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg (xpm_fifo_rst_inst_n_8),
        .\gen_pntr_flags_cc.ram_empty_i_reg (xpm_fifo_rst_inst_n_0),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] (rdp_inst_n_13),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 (rd_pntr_ext[0]),
        .\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg (xpm_fifo_rst_inst_n_5),
        .\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 (xpm_fifo_rst_inst_n_2),
        .\grdc.rd_data_count_i0 (\grdc.rd_data_count_i0 ),
        .\guf.underflow_i_reg (empty),
        .prog_empty(prog_empty),
        .prog_empty_i1(prog_empty_i1),
        .ram_empty_i(ram_empty_i),
        .ram_wr_en_pf(ram_wr_en_pf),
        .rd_en(rd_en),
        .read_only_q(read_only_q),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .write_only_q(write_only_q));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "32" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_SIZE = "832" *) (* FIFO_WRITE_DEPTH = "32" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "10" *) (* PE_THRESH_MAX = "29" *) (* PE_THRESH_MIN = "3" *) 
(* PF_THRESH_ADJ = "29" *) (* PF_THRESH_MAX = "29" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "29" *) (* RD_DATA_COUNT_WIDTH = "5" *) 
(* RD_DC_WIDTH_EXT = "6" *) (* RD_LATENCY = "1" *) (* RD_MODE = "0" *) 
(* RD_PNTR_WIDTH = "5" *) (* READ_DATA_WIDTH = "26" *) (* READ_MODE = "0" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "26" *) (* WR_DATA_COUNT_WIDTH = "5" *) 
(* WR_DC_WIDTH_EXT = "6" *) (* WR_DEPTH_LOG = "5" *) (* WR_PNTR_WIDTH = "5" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "5" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module bd_d10d_rx_0_xpm_fifo_base__parameterized1
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [25:0]din;
  output full;
  output full_n;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [25:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [4:0]diff_pntr_pe;
  wire [5:1]diff_pntr_pf_q;
  wire [5:1]diff_pntr_pf_q0;
  wire [25:0]din;
  wire [25:0]dout;
  wire empty;
  wire empty_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire [5:1]\grdc.diff_wr_rd_pntr_rdc0_out ;
  wire [5:1]\gwdc.diff_wr_rd_pntr1_out ;
  wire overflow;
  wire overflow_i0;
  wire p_1_in;
  wire prog_empty;
  wire prog_full;
  wire ram_full_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire [5:0]rd_pntr_ext;
  wire [4:0]rd_pntr_wr;
  wire [4:0]rd_pntr_wr_cdc;
  wire [5:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire [5:0]wr_pntr_ext;
  wire [5:4]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [4:0]wr_pntr_rd_cdc;
  wire [5:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_0;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [25:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__parameterized0__5 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__5 \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext[4:0]));
  bd_d10d_rx_0_xpm_fifo_reg_vec_20 \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 (wr_pntr_plus1_pf),
        .ram_full_i0(ram_full_i0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_21 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_reg_vec_22 \gen_cdc_pntr.wpr_gray_reg 
       (.D({diff_pntr_pe[4:2],diff_pntr_pe[0]}),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .SR(rd_rst_busy),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (empty),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] (rd_pntr_ext[3:0]),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[2]_0 (\gen_cdc_pntr.wpr_gray_reg_n_9 ),
        .\reg_out_i_reg[4]_0 (wr_pntr_rd_cdc));
  bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_23 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(\grdc.diff_wr_rd_pntr_rdc0_out ),
        .Q(rd_pntr_ext),
        .SR(rd_rst_busy),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[5]_0 (wr_pntr_rd_cdc_dc));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__parameterized0__4 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__4 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[4:0]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000557F)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[1]),
        .Q(diff_pntr_pf_q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  LUT5 #(
    .INIT(32'h88800000)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(diff_pntr_pf_q[4]),
        .I1(diff_pntr_pf_q[3]),
        .I2(diff_pntr_pf_q[2]),
        .I3(diff_pntr_pf_q[1]),
        .I4(diff_pntr_pf_q[5]),
        .O(p_1_in));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_i0),
        .Q(empty),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "5" *) 
  (* ADDR_WIDTH_B = "5" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "26" *) 
  (* BYTE_WRITE_WIDTH_B = "26" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "832" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "32" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "26" *) 
  (* P_MIN_WIDTH_DATA_A = "26" *) 
  (* P_MIN_WIDTH_DATA_B = "26" *) 
  (* P_MIN_WIDTH_DATA_ECC = "26" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "26" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "5" *) 
  (* P_WIDTH_ADDR_READ_B = "5" *) 
  (* P_WIDTH_ADDR_WRITE_A = "5" *) 
  (* P_WIDTH_ADDR_WRITE_B = "5" *) 
  (* P_WIDTH_COL_WRITE_A = "26" *) 
  (* P_WIDTH_COL_WRITE_B = "26" *) 
  (* READ_DATA_WIDTH_A = "26" *) 
  (* READ_DATA_WIDTH_B = "26" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "26" *) 
  (* WRITE_DATA_WIDTH_B = "26" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "28" *) 
  (* rstb_loop_iter = "28" *) 
  bd_d10d_rx_0_xpm_memory_base__parameterized1 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[4:0]),
        .addrb(rd_pntr_ext[4:0]),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [25:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out [1]),
        .Q(rd_data_count[0]),
        .R(rd_rst_busy));
  FDRE \grdc.rd_data_count_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out [2]),
        .Q(rd_data_count[1]),
        .R(rd_rst_busy));
  FDRE \grdc.rd_data_count_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out [3]),
        .Q(rd_data_count[2]),
        .R(rd_rst_busy));
  FDRE \grdc.rd_data_count_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out [4]),
        .Q(rd_data_count[3]),
        .R(rd_rst_busy));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out [5]),
        .Q(rd_data_count[4]),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [1]),
        .Q(wr_data_count[0]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [2]),
        .Q(wr_data_count[1]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [3]),
        .Q(wr_data_count[2]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [4]),
        .Q(wr_data_count[3]),
        .R(wrst_busy));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out [5]),
        .Q(wr_data_count[4]),
        .R(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized7_24 rdp_inst
       (.D(diff_pntr_pe[1]),
        .E(ram_rd_en_i),
        .Q(rd_pntr_ext),
        .SR(rd_rst_busy),
        .\count_value_i_reg[3]_0 (rdp_inst_n_9),
        .\count_value_i_reg[4]_0 (rdp_inst_n_10),
        .\count_value_i_reg[5]_0 (empty),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_8),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  bd_d10d_rx_0_xpm_counter_updn__parameterized8_25 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .SR(rd_rst_busy),
        .\count_value_i_reg[4]_0 (rdp_inst_n_8),
        .empty_i0(empty_i0),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_9),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (\gen_cdc_pntr.wpr_gray_reg_n_9 ),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  bd_d10d_rx_0_xpm_fifo_reg_bit_26 rst_d1_inst
       (.d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (full),
        .p_1_in(p_1_in),
        .prog_full(prog_full),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized7_27 wrp_inst
       (.D(\gwdc.diff_wr_rd_pntr1_out ),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[5] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized8_28 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[2]_0 (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] (rd_pntr_wr),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized9_29 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[2:0]),
        .\count_value_i_reg[2]_0 (wrpp2_inst_n_0),
        .\count_value_i_reg[4]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_rst__parameterized0__xdcDup__1 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .SR(rd_rst_busy),
        .\gof.overflow_i_reg (full),
        .\guf.underflow_i_reg (empty),
        .overflow_i0(overflow_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* CDC_DEST_SYNC_FF = "2" *) (* COMMON_CLOCK = "0" *) 
(* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "0" *) (* ENABLE_ECC = "0" *) 
(* EN_ADV_FEATURE = "16'b0000011100000111" *) (* EN_AE = "1'b0" *) (* EN_AF = "1'b0" *) 
(* EN_DVLD = "1'b0" *) (* EN_OF = "1'b1" *) (* EN_PE = "1'b1" *) 
(* EN_PF = "1'b1" *) (* EN_RDC = "1'b1" *) (* EN_UF = "1'b1" *) 
(* EN_WACK = "1'b0" *) (* EN_WDC = "1'b1" *) (* FG_EQ_ASYM_DOUT = "1'b0" *) 
(* FIFO_MEMORY_TYPE = "1" *) (* FIFO_MEM_TYPE = "1" *) (* FIFO_READ_DEPTH = "32" *) 
(* FIFO_READ_LATENCY = "1" *) (* FIFO_SIZE = "1344" *) (* FIFO_WRITE_DEPTH = "32" *) 
(* FULL_RESET_VALUE = "0" *) (* FULL_RST_VAL = "1'b0" *) (* ORIG_REF_NAME = "xpm_fifo_base" *) 
(* PE_THRESH_ADJ = "10" *) (* PE_THRESH_MAX = "29" *) (* PE_THRESH_MIN = "3" *) 
(* PF_THRESH_ADJ = "10" *) (* PF_THRESH_MAX = "29" *) (* PF_THRESH_MIN = "5" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "10" *) (* RD_DATA_COUNT_WIDTH = "1" *) 
(* RD_DC_WIDTH_EXT = "6" *) (* RD_LATENCY = "1" *) (* RD_MODE = "0" *) 
(* RD_PNTR_WIDTH = "5" *) (* READ_DATA_WIDTH = "42" *) (* READ_MODE = "0" *) 
(* RELATED_CLOCKS = "0" *) (* REMOVE_WR_RD_PROT_LOGIC = "0" *) (* SIM_ASSERT_CHK = "0" *) 
(* USE_ADV_FEATURES = "0707" *) (* VERSION = "0" *) (* WAKEUP_TIME = "0" *) 
(* WIDTH_RATIO = "1" *) (* WRITE_DATA_WIDTH = "42" *) (* WR_DATA_COUNT_WIDTH = "1" *) 
(* WR_DC_WIDTH_EXT = "6" *) (* WR_DEPTH_LOG = "5" *) (* WR_PNTR_WIDTH = "5" *) 
(* WR_RD_RATIO = "0" *) (* WR_WIDTH_LOG = "6" *) (* XPM_MODULE = "TRUE" *) 
(* both_stages_valid = "3" *) (* invalid = "0" *) (* keep_hierarchy = "soft" *) 
(* stage1_valid = "2" *) (* stage2_valid = "1" *) 
module bd_d10d_rx_0_xpm_fifo_base__parameterized2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    full_n,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_clk,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [41:0]din;
  output full;
  output full_n;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_clk;
  input rd_en;
  output [41:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [4:0]diff_pntr_pe;
  wire [5:2]diff_pntr_pf_q;
  wire [5:2]diff_pntr_pf_q0;
  wire [41:0]din;
  wire [41:0]dout;
  wire empty;
  wire empty_i0;
  wire full;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_0 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_1 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_2 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_3 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_4 ;
  wire \gen_cdc_pntr.rpw_gray_reg_dc_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_4 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_5 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_6 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_7 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_8 ;
  wire \gen_cdc_pntr.wpr_gray_reg_n_9 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ;
  wire [5:5]\grdc.diff_wr_rd_pntr_rdc0_out ;
  wire [5:5]\gwdc.diff_wr_rd_pntr1_out ;
  wire overflow;
  wire overflow_i0;
  wire prog_empty;
  wire prog_full;
  wire ram_full_i0;
  wire ram_rd_en_i;
  wire rd_clk;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire [5:0]rd_pntr_ext;
  wire [4:0]rd_pntr_wr;
  wire [4:0]rd_pntr_wr_cdc;
  wire [5:0]rd_pntr_wr_cdc_dc;
  wire rd_rst_busy;
  wire rdp_inst_n_10;
  wire rdp_inst_n_8;
  wire rdp_inst_n_9;
  wire rst;
  wire rst_d1;
  wire rst_d1_inst_n_1;
  wire sleep;
  wire underflow;
  wire underflow_i0;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire [5:0]wr_pntr_ext;
  wire [5:4]wr_pntr_plus1_pf;
  wire wr_pntr_plus1_pf_carry;
  wire [4:0]wr_pntr_rd_cdc;
  wire [5:0]wr_pntr_rd_cdc_dc;
  wire wr_rst_busy;
  wire wrpp1_inst_n_0;
  wire wrpp2_inst_n_0;
  wire wrpp2_inst_n_1;
  wire wrpp2_inst_n_2;
  wire wrst_busy;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ;
  wire \NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ;
  wire [41:0]\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED ;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign full_n = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__parameterized0 \gen_cdc_pntr.rd_pntr_cdc_dc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc_dc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray \gen_cdc_pntr.rd_pntr_cdc_inst 
       (.dest_clk(wr_clk),
        .dest_out_bin(rd_pntr_wr_cdc),
        .src_clk(rd_clk),
        .src_in_bin(rd_pntr_ext[4:0]));
  bd_d10d_rx_0_xpm_fifo_reg_vec \gen_cdc_pntr.rpw_gray_reg 
       (.D(rd_pntr_wr_cdc),
        .E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 (wrpp2_inst_n_0),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 (wr_pntr_plus1_pf),
        .ram_full_i0(ram_full_i0),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0 \gen_cdc_pntr.rpw_gray_reg_dc 
       (.D(rd_pntr_wr_cdc_dc),
        .Q({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_reg_vec_1 \gen_cdc_pntr.wpr_gray_reg 
       (.D({diff_pntr_pe[4:2],diff_pntr_pe[0]}),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] (empty),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] (rd_pntr_ext[3:0]),
        .\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 (rdp_inst_n_10),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .\reg_out_i_reg[0]_0 (rd_rst_busy),
        .\reg_out_i_reg[2]_0 (\gen_cdc_pntr.wpr_gray_reg_n_9 ),
        .\reg_out_i_reg[4]_0 (wr_pntr_rd_cdc));
  bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_2 \gen_cdc_pntr.wpr_gray_reg_dc 
       (.D(wr_pntr_rd_cdc_dc),
        .O(\grdc.diff_wr_rd_pntr_rdc0_out ),
        .Q(rd_pntr_ext),
        .rd_clk(rd_clk),
        .\reg_out_i_reg[0]_0 (rd_rst_busy));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "6" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__parameterized0__6 \gen_cdc_pntr.wr_pntr_cdc_dc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc_dc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext));
  (* DEST_SYNC_FF = "2" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SIM_LOSSLESS_GRAY_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "5" *) 
  (* XPM_CDC = "GRAY" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_gray__6 \gen_cdc_pntr.wr_pntr_cdc_inst 
       (.dest_clk(rd_clk),
        .dest_out_bin(wr_pntr_rd_cdc),
        .src_clk(wr_clk),
        .src_in_bin(wr_pntr_ext[4:0]));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[0]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[1]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[2]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[3]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(diff_pntr_pe[4]),
        .Q(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .R(rd_rst_busy));
  LUT3 #(
    .INIT(8'hB8)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1 
       (.I0(prog_empty),
        .I1(empty),
        .I2(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0000557F)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[3] ),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[0] ),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[1] ),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[2] ),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg_n_0_[4] ),
        .O(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_2_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.gpe_ic.prog_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_pf_ic_rc.gpe_ic.prog_empty_i_i_1_n_0 ),
        .Q(prog_empty),
        .S(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[2]),
        .Q(diff_pntr_pf_q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[3]),
        .Q(diff_pntr_pf_q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[4]),
        .Q(diff_pntr_pf_q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(diff_pntr_pf_q0[5]),
        .Q(diff_pntr_pf_q[5]),
        .R(wrst_busy));
  LUT6 #(
    .INIT(64'hBBBBBBB8B8B8B8B8)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_2 
       (.I0(prog_full),
        .I1(full),
        .I2(diff_pntr_pf_q[5]),
        .I3(diff_pntr_pf_q[3]),
        .I4(diff_pntr_pf_q[2]),
        .I5(diff_pntr_pf_q[4]),
        .O(\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1_inst_n_1),
        .Q(prog_full),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(ram_full_i0),
        .Q(full),
        .R(wrst_busy));
  FDSE #(
    .INIT(1'b1)) 
    \gen_pf_ic_rc.ram_empty_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_i0),
        .Q(empty),
        .S(rd_rst_busy));
  (* ADDR_WIDTH_A = "5" *) 
  (* ADDR_WIDTH_B = "5" *) 
  (* AUTO_SLEEP_TIME = "0" *) 
  (* BYTE_WRITE_WIDTH_A = "42" *) 
  (* BYTE_WRITE_WIDTH_B = "42" *) 
  (* CASCADE_HEIGHT = "0" *) 
  (* CLOCKING_MODE = "1" *) 
  (* ECC_MODE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* MAX_NUM_CHAR = "0" *) 
  (* MEMORY_INIT_FILE = "none" *) 
  (* MEMORY_INIT_PARAM = "" *) 
  (* MEMORY_OPTIMIZATION = "true" *) 
  (* MEMORY_PRIMITIVE = "1" *) 
  (* MEMORY_SIZE = "1344" *) 
  (* MEMORY_TYPE = "1" *) 
  (* MESSAGE_CONTROL = "0" *) 
  (* NUM_CHAR_LOC = "0" *) 
  (* P_ECC_MODE = "no_ecc" *) 
  (* P_ENABLE_BYTE_WRITE_A = "0" *) 
  (* P_ENABLE_BYTE_WRITE_B = "0" *) 
  (* P_MAX_DEPTH_DATA = "32" *) 
  (* P_MEMORY_OPT = "yes" *) 
  (* P_MEMORY_PRIMITIVE = "distributed" *) 
  (* P_MIN_WIDTH_DATA = "42" *) 
  (* P_MIN_WIDTH_DATA_A = "42" *) 
  (* P_MIN_WIDTH_DATA_B = "42" *) 
  (* P_MIN_WIDTH_DATA_ECC = "42" *) 
  (* P_MIN_WIDTH_DATA_LDW = "4" *) 
  (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
  (* P_NUM_COLS_WRITE_A = "1" *) 
  (* P_NUM_COLS_WRITE_B = "1" *) 
  (* P_NUM_ROWS_READ_A = "1" *) 
  (* P_NUM_ROWS_READ_B = "1" *) 
  (* P_NUM_ROWS_WRITE_A = "1" *) 
  (* P_NUM_ROWS_WRITE_B = "1" *) 
  (* P_SDP_WRITE_MODE = "yes" *) 
  (* P_WIDTH_ADDR_LSB_READ_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) 
  (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) 
  (* P_WIDTH_ADDR_READ_A = "5" *) 
  (* P_WIDTH_ADDR_READ_B = "5" *) 
  (* P_WIDTH_ADDR_WRITE_A = "5" *) 
  (* P_WIDTH_ADDR_WRITE_B = "5" *) 
  (* P_WIDTH_COL_WRITE_A = "42" *) 
  (* P_WIDTH_COL_WRITE_B = "42" *) 
  (* READ_DATA_WIDTH_A = "42" *) 
  (* READ_DATA_WIDTH_B = "42" *) 
  (* READ_LATENCY_A = "2" *) 
  (* READ_LATENCY_B = "1" *) 
  (* READ_RESET_VALUE_A = "0" *) 
  (* READ_RESET_VALUE_B = "0" *) 
  (* RST_MODE_A = "SYNC" *) 
  (* RST_MODE_B = "SYNC" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_EMBEDDED_CONSTRAINT = "1" *) 
  (* USE_MEM_INIT = "0" *) 
  (* USE_MEM_INIT_MMI = "0" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH_A = "42" *) 
  (* WRITE_DATA_WIDTH_B = "42" *) 
  (* WRITE_MODE_A = "2" *) 
  (* WRITE_MODE_B = "1" *) 
  (* WRITE_PROTECT = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* rsta_loop_iter = "44" *) 
  (* rstb_loop_iter = "44" *) 
  bd_d10d_rx_0_xpm_memory_base__parameterized2 \gen_sdpram.xpm_memory_base_inst 
       (.addra(wr_pntr_ext[4:0]),
        .addrb(rd_pntr_ext[4:0]),
        .clka(wr_clk),
        .clkb(rd_clk),
        .dbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterra_UNCONNECTED ),
        .dbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_dbiterrb_UNCONNECTED ),
        .dina(din),
        .dinb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .douta(\NLW_gen_sdpram.xpm_memory_base_inst_douta_UNCONNECTED [41:0]),
        .doutb(dout),
        .ena(wr_pntr_plus1_pf_carry),
        .enb(ram_rd_en_i),
        .injectdbiterra(1'b0),
        .injectdbiterrb(1'b0),
        .injectsbiterra(1'b0),
        .injectsbiterrb(1'b0),
        .regcea(1'b0),
        .regceb(1'b0),
        .rsta(1'b0),
        .rstb(rd_rst_busy),
        .sbiterra(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterra_UNCONNECTED ),
        .sbiterrb(\NLW_gen_sdpram.xpm_memory_base_inst_sbiterrb_UNCONNECTED ),
        .sleep(sleep),
        .wea(1'b0),
        .web(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gof.overflow_i_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(overflow_i0),
        .Q(overflow),
        .R(1'b0));
  FDRE \grdc.rd_data_count_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\grdc.diff_wr_rd_pntr_rdc0_out ),
        .Q(rd_data_count),
        .R(rd_rst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \guf.underflow_i_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(underflow_i0),
        .Q(underflow),
        .R(1'b0));
  FDRE \gwdc.wr_data_count_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_data_count),
        .R(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized7 rdp_inst
       (.D(diff_pntr_pe[1]),
        .E(ram_rd_en_i),
        .Q(rd_pntr_ext),
        .\count_value_i_reg[3]_0 (rdp_inst_n_9),
        .\count_value_i_reg[4]_0 (rdp_inst_n_10),
        .\count_value_i_reg[5]_0 (empty),
        .\count_value_i_reg[5]_1 (rd_rst_busy),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_8),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 ({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  bd_d10d_rx_0_xpm_counter_updn__parameterized8 rdpp1_inst
       (.E(ram_rd_en_i),
        .Q({\gen_cdc_pntr.wpr_gray_reg_n_4 ,\gen_cdc_pntr.wpr_gray_reg_n_5 ,\gen_cdc_pntr.wpr_gray_reg_n_6 ,\gen_cdc_pntr.wpr_gray_reg_n_7 ,\gen_cdc_pntr.wpr_gray_reg_n_8 }),
        .\count_value_i_reg[0]_0 (rd_rst_busy),
        .\count_value_i_reg[4]_0 (rdp_inst_n_8),
        .empty_i0(empty_i0),
        .\gen_pf_ic_rc.ram_empty_i_reg (rdp_inst_n_9),
        .\gen_pf_ic_rc.ram_empty_i_reg_0 (\gen_cdc_pntr.wpr_gray_reg_n_9 ),
        .\gen_pf_ic_rc.ram_empty_i_reg_1 (empty),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  bd_d10d_rx_0_xpm_fifo_reg_bit rst_d1_inst
       (.d_out_reg_0(rst_d1_inst_n_1),
        .\gen_pf_ic_rc.gpf_ic.prog_full_i_reg (\gen_pf_ic_rc.gpf_ic.prog_full_i_i_2_n_0 ),
        .rst(rst),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized7_3 wrp_inst
       (.E(wr_pntr_plus1_pf_carry),
        .O(\gwdc.diff_wr_rd_pntr1_out ),
        .Q(wr_pntr_ext),
        .\count_value_i_reg[5]_0 (full),
        .\gwdc.wr_data_count_i_reg[5] ({\gen_cdc_pntr.rpw_gray_reg_dc_n_0 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_1 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_2 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_3 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_4 ,\gen_cdc_pntr.rpw_gray_reg_dc_n_5 }),
        .rst_d1(rst_d1),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized8_4 wrpp1_inst
       (.D(diff_pntr_pf_q0),
        .E(wr_pntr_plus1_pf_carry),
        .Q(wr_pntr_plus1_pf),
        .\count_value_i_reg[2]_0 (wrpp1_inst_n_0),
        .\gen_pf_ic_rc.gpf_ic.diff_pntr_pf_q_reg[5] (rd_pntr_wr),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_counter_updn__parameterized9 wrpp2_inst
       (.E(wr_pntr_plus1_pf_carry),
        .Q(rd_pntr_wr[2:0]),
        .\count_value_i_reg[2]_0 (wrpp2_inst_n_0),
        .\count_value_i_reg[4]_0 ({wrpp2_inst_n_1,wrpp2_inst_n_2}),
        .wr_clk(wr_clk),
        .wrst_busy(wrst_busy));
  bd_d10d_rx_0_xpm_fifo_rst__parameterized0 xpm_fifo_rst_inst
       (.E(wr_pntr_plus1_pf_carry),
        .\gen_rst_ic.fifo_rd_rst_ic_reg_0 (rd_rst_busy),
        .\gof.overflow_i_reg (full),
        .\guf.underflow_i_reg (empty),
        .overflow_i0(overflow_i0),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .rst_d1(rst_d1),
        .underflow_i0(underflow_i0),
        .wr_clk(wr_clk),
        .wr_en(wr_en),
        .wr_rst_busy(wr_rst_busy),
        .wrst_busy(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module bd_d10d_rx_0_xpm_fifo_reg_bit
   (rst_d1,
    d_out_reg_0,
    wrst_busy,
    wr_clk,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    rst);
  output rst_d1;
  output d_out_reg_0;
  input wrst_busy;
  input wr_clk;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input rst;

  wire d_out_reg_0;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h00C4)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(rst_d1),
        .I1(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I2(rst),
        .I3(wrst_busy),
        .O(d_out_reg_0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module bd_d10d_rx_0_xpm_fifo_reg_bit_16
   (rst_d1,
    overflow_i0,
    write_only,
    d_out_reg_0,
    Q,
    wr_clk,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 );
  output rst_d1;
  output overflow_i0;
  output write_only;
  output d_out_reg_0;
  input [0:0]Q;
  input wr_clk;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;

  wire [0:0]Q;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_4 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .O(d_out_reg_0));
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(write_only));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module bd_d10d_rx_0_xpm_fifo_reg_bit_26
   (rst_d1,
    d_out_reg_0,
    wrst_busy,
    wr_clk,
    prog_full,
    \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ,
    p_1_in,
    rst);
  output rst_d1;
  output d_out_reg_0;
  input wrst_busy;
  input wr_clk;
  input prog_full;
  input \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  input p_1_in;
  input rst;

  wire d_out_reg_0;
  wire \gen_pf_ic_rc.gpf_ic.prog_full_i_reg ;
  wire p_1_in;
  wire prog_full;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(wrst_busy),
        .Q(rst_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000CFC04540)) 
    \gen_pf_ic_rc.gpf_ic.prog_full_i_i_1 
       (.I0(rst_d1),
        .I1(prog_full),
        .I2(\gen_pf_ic_rc.gpf_ic.prog_full_i_reg ),
        .I3(p_1_in),
        .I4(rst),
        .I5(wrst_busy),
        .O(d_out_reg_0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module bd_d10d_rx_0_xpm_fifo_reg_bit_5
   (rst_d1,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    overflow_i0,
    DI,
    d_out_reg_0,
    write_only,
    read_only,
    Q,
    wr_clk,
    prog_full,
    prog_full_i214_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ,
    rst);
  output rst_d1;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output overflow_i0;
  output [0:0]DI;
  output d_out_reg_0;
  output write_only;
  output read_only;
  input [0:0]Q;
  input wr_clk;
  input prog_full;
  input prog_full_i214_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  input rst;

  wire [0:0]DI;
  wire [0:0]Q;
  wire clr_full;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire prog_full;
  wire prog_full_i214_in;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf_q;
  wire read_only;
  wire rst;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hF4)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_4 
       (.I0(rst),
        .I1(rst_d1),
        .I2(Q),
        .O(d_out_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0010FFFF)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_2 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(DI));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h44444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .I4(rst_d1),
        .O(read_only));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .O(write_only));
  LUT6 #(
    .INIT(64'h000000000000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i214_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(clr_full),
        .I5(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(rst),
        .I1(rst_d1),
        .I2(Q),
        .O(clr_full));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_bit" *) 
module bd_d10d_rx_0_xpm_fifo_reg_bit_9
   (rst_d1,
    overflow_i0,
    write_only,
    d_out_reg_0,
    Q,
    wr_clk,
    \gof.overflow_i_reg ,
    wr_en,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 );
  output rst_d1;
  output overflow_i0;
  output write_only;
  output d_out_reg_0;
  input [0:0]Q;
  input wr_clk;
  input \gof.overflow_i_reg ;
  input wr_en;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;

  wire [0:0]Q;
  wire d_out_reg_0;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ;
  wire \gof.overflow_i_reg ;
  wire overflow_i0;
  wire rst_d1;
  wire wr_clk;
  wire wr_en;
  wire write_only;

  FDRE #(
    .INIT(1'b0)) 
    d_out_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(Q),
        .Q(rst_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[3]_i_4 
       (.I0(rst_d1),
        .I1(Q),
        .I2(wr_en),
        .I3(\gof.overflow_i_reg ),
        .O(d_out_reg_0));
  LUT5 #(
    .INIT(32'h04000404)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wr_en),
        .I2(rst_d1),
        .I3(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg_0 ),
        .O(write_only));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(rst_d1),
        .I1(Q),
        .I2(\gof.overflow_i_reg ),
        .I3(wr_en),
        .O(overflow_i0));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec
   (ram_full_i0,
    Q,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    E,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ,
    wrst_busy,
    D,
    wr_clk);
  output ram_full_i0;
  output [4:0]Q;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]E;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  input wrst_busy;
  input [4:0]D;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  wire ram_full_i0;
  wire wr_clk;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(E),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I4(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(ram_full_i0));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec_1
   (D,
    Q,
    \reg_out_i_reg[2]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ,
    \reg_out_i_reg[0]_0 ,
    \reg_out_i_reg[4]_0 ,
    rd_clk);
  output [3:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[2]_0 ;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  input \reg_out_i_reg[0]_0 ;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input rd_clk;

  wire [3:0]D;
  wire [4:0]Q;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[0]_0 ;
  wire \reg_out_i_reg[2]_0 ;
  wire [4:0]\reg_out_i_reg[4]_0 ;

  LUT4 #(
    .INIT(16'h6966)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ),
        .I3(rd_en),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h4DFF004DB200FFB2)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hB2BBFFFF0000B2BB)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ),
        .I3(rd_en),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I5(Q[0]),
        .O(\reg_out_i_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(Q[3]),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(Q[4]),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec_20
   (ram_full_i0,
    Q,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    E,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ,
    wrst_busy,
    D,
    wr_clk);
  output ram_full_i0;
  output [4:0]Q;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]E;
  input \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  input [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  input wrst_busy;
  input [4:0]D;
  input wr_clk;

  wire [4:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 ;
  wire [1:0]\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 ;
  wire ram_full_i0;
  wire wr_clk;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'hF8888888)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(E),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I4(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ),
        .O(ram_full_i0));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_2 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5 
       (.I0(Q[3]),
        .I1(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [0]),
        .I2(Q[4]),
        .I3(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg_1 [1]),
        .O(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec_22
   (D,
    Q,
    \reg_out_i_reg[2]_0 ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ,
    rd_en,
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ,
    SR,
    \reg_out_i_reg[4]_0 ,
    rd_clk);
  output [3:0]D;
  output [4:0]Q;
  output \reg_out_i_reg[2]_0 ;
  input [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  input rd_en;
  input \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  input [0:0]SR;
  input [4:0]\reg_out_i_reg[4]_0 ;
  input rd_clk;

  wire [3:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ;
  wire [3:0]\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] ;
  wire \gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ;
  wire rd_clk;
  wire rd_en;
  wire \reg_out_i_reg[2]_0 ;
  wire [4:0]\reg_out_i_reg[4]_0 ;

  LUT4 #(
    .INIT(16'h6966)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[0]_i_1 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ),
        .I3(rd_en),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[2]_i_1 
       (.I0(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I1(Q[2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[3]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h4DFF004DB200FFB2)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_1 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ),
        .I3(Q[3]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [3]),
        .I5(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4]_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hB2BBFFFF0000B2BB)) 
    \gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2 
       (.I0(Q[0]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I2(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[0] ),
        .I3(rd_en),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I5(Q[1]),
        .O(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \gen_pf_ic_rc.ram_empty_i_i_3 
       (.I0(Q[2]),
        .I1(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [2]),
        .I2(Q[1]),
        .I3(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [1]),
        .I4(\gen_pf_ic_rc.gpe_ic.diff_pntr_pe_reg[4] [0]),
        .I5(Q[0]),
        .O(\reg_out_i_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[4]_0 [4]),
        .Q(Q[4]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [5:0]Q;
  input wrst_busy;
  input [5:0]D;
  input wr_clk;

  wire [5:0]D;
  wire [5:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_2
   (O,
    Q,
    \reg_out_i_reg[0]_0 ,
    D,
    rd_clk);
  output [0:0]O;
  input [5:0]Q;
  input \reg_out_i_reg[0]_0 ;
  input [5:0]D;
  input rd_clk;

  wire [5:0]D;
  wire [0:0]O;
  wire [5:0]Q;
  wire \grdc.rd_data_count_i[5]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_7_n_0 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_7 ;
  wire rd_clk;
  wire \reg_out_i_reg[0]_0 ;
  wire \reg_out_i_reg_n_0_[0] ;
  wire \reg_out_i_reg_n_0_[1] ;
  wire \reg_out_i_reg_n_0_[2] ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire \reg_out_i_reg_n_0_[5] ;
  wire [7:5]\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_2 
       (.I0(\reg_out_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .O(\grdc.rd_data_count_i[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_3 
       (.I0(\reg_out_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .O(\grdc.rd_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_4 
       (.I0(\reg_out_i_reg_n_0_[3] ),
        .I1(Q[3]),
        .O(\grdc.rd_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_5 
       (.I0(\reg_out_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .O(\grdc.rd_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_6 
       (.I0(\reg_out_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .O(\grdc.rd_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_7 
       (.I0(\reg_out_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .O(\grdc.rd_data_count_i[5]_i_7_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \grdc.rd_data_count_i_reg[5]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED [7:5],\grdc.rd_data_count_i_reg[5]_i_1_n_3 ,\grdc.rd_data_count_i_reg[5]_i_1_n_4 ,\grdc.rd_data_count_i_reg[5]_i_1_n_5 ,\grdc.rd_data_count_i_reg[5]_i_1_n_6 ,\grdc.rd_data_count_i_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,\reg_out_i_reg_n_0_[4] ,\reg_out_i_reg_n_0_[3] ,\reg_out_i_reg_n_0_[2] ,\reg_out_i_reg_n_0_[1] ,\reg_out_i_reg_n_0_[0] }),
        .O({\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [7:6],O,\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [4:0]}),
        .S({1'b0,1'b0,\grdc.rd_data_count_i[5]_i_2_n_0 ,\grdc.rd_data_count_i[5]_i_3_n_0 ,\grdc.rd_data_count_i[5]_i_4_n_0 ,\grdc.rd_data_count_i[5]_i_5_n_0 ,\grdc.rd_data_count_i[5]_i_6_n_0 ,\grdc.rd_data_count_i[5]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\reg_out_i_reg_n_0_[0] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\reg_out_i_reg_n_0_[1] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\reg_out_i_reg_n_0_[2] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(\reg_out_i_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\reg_out_i_reg_n_0_[5] ),
        .R(\reg_out_i_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_21
   (Q,
    wrst_busy,
    D,
    wr_clk);
  output [5:0]Q;
  input wrst_busy;
  input [5:0]D;
  input wr_clk;

  wire [5:0]D;
  wire [5:0]Q;
  wire wr_clk;
  wire wrst_busy;

  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(wrst_busy));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(wrst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_reg_vec" *) 
module bd_d10d_rx_0_xpm_fifo_reg_vec__parameterized0_23
   (D,
    Q,
    SR,
    \reg_out_i_reg[5]_0 ,
    rd_clk);
  output [4:0]D;
  input [5:0]Q;
  input [0:0]SR;
  input [5:0]\reg_out_i_reg[5]_0 ;
  input rd_clk;

  wire [4:0]D;
  wire [5:0]Q;
  wire [0:0]SR;
  wire \grdc.rd_data_count_i[5]_i_2_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_3_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_4_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_5_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_6_n_0 ;
  wire \grdc.rd_data_count_i[5]_i_7_n_0 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_3 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_4 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_5 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_6 ;
  wire \grdc.rd_data_count_i_reg[5]_i_1_n_7 ;
  wire rd_clk;
  wire [5:0]\reg_out_i_reg[5]_0 ;
  wire \reg_out_i_reg_n_0_[0] ;
  wire \reg_out_i_reg_n_0_[1] ;
  wire \reg_out_i_reg_n_0_[2] ;
  wire \reg_out_i_reg_n_0_[3] ;
  wire \reg_out_i_reg_n_0_[4] ;
  wire \reg_out_i_reg_n_0_[5] ;
  wire [7:5]\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED ;
  wire [7:0]\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_2 
       (.I0(\reg_out_i_reg_n_0_[5] ),
        .I1(Q[5]),
        .O(\grdc.rd_data_count_i[5]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_3 
       (.I0(\reg_out_i_reg_n_0_[4] ),
        .I1(Q[4]),
        .O(\grdc.rd_data_count_i[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_4 
       (.I0(\reg_out_i_reg_n_0_[3] ),
        .I1(Q[3]),
        .O(\grdc.rd_data_count_i[5]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_5 
       (.I0(\reg_out_i_reg_n_0_[2] ),
        .I1(Q[2]),
        .O(\grdc.rd_data_count_i[5]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_6 
       (.I0(\reg_out_i_reg_n_0_[1] ),
        .I1(Q[1]),
        .O(\grdc.rd_data_count_i[5]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \grdc.rd_data_count_i[5]_i_7 
       (.I0(\reg_out_i_reg_n_0_[0] ),
        .I1(Q[0]),
        .O(\grdc.rd_data_count_i[5]_i_7_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \grdc.rd_data_count_i_reg[5]_i_1 
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({\NLW_grdc.rd_data_count_i_reg[5]_i_1_CO_UNCONNECTED [7:5],\grdc.rd_data_count_i_reg[5]_i_1_n_3 ,\grdc.rd_data_count_i_reg[5]_i_1_n_4 ,\grdc.rd_data_count_i_reg[5]_i_1_n_5 ,\grdc.rd_data_count_i_reg[5]_i_1_n_6 ,\grdc.rd_data_count_i_reg[5]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,\reg_out_i_reg_n_0_[4] ,\reg_out_i_reg_n_0_[3] ,\reg_out_i_reg_n_0_[2] ,\reg_out_i_reg_n_0_[1] ,\reg_out_i_reg_n_0_[0] }),
        .O({\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [7:6],D,\NLW_grdc.rd_data_count_i_reg[5]_i_1_O_UNCONNECTED [0]}),
        .S({1'b0,1'b0,\grdc.rd_data_count_i[5]_i_2_n_0 ,\grdc.rd_data_count_i[5]_i_3_n_0 ,\grdc.rd_data_count_i[5]_i_4_n_0 ,\grdc.rd_data_count_i[5]_i_5_n_0 ,\grdc.rd_data_count_i[5]_i_6_n_0 ,\grdc.rd_data_count_i[5]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [0]),
        .Q(\reg_out_i_reg_n_0_[0] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [1]),
        .Q(\reg_out_i_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [2]),
        .Q(\reg_out_i_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [3]),
        .Q(\reg_out_i_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [4]),
        .Q(\reg_out_i_reg_n_0_[4] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \reg_out_i_reg[5] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\reg_out_i_reg[5]_0 [5]),
        .Q(\reg_out_i_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module bd_d10d_rx_0_xpm_fifo_rst
   (\gen_pntr_flags_cc.ram_empty_i_reg ,
    ram_wr_en_pf,
    \gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ,
    wr_rst_busy,
    \grdc.rd_data_count_i0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    SR,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    rst,
    ram_empty_i,
    rd_en,
    Q,
    wr_en,
    \count_value_i_reg[10] ,
    rst_d1,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    \guf.underflow_i_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ,
    wr_clk);
  output \gen_pntr_flags_cc.ram_empty_i_reg ;
  output ram_wr_en_pf;
  output [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  output wr_rst_busy;
  output \grdc.rd_data_count_i0 ;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  output [0:0]SR;
  output [0:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input rst;
  input ram_empty_i;
  input rd_en;
  input [1:0]Q;
  input wr_en;
  input \count_value_i_reg[10] ;
  input rst_d1;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input \guf.underflow_i_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ;
  input [0:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ;
  input wr_clk;

  wire [1:0]Q;
  wire [0:0]SR;
  wire \count_value_i_reg[10] ;
  wire [0:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ram_empty_i_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ;
  wire [0:0]\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  wire \grdc.rd_data_count_i0 ;
  wire \guf.underflow_i_reg ;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire ram_empty_i;
  wire ram_wr_en_pf;
  wire rd_en;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__4 
       (.I0(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .I1(ram_empty_i),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(SR));
  LUT5 #(
    .INIT(32'h00005455)) 
    \gen_pntr_flags_cc.gaf_cc.ram_afull_i_i_2 
       (.I0(ram_empty_i),
        .I1(rd_en),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(ram_wr_en_pf),
        .O(\gen_pntr_flags_cc.ram_empty_i_reg ));
  LUT5 #(
    .INIT(32'hFF2F00D0)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe[7]_i_10 
       (.I0(ram_wr_en_pf),
        .I1(\count_value_i_reg[10] ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7] ),
        .I3(\guf.underflow_i_reg ),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.diff_pntr_pe_reg[7]_0 ),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .S(rst_i));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\count_value_i_reg[10] ),
        .I2(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[11]_i_1 
       (.I0(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\grdc.rd_data_count_i0 ));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\guf.underflow_i_reg ),
        .I1(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module bd_d10d_rx_0_xpm_fifo_rst_12
   (\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    read_only,
    Q,
    ram_full_i0,
    ram_wr_en_pf,
    wr_rst_busy,
    SR,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    \gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ,
    prog_full,
    prog_full_i215_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    rst,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ,
    wr_en,
    rst_d1,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    leaving_empty0,
    \grdc.rd_data_count_i_reg[0] ,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    rd_en,
    ram_empty_i,
    wr_clk);
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output read_only;
  output [0:0]Q;
  output ram_full_i0;
  output ram_wr_en_pf;
  output wr_rst_busy;
  output [0:0]SR;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  output [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  input prog_full;
  input prog_full_i215_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input rst;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  input wr_en;
  input rst_d1;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input leaving_empty0;
  input [1:0]\grdc.rd_data_count_i_reg[0] ;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input rd_en;
  input ram_empty_i;
  input wr_clk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[0] ;
  wire leaving_empty0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire rd_en;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q),
        .I1(ram_empty_i),
        .I2(\grdc.rd_data_count_i_reg[0] [1]),
        .I3(\grdc.rd_data_count_i_reg[0] [0]),
        .O(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I3(leaving_empty0),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .O(ram_full_i0));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT6 #(
    .INIT(64'h4444444444444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I3(wr_en),
        .I4(Q),
        .I5(rst_d1),
        .O(read_only));
  LUT5 #(
    .INIT(32'h0000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i215_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(Q),
        .I1(rst_d1),
        .I2(rst),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(Q),
        .S(rst_i));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I2(Q),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(Q),
        .I1(\grdc.rd_data_count_i_reg[0] [0]),
        .I2(\grdc.rd_data_count_i_reg[0] [1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(Q),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(Q),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module bd_d10d_rx_0_xpm_fifo_rst_19
   (\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ,
    read_only,
    Q,
    ram_full_i0,
    ram_wr_en_pf,
    wr_rst_busy,
    SR,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ,
    underflow_i0,
    \gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ,
    prog_full,
    prog_full_i215_in,
    ram_wr_en_pf_q,
    ram_rd_en_pf_q,
    rst,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ,
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ,
    wr_en,
    rst_d1,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ,
    leaving_empty0,
    \grdc.rd_data_count_i_reg[0] ,
    write_only_q,
    prog_empty,
    prog_empty_i1,
    read_only_q,
    rd_en,
    ram_empty_i,
    wr_clk);
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  output read_only;
  output [0:0]Q;
  output ram_full_i0;
  output ram_wr_en_pf;
  output wr_rst_busy;
  output [0:0]SR;
  output \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  output underflow_i0;
  output [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  input prog_full;
  input prog_full_i215_in;
  input ram_wr_en_pf_q;
  input ram_rd_en_pf_q;
  input rst;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  input \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  input wr_en;
  input rst_d1;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  input leaving_empty0;
  input [1:0]\grdc.rd_data_count_i_reg[0] ;
  input write_only_q;
  input prog_empty;
  input prog_empty_i1;
  input read_only_q;
  input rd_en;
  input ram_empty_i;
  input wr_clk;

  wire [0:0]Q;
  wire [0:0]SR;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ;
  wire \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ;
  wire [1:0]\gen_rst_cc.fifo_wr_rst_cc ;
  wire [0:0]\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ;
  wire [1:0]\grdc.rd_data_count_i_reg[0] ;
  wire leaving_empty0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire prog_empty;
  wire prog_empty_i1;
  wire prog_full;
  wire prog_full_i215_in;
  wire ram_empty_i;
  wire ram_full_i0;
  wire ram_rd_en_pf_q;
  wire ram_wr_en_pf;
  wire ram_wr_en_pf_q;
  wire rd_en;
  wire read_only;
  wire read_only_q;
  wire rst;
  wire rst_d1;
  wire rst_i;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire write_only_q;

  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    \count_value_i[1]_i_1__3 
       (.I0(Q),
        .I1(ram_empty_i),
        .I2(\grdc.rd_data_count_i_reg[0] [1]),
        .I3(\grdc.rd_data_count_i_reg[0] [0]),
        .O(\gen_rst_cc.fifo_wr_rst_cc_reg[2]_0 ));
  LUT6 #(
    .INIT(64'h00FFFFFF00008080)) 
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_i_1 
       (.I0(ram_wr_en_pf),
        .I1(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ),
        .I2(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg_0 ),
        .I3(leaving_empty0),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I5(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .O(ram_full_i0));
  LUT5 #(
    .INIT(32'hFFFFFC4C)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.prog_empty_i_i_1 
       (.I0(write_only_q),
        .I1(prog_empty),
        .I2(prog_empty_i1),
        .I3(read_only_q),
        .I4(Q),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.write_only_q_reg ));
  LUT6 #(
    .INIT(64'h4444444444444044)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_0 ),
        .I2(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I3(wr_en),
        .I4(Q),
        .I5(rst_d1),
        .O(read_only));
  LUT5 #(
    .INIT(32'h0000A2EA)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_1 
       (.I0(prog_full),
        .I1(prog_full_i215_in),
        .I2(ram_wr_en_pf_q),
        .I3(ram_rd_en_pf_q),
        .I4(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_reg ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'hAE)) 
    \gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3 
       (.I0(Q),
        .I1(rst_d1),
        .I2(rst),
        .O(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpf_cc_sym.prog_full_i_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_cc.fifo_wr_rst_cc[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .O(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [0]),
        .Q(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .S(rst_i));
  FDSE #(
    .INIT(1'b0)) 
    \gen_rst_cc.fifo_wr_rst_cc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_cc.fifo_wr_rst_cc [1]),
        .Q(Q),
        .S(rst_i));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg_1 ),
        .I2(Q),
        .I3(rst_d1),
        .O(ram_wr_en_pf));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hAB)) 
    \grdc.rd_data_count_i[4]_i_1 
       (.I0(Q),
        .I1(\grdc.rd_data_count_i_reg[0] [0]),
        .I2(\grdc.rd_data_count_i_reg[0] [1]),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_pntr_flags_cc.wrp_eq_rdp_pf_cc.gpe_cc_sym.read_only_q_reg ),
        .I1(Q),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(Q),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module bd_d10d_rx_0_xpm_fifo_rst__parameterized0
   (\gen_rst_ic.fifo_rd_rst_ic_reg_0 ,
    wrst_busy,
    overflow_i0,
    E,
    wr_rst_busy,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    \gof.overflow_i_reg ,
    rst_d1,
    wr_en,
    \guf.underflow_i_reg ,
    rd_en);
  output \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  output wrst_busy;
  output overflow_i0;
  output [0:0]E;
  output wr_rst_busy;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input \gof.overflow_i_reg ;
  input rst_d1;
  input wr_en;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire \__0/i__n_0 ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_ic_reg_0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire \guf.underflow_i_reg ;
  wire overflow_i0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h555555555555FFD5)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF800F800FF00F800)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\/i__n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1000100010000000)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .I2(\/i__n_0 ),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFF8FFFFFFF80000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_sync_rst \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ));
  LUT6 #(
    .INIT(64'h00000000AAAAAAAE)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_sync_rst__6 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gof.overflow_i_reg ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wrst_busy),
        .I2(rst_d1),
        .I3(wr_en),
        .O(overflow_i0));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(\gen_rst_ic.fifo_rd_rst_ic_reg_0 ),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* ORIG_REF_NAME = "xpm_fifo_rst" *) 
module bd_d10d_rx_0_xpm_fifo_rst__parameterized0__xdcDup__1
   (SR,
    wrst_busy,
    overflow_i0,
    E,
    wr_rst_busy,
    underflow_i0,
    rd_clk,
    wr_clk,
    rst,
    \gof.overflow_i_reg ,
    rst_d1,
    wr_en,
    \guf.underflow_i_reg ,
    rd_en);
  output [0:0]SR;
  output wrst_busy;
  output overflow_i0;
  output [0:0]E;
  output wr_rst_busy;
  output underflow_i0;
  input rd_clk;
  input wr_clk;
  input rst;
  input \gof.overflow_i_reg ;
  input rst_d1;
  input wr_en;
  input \guf.underflow_i_reg ;
  input rd_en;

  wire \/i__n_0 ;
  wire [0:0]E;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ;
  wire \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ;
  wire \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ;
  wire [0:0]SR;
  wire \__0/i__n_0 ;
  (* RTL_KEEP = "yes" *) wire [1:0]\gen_rst_ic.curr_rrst_state ;
  wire \gen_rst_ic.fifo_rd_rst_i0 ;
  wire \gen_rst_ic.fifo_rd_rst_wr_i ;
  wire \gen_rst_ic.fifo_wr_rst_ic ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ;
  wire \gen_rst_ic.fifo_wr_rst_rd ;
  wire \gen_rst_ic.rst_seq_reentered_i_1_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_i_2_n_0 ;
  wire \gen_rst_ic.rst_seq_reentered_reg_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ;
  wire \gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ;
  wire \gof.overflow_i_reg ;
  wire \guf.underflow_i_reg ;
  wire overflow_i0;
  wire p_0_in;
  wire \power_on_rst_reg_n_0_[0] ;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire rst_d1;
  wire underflow_i0;
  wire wr_clk;
  wire wr_en;
  wire wr_rst_busy;
  wire wrst_busy;

  LUT5 #(
    .INIT(32'h00010116)) 
    \/i_ 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\/i__n_0 ));
  LUT6 #(
    .INIT(64'h555555555555FFD5)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(p_0_in),
        .I5(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF800F800FF00F800)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\/i__n_0 ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I5(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2 
       (.I0(p_0_in),
        .I1(rst),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1000100010000000)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1 
       (.I0(p_0_in),
        .I1(rst),
        .I2(\/i__n_0 ),
        .I3(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1 
       (.I0(\/i__n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I3(rst),
        .I4(p_0_in),
        .O(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "WRST_OUT:00100,WRST_IN:00010,WRST_GO2IDLE:10000,WRST_EXIT:01000,WRST_IDLE:00001" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_gen_rst_ic.curr_wrst_state_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\FSM_onehot_gen_rst_ic.curr_wrst_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1 
       (.I0(\gen_rst_ic.curr_rrst_state [0]),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .O(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\__0/i__n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "iSTATE:00,iSTATE0:01,iSTATE1:10,iSTATE2:11" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_rst_ic.curr_rrst_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\FSM_sequential_gen_rst_ic.curr_rrst_state[1]_i_1_n_0 ),
        .Q(\gen_rst_ic.curr_rrst_state [1]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h06)) 
    \__0/i_ 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\__0/i__n_0 ));
  LUT3 #(
    .INIT(8'h3E)) 
    \gen_rst_ic.fifo_rd_rst_ic_i_1 
       (.I0(\gen_rst_ic.fifo_wr_rst_rd ),
        .I1(\gen_rst_ic.curr_rrst_state [1]),
        .I2(\gen_rst_ic.curr_rrst_state [0]),
        .O(\gen_rst_ic.fifo_rd_rst_i0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_rd_rst_ic_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_rd_rst_i0 ),
        .Q(SR),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFF8FFFFFFF80000)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_1 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I4(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ),
        .I5(\gen_rst_ic.fifo_wr_rst_ic ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010116)) 
    \gen_rst_ic.fifo_wr_rst_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .O(\gen_rst_ic.fifo_wr_rst_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.fifo_wr_rst_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.fifo_wr_rst_ic_i_1_n_0 ),
        .Q(\gen_rst_ic.fifo_wr_rst_ic ),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_sync_rst__5 \gen_rst_ic.rrst_wr_inst 
       (.dest_clk(wr_clk),
        .dest_rst(\gen_rst_ic.fifo_rd_rst_wr_i ),
        .src_rst(SR));
  LUT6 #(
    .INIT(64'h00000000AAAAAAAE)) 
    \gen_rst_ic.rst_seq_reentered_i_1 
       (.I0(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .I2(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I5(\FSM_onehot_gen_rst_ic.curr_wrst_state[1]_i_2_n_0 ),
        .O(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \gen_rst_ic.rst_seq_reentered_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .O(\gen_rst_ic.rst_seq_reentered_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.rst_seq_reentered_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.rst_seq_reentered_i_1_n_0 ),
        .Q(\gen_rst_ic.rst_seq_reentered_reg_n_0 ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFFEF00)) 
    \gen_rst_ic.wr_rst_busy_ic_i_1 
       (.I0(rst),
        .I1(p_0_in),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ),
        .I4(wrst_busy),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000116)) 
    \gen_rst_ic.wr_rst_busy_ic_i_2 
       (.I0(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[3] ),
        .I4(\FSM_onehot_gen_rst_ic.curr_wrst_state_reg_n_0_[4] ),
        .O(\gen_rst_ic.wr_rst_busy_ic_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rst_ic.wr_rst_busy_ic_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gen_rst_ic.wr_rst_busy_ic_i_1_n_0 ),
        .Q(wrst_busy),
        .R(1'b0));
  (* DEF_VAL = "1'b0" *) 
  (* DEST_SYNC_FF = "2" *) 
  (* INIT = "0" *) 
  (* INIT_SYNC_FF = "1" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_sync_rst__4 \gen_rst_ic.wrst_rd_inst 
       (.dest_clk(rd_clk),
        .dest_rst(\gen_rst_ic.fifo_wr_rst_rd ),
        .src_rst(\gen_rst_ic.fifo_wr_rst_ic ));
  LUT4 #(
    .INIT(16'h0002)) 
    \gen_sdpram.xpm_memory_base_inst_i_1 
       (.I0(wr_en),
        .I1(\gof.overflow_i_reg ),
        .I2(wrst_busy),
        .I3(rst_d1),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    \gof.overflow_i_i_1 
       (.I0(\gof.overflow_i_reg ),
        .I1(wrst_busy),
        .I2(rst_d1),
        .I3(wr_en),
        .O(overflow_i0));
  LUT3 #(
    .INIT(8'hE0)) 
    \guf.underflow_i_i_1 
       (.I0(SR),
        .I1(\guf.underflow_i_reg ),
        .I2(rd_en),
        .O(underflow_i0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(\power_on_rst_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \power_on_rst_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\power_on_rst_reg_n_0_[0] ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'hE)) 
    wr_rst_busy_INST_0
       (.I0(wrst_busy),
        .I1(rst_d1),
        .O(wr_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "1" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "5" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "5" *) (* READ_DATA_WIDTH = "12" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "12" *) (* WR_DATA_COUNT_WIDTH = "5" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module bd_d10d_rx_0_xpm_fifo_sync
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [11:0]din;
  output full;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [11:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [11:0]din;
  wire [11:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_SIZE = "192" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "3" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "5" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "12" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "12" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  bd_d10d_rx_0_xpm_fifo_base xpm_fifo_base_inst
       (.almost_empty(NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) (* FIFO_MEMORY_TYPE = "distributed" *) (* FIFO_READ_LATENCY = "1" *) 
(* FIFO_WRITE_DEPTH = "16" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "5" *) (* PROG_FULL_THRESH = "11" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "1" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "5" *) (* READ_DATA_WIDTH = "12" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0707" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "12" *) (* WR_DATA_COUNT_WIDTH = "5" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module bd_d10d_rx_0_xpm_fifo_sync__2
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [11:0]din;
  output full;
  output prog_full;
  output [4:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [11:0]dout;
  output empty;
  output prog_empty;
  output [4:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire [11:0]din;
  wire [11:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [4:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [4:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000011100000111" *) 
  (* EN_AE = "1'b0" *) 
  (* EN_AF = "1'b0" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "1" *) 
  (* FIFO_MEM_TYPE = "1" *) 
  (* FIFO_READ_DEPTH = "16" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_SIZE = "192" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "3" *) 
  (* PE_THRESH_MAX = "11" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "9" *) 
  (* PF_THRESH_MAX = "11" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "5" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* RD_DC_WIDTH_EXT = "5" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "4" *) 
  (* READ_DATA_WIDTH = "12" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "12" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* WR_DC_WIDTH_EXT = "5" *) 
  (* WR_DEPTH_LOG = "4" *) 
  (* WR_PNTR_WIDTH = "4" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "4" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  bd_d10d_rx_0_xpm_fifo_base__2 xpm_fifo_base_inst
       (.almost_empty(NLW_xpm_fifo_base_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_xpm_fifo_base_inst_almost_full_UNCONNECTED),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* CASCADE_HEIGHT = "0" *) (* DOUT_RESET_VALUE = "0" *) (* ECC_MODE = "no_ecc" *) 
(* EN_ADV_FEATURE_SYNC = "16'b0000111100001111" *) (* FIFO_MEMORY_TYPE = "block" *) (* FIFO_READ_LATENCY = "1" *) 
(* FIFO_WRITE_DEPTH = "2048" *) (* FULL_RESET_VALUE = "0" *) (* ORIG_REF_NAME = "xpm_fifo_sync" *) 
(* PROG_EMPTY_THRESH = "10" *) (* PROG_FULL_THRESH = "2043" *) (* P_COMMON_CLOCK = "1" *) 
(* P_ECC_MODE = "0" *) (* P_FIFO_MEMORY_TYPE = "2" *) (* P_READ_MODE = "1" *) 
(* P_WAKEUP_TIME = "2" *) (* RD_DATA_COUNT_WIDTH = "1" *) (* READ_DATA_WIDTH = "68" *) 
(* READ_MODE = "fwft" *) (* SIM_ASSERT_CHK = "0" *) (* USE_ADV_FEATURES = "0f0f" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH = "68" *) (* WR_DATA_COUNT_WIDTH = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) 
module bd_d10d_rx_0_xpm_fifo_sync__parameterized0
   (sleep,
    rst,
    wr_clk,
    wr_en,
    din,
    full,
    prog_full,
    wr_data_count,
    overflow,
    wr_rst_busy,
    almost_full,
    wr_ack,
    rd_en,
    dout,
    empty,
    prog_empty,
    rd_data_count,
    underflow,
    rd_rst_busy,
    almost_empty,
    data_valid,
    injectsbiterr,
    injectdbiterr,
    sbiterr,
    dbiterr);
  input sleep;
  input rst;
  input wr_clk;
  input wr_en;
  input [67:0]din;
  output full;
  output prog_full;
  output [0:0]wr_data_count;
  output overflow;
  output wr_rst_busy;
  output almost_full;
  output wr_ack;
  input rd_en;
  output [67:0]dout;
  output empty;
  output prog_empty;
  output [0:0]rd_data_count;
  output underflow;
  output rd_rst_busy;
  output almost_empty;
  output data_valid;
  input injectsbiterr;
  input injectdbiterr;
  output sbiterr;
  output dbiterr;

  wire \<const0> ;
  wire almost_empty;
  wire almost_full;
  wire [67:0]din;
  wire [67:0]dout;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire prog_full;
  wire [0:0]rd_data_count;
  wire rd_en;
  wire rd_rst_busy;
  wire rst;
  wire sleep;
  wire underflow;
  wire wr_clk;
  wire [0:0]wr_data_count;
  wire wr_en;
  wire NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_full_n_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED;
  wire NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED;

  assign data_valid = \<const0> ;
  assign dbiterr = \<const0> ;
  assign sbiterr = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_rst_busy = rd_rst_busy;
  GND GND
       (.G(\<const0> ));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_DEST_SYNC_FF = "2" *) 
  (* COMMON_CLOCK = "1" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "0" *) 
  (* ENABLE_ECC = "0" *) 
  (* EN_ADV_FEATURE = "16'b0000111100001111" *) 
  (* EN_AE = "1'b1" *) 
  (* EN_AF = "1'b1" *) 
  (* EN_DVLD = "1'b0" *) 
  (* EN_OF = "1'b1" *) 
  (* EN_PE = "1'b1" *) 
  (* EN_PF = "1'b1" *) 
  (* EN_RDC = "1'b1" *) 
  (* EN_UF = "1'b1" *) 
  (* EN_WACK = "1'b0" *) 
  (* EN_WDC = "1'b1" *) 
  (* FG_EQ_ASYM_DOUT = "1'b0" *) 
  (* FIFO_MEMORY_TYPE = "2" *) 
  (* FIFO_MEM_TYPE = "2" *) 
  (* FIFO_READ_DEPTH = "2048" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_SIZE = "139264" *) 
  (* FIFO_WRITE_DEPTH = "2048" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* FULL_RST_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PE_THRESH_ADJ = "8" *) 
  (* PE_THRESH_MAX = "2043" *) 
  (* PE_THRESH_MIN = "5" *) 
  (* PF_THRESH_ADJ = "2041" *) 
  (* PF_THRESH_MAX = "2043" *) 
  (* PF_THRESH_MIN = "5" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "2043" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* RD_DC_WIDTH_EXT = "12" *) 
  (* RD_LATENCY = "2" *) 
  (* RD_MODE = "1" *) 
  (* RD_PNTR_WIDTH = "11" *) 
  (* READ_DATA_WIDTH = "68" *) 
  (* READ_MODE = "1" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* REMOVE_WR_RD_PROT_LOGIC = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0f0f" *) 
  (* VERSION = "0" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WIDTH_RATIO = "1" *) 
  (* WRITE_DATA_WIDTH = "68" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* WR_DC_WIDTH_EXT = "12" *) 
  (* WR_DEPTH_LOG = "11" *) 
  (* WR_PNTR_WIDTH = "11" *) 
  (* WR_RD_RATIO = "0" *) 
  (* WR_WIDTH_LOG = "7" *) 
  (* XPM_MODULE = "TRUE" *) 
  (* both_stages_valid = "3" *) 
  (* invalid = "0" *) 
  (* stage1_valid = "2" *) 
  (* stage2_valid = "1" *) 
  bd_d10d_rx_0_xpm_fifo_base__parameterized0 xpm_fifo_base_inst
       (.almost_empty(almost_empty),
        .almost_full(almost_full),
        .data_valid(NLW_xpm_fifo_base_inst_data_valid_UNCONNECTED),
        .dbiterr(NLW_xpm_fifo_base_inst_dbiterr_UNCONNECTED),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .full_n(NLW_xpm_fifo_base_inst_full_n_UNCONNECTED),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_full(prog_full),
        .rd_clk(1'b0),
        .rd_data_count(rd_data_count),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_xpm_fifo_base_inst_rd_rst_busy_UNCONNECTED),
        .rst(rst),
        .sbiterr(NLW_xpm_fifo_base_inst_sbiterr_UNCONNECTED),
        .sleep(sleep),
        .underflow(underflow),
        .wr_ack(NLW_xpm_fifo_base_inst_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(wr_data_count),
        .wr_en(wr_en),
        .wr_rst_busy(rd_rst_busy));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "12" *) (* BYTE_WRITE_WIDTH_B = "12" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "192" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "12" *) (* P_MIN_WIDTH_DATA_A = "12" *) (* P_MIN_WIDTH_DATA_B = "12" *) 
(* P_MIN_WIDTH_DATA_ECC = "12" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "12" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "12" *) (* P_WIDTH_COL_WRITE_B = "12" *) (* READ_DATA_WIDTH_A = "12" *) 
(* READ_DATA_WIDTH_B = "12" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "12" *) (* WRITE_DATA_WIDTH_B = "12" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "12" *) 
(* rstb_loop_iter = "12" *) 
module bd_d10d_rx_0_xpm_memory_base
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [11:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [11:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [11:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [11:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire [11:0]dina;
  wire [11:0]doutb;
  wire ena;
  wire enb;
  wire [11:0]\gen_rd_b.doutb_reg ;
  wire [11:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "192" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "11" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "4" *) (* ADDR_WIDTH_B = "4" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "12" *) (* BYTE_WRITE_WIDTH_B = "12" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "192" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "16" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "12" *) (* P_MIN_WIDTH_DATA_A = "12" *) (* P_MIN_WIDTH_DATA_B = "12" *) 
(* P_MIN_WIDTH_DATA_ECC = "12" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "12" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "4" *) 
(* P_WIDTH_ADDR_READ_B = "4" *) (* P_WIDTH_ADDR_WRITE_A = "4" *) (* P_WIDTH_ADDR_WRITE_B = "4" *) 
(* P_WIDTH_COL_WRITE_A = "12" *) (* P_WIDTH_COL_WRITE_B = "12" *) (* READ_DATA_WIDTH_A = "12" *) 
(* READ_DATA_WIDTH_B = "12" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "12" *) (* WRITE_DATA_WIDTH_B = "12" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "12" *) 
(* rstb_loop_iter = "12" *) 
module bd_d10d_rx_0_xpm_memory_base__2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [3:0]addra;
  input [11:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [11:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [3:0]addrb;
  input [11:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [11:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [3:0]addra;
  wire [3:0]addrb;
  wire clka;
  wire [11:0]dina;
  wire [11:0]doutb;
  wire ena;
  wire enb;
  wire [11:0]\gen_rd_b.doutb_reg ;
  wire [11:0]\gen_rd_b.doutb_reg0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(\gen_rd_b.doutb_reg [0]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(\gen_rd_b.doutb_reg [10]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(\gen_rd_b.doutb_reg [11]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(\gen_rd_b.doutb_reg [1]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(\gen_rd_b.doutb_reg [2]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(\gen_rd_b.doutb_reg [3]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(\gen_rd_b.doutb_reg [4]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(\gen_rd_b.doutb_reg [5]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(\gen_rd_b.doutb_reg [6]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(\gen_rd_b.doutb_reg [7]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(\gen_rd_b.doutb_reg [8]),
        .R(1'b0));
  (* dram_emb_xdc = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clka),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(\gen_rd_b.doutb_reg [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][0] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [0]),
        .Q(doutb[0]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][10] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [10]),
        .Q(doutb[10]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][11] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [11]),
        .Q(doutb[11]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][1] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [1]),
        .Q(doutb[1]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][2] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [2]),
        .Q(doutb[2]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][3] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [3]),
        .Q(doutb[3]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][4] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [4]),
        .Q(doutb[4]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][5] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [5]),
        .Q(doutb[5]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][6] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [6]),
        .Q(doutb[6]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][7] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [7]),
        .Q(doutb[7]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][8] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [8]),
        .Q(doutb[8]),
        .R(rstb));
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.gen_doutb_pipe.doutb_pipe_reg[0][9] 
       (.C(clka),
        .CE(regceb),
        .D(\gen_rd_b.doutb_reg [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "192" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "15" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "11" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11 
       (.ADDRA({1'b0,addrb}),
        .ADDRB({1'b0,addrb}),
        .ADDRC({1'b0,addrb}),
        .ADDRD({1'b0,addrb}),
        .ADDRE({1'b0,addrb}),
        .ADDRF({1'b0,addrb}),
        .ADDRG({1'b0,addrb}),
        .ADDRH({1'b0,addra}),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_15_0_11_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "11" *) (* ADDR_WIDTH_B = "11" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "68" *) (* BYTE_WRITE_WIDTH_B = "68" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "0" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "2" *) (* MEMORY_SIZE = "139264" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "2048" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "block" *) 
(* P_MIN_WIDTH_DATA = "68" *) (* P_MIN_WIDTH_DATA_A = "68" *) (* P_MIN_WIDTH_DATA_B = "68" *) 
(* P_MIN_WIDTH_DATA_ECC = "68" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "68" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "no" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "11" *) 
(* P_WIDTH_ADDR_READ_B = "11" *) (* P_WIDTH_ADDR_WRITE_A = "11" *) (* P_WIDTH_ADDR_WRITE_B = "11" *) 
(* P_WIDTH_COL_WRITE_A = "68" *) (* P_WIDTH_COL_WRITE_B = "68" *) (* READ_DATA_WIDTH_A = "68" *) 
(* READ_DATA_WIDTH_B = "68" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "2" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "0" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "68" *) (* WRITE_DATA_WIDTH_B = "68" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "2" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "68" *) 
(* rstb_loop_iter = "68" *) 
module bd_d10d_rx_0_xpm_memory_base__parameterized0
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [67:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [67:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [67:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [67:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire [67:0]dina;
  wire [67:0]doutb;
  wire enb;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_1 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_136 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_137 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_138 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_139 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_36 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_37 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_38 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_39 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_40 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_41 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_42 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_43 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_44 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_45 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_46 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_47 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_48 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_49 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_50 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_51 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_52 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_53 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_54 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_55 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_56 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_57 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_58 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_59 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_60 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_61 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_62 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_63 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_64 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_65 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_66 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_67 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_1_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_2_n_0 ;
  wire \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 ;
  wire regceb;
  wire rstb;
  wire sleep;
  wire [0:0]wea;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_CASDOUTA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_CASDOUTPA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTADOUT_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_RDADDRECC_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DOUTADOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DOUTPADOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_RDADDRECC_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTADOUT_UNCONNECTED ;
  wire [31:16]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTPADOUTP_UNCONNECTED ;
  wire [3:2]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_RDADDRECC_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASOUTDBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASOUTSBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DBITERR_UNCONNECTED ;
  wire \NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_SBITERR_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTA_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTB_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTPA_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTPB_UNCONNECTED ;
  wire [31:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTADOUT_UNCONNECTED ;
  wire [31:14]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTBDOUT_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTPADOUTP_UNCONNECTED ;
  wire [3:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTPBDOUTP_UNCONNECTED ;
  wire [7:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_RDADDRECC_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[67] = \<const0> ;
  assign douta[66] = \<const0> ;
  assign douta[65] = \<const0> ;
  assign douta[64] = \<const0> ;
  assign douta[63] = \<const0> ;
  assign douta[62] = \<const0> ;
  assign douta[61] = \<const0> ;
  assign douta[60] = \<const0> ;
  assign douta[59] = \<const0> ;
  assign douta[58] = \<const0> ;
  assign douta[57] = \<const0> ;
  assign douta[56] = \<const0> ;
  assign douta[55] = \<const0> ;
  assign douta[54] = \<const0> ;
  assign douta[53] = \<const0> ;
  assign douta[52] = \<const0> ;
  assign douta[51] = \<const0> ;
  assign douta[50] = \<const0> ;
  assign douta[49] = \<const0> ;
  assign douta[48] = \<const0> ;
  assign douta[47] = \<const0> ;
  assign douta[46] = \<const0> ;
  assign douta[45] = \<const0> ;
  assign douta[44] = \<const0> ;
  assign douta[43] = \<const0> ;
  assign douta[42] = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "35" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "1023" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "139264" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "35" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "1023" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("FIRST"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(0),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_0 
       (.ADDRARDADDR({addra[9:0],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb[9:0],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB({\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_36 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_37 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_38 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_39 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_40 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_41 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_42 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_43 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_44 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_45 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_46 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_47 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_48 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_49 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_50 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_51 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_52 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_53 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_54 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_55 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_56 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_57 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_58 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_59 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_60 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_61 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_62 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_63 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_64 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_65 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_66 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_67 }),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB({\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_136 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_137 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_138 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_139 }),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_0 ),
        .CASOUTSBITERR(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_1 ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP(dina[35:32]),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTADOUT_UNCONNECTED [31:0]),
        .DOUTBDOUT(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTBDOUT_UNCONNECTED [31:0]),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_1_n_0 ),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_2_n_0 ),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_0_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 }),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_1 
       (.I0(addra[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_2 
       (.I0(enb),
        .I1(addrb[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3 
       (.I0(wea),
        .I1(addra[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_i_3_n_0 ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "1024" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTA.DATA_LSB  = "0" *) 
  (* \MEM.PORTA.DATA_MSB  = "35" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "1024" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p4_d32" *) 
  (* \MEM.PORTB.DATA_LSB  = "0" *) 
  (* \MEM.PORTB.DATA_MSB  = "35" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "139264" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "1024" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "35" *) 
  (* ram_addr_begin = "1024" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "35" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("LAST"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(36),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(36),
    .WRITE_WIDTH_B(36)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_1 
       (.ADDRARDADDR({addra[9:0],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb[9:0],1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_36 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_37 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_38 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_39 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_40 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_41 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_42 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_43 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_44 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_45 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_46 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_47 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_48 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_49 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_50 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_51 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_52 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_53 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_54 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_55 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_56 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_57 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_58 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_59 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_60 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_61 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_62 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_63 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_64 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_65 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_66 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_67 }),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_136 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_137 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_138 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_139 }),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b0),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_0 ),
        .CASINSBITERR(\gen_wr_a.gen_word_narrow.mem_reg_bram_0_n_1 ),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_1_n_0 ),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(enb),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DBITERR_UNCONNECTED ),
        .DINADIN(dina[31:0]),
        .DINBDIN({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP(dina[35:32]),
        .DINPBDINP({1'b1,1'b1,1'b1,1'b1}),
        .DOUTADOUT(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DOUTADOUT_UNCONNECTED [31:0]),
        .DOUTBDOUT(doutb[31:0]),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(doutb[35:32]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(addra[10]),
        .ENBWREN(\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_2_n_0 ),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(regceb),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(rstb),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_1_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 ,\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 }),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_1 
       (.I0(addrb[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_2 
       (.I0(enb),
        .I1(addrb[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3 
       (.I0(wea),
        .I1(addra[10]),
        .O(\gen_wr_a.gen_word_narrow.mem_reg_bram_1_i_3_n_0 ));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTA.DATA_LSB  = "36" *) 
  (* \MEM.PORTA.DATA_MSB  = "53" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTB.DATA_LSB  = "36" *) 
  (* \MEM.PORTB.DATA_MSB  = "53" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "139264" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "36" *) 
  (* bram_slice_end = "53" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "36" *) 
  (* ram_slice_end = "53" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_2 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[51:36]}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP({1'b0,1'b0,dina[53:52]}),
        .DINPBDINP({1'b0,1'b0,1'b1,1'b1}),
        .DOUTADOUT(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTADOUT_UNCONNECTED [31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTBDOUT_UNCONNECTED [31:16],doutb[51:36]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP({\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_DOUTPBDOUTP_UNCONNECTED [3:2],doutb[53:52]}),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(1'b1),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(regceb),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(rstb),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_2_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* \MEM.PORTA.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTA.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTA.DATA_LSB  = "54" *) 
  (* \MEM.PORTA.DATA_MSB  = "67" *) 
  (* \MEM.PORTB.ADDRESS_BEGIN  = "0" *) 
  (* \MEM.PORTB.ADDRESS_END  = "2047" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* \MEM.PORTB.DATA_LSB  = "54" *) 
  (* \MEM.PORTB.DATA_MSB  = "67" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RDADDR_COLLISION_HWCONFIG = "DELAYED_WRITE" *) 
  (* RTL_RAM_BITS = "139264" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "2047" *) 
  (* bram_slice_begin = "54" *) 
  (* bram_slice_end = "67" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "2047" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "54" *) 
  (* ram_slice_end = "67" *) 
  RAMB36E2 #(
    .CASCADE_ORDER_A("NONE"),
    .CASCADE_ORDER_B("NONE"),
    .CLOCK_DOMAINS("COMMON"),
    .DOA_REG(0),
    .DOB_REG(1),
    .ENADDRENA("FALSE"),
    .ENADDRENB("FALSE"),
    .EN_ECC_PIPE("FALSE"),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_40(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .RDADDRCHANGEA("FALSE"),
    .RDADDRCHANGEB("FALSE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SLEEP_ASYNC("FALSE"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("NO_CHANGE"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \gen_wr_a.gen_word_narrow.mem_reg_bram_3 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0,1'b0}),
        .ADDRENA(1'b0),
        .ADDRENB(1'b0),
        .CASDIMUXA(1'b0),
        .CASDIMUXB(1'b0),
        .CASDINA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINB({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CASDINPA({1'b0,1'b0,1'b0,1'b0}),
        .CASDINPB({1'b0,1'b0,1'b0,1'b0}),
        .CASDOMUXA(1'b0),
        .CASDOMUXB(1'b0),
        .CASDOMUXEN_A(1'b1),
        .CASDOMUXEN_B(1'b1),
        .CASDOUTA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTA_UNCONNECTED [31:0]),
        .CASDOUTB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTB_UNCONNECTED [31:0]),
        .CASDOUTPA(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTPA_UNCONNECTED [3:0]),
        .CASDOUTPB(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASDOUTPB_UNCONNECTED [3:0]),
        .CASINDBITERR(1'b0),
        .CASINSBITERR(1'b0),
        .CASOREGIMUXA(1'b0),
        .CASOREGIMUXB(1'b0),
        .CASOREGIMUXEN_A(1'b1),
        .CASOREGIMUXEN_B(1'b1),
        .CASOUTDBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASOUTDBITERR_UNCONNECTED ),
        .CASOUTSBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_CASOUTSBITERR_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clka),
        .DBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DBITERR_UNCONNECTED ),
        .DINADIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina[67:54]}),
        .DINBDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DINPADINP({1'b0,1'b0,1'b0,1'b0}),
        .DINPBDINP({1'b0,1'b0,1'b0,1'b0}),
        .DOUTADOUT(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTADOUT_UNCONNECTED [31:0]),
        .DOUTBDOUT({\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTBDOUT_UNCONNECTED [31:14],doutb[67:54]}),
        .DOUTPADOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTPADOUTP_UNCONNECTED [3:0]),
        .DOUTPBDOUTP(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_DOUTPBDOUTP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_ECCPARITY_UNCONNECTED [7:0]),
        .ECCPIPECE(1'b1),
        .ENARDEN(1'b1),
        .ENBWREN(enb),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b1),
        .REGCEB(regceb),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(rstb),
        .SBITERR(\NLW_gen_wr_a.gen_word_narrow.mem_reg_bram_3_SBITERR_UNCONNECTED ),
        .SLEEP(1'b0),
        .WEA({wea,wea,wea,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ADDR_WIDTH_A = "5" *) (* ADDR_WIDTH_B = "5" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "26" *) (* BYTE_WRITE_WIDTH_B = "26" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "832" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "32" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "26" *) (* P_MIN_WIDTH_DATA_A = "26" *) (* P_MIN_WIDTH_DATA_B = "26" *) 
(* P_MIN_WIDTH_DATA_ECC = "26" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "26" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "5" *) 
(* P_WIDTH_ADDR_READ_B = "5" *) (* P_WIDTH_ADDR_WRITE_A = "5" *) (* P_WIDTH_ADDR_WRITE_B = "5" *) 
(* P_WIDTH_COL_WRITE_A = "26" *) (* P_WIDTH_COL_WRITE_B = "26" *) (* READ_DATA_WIDTH_A = "26" *) 
(* READ_DATA_WIDTH_B = "26" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "26" *) (* WRITE_DATA_WIDTH_B = "26" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "28" *) 
(* rstb_loop_iter = "28" *) 
module bd_d10d_rx_0_xpm_memory_base__parameterized1
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [4:0]addra;
  input [25:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [25:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [4:0]addrb;
  input [25:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [25:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [4:0]addra;
  wire [4:0]addrb;
  wire clka;
  wire clkb;
  wire [25:0]dina;
  wire [25:0]doutb;
  wire ena;
  wire enb;
  wire [25:0]\gen_rd_b.doutb_reg0 ;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_25_DOG_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_25_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(doutb[0]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(doutb[10]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(doutb[11]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(doutb[12]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(doutb[13]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(doutb[14]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(doutb[15]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(doutb[16]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(doutb[17]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(doutb[18]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(doutb[19]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(doutb[1]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[20] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [20]),
        .Q(doutb[20]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[21] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [21]),
        .Q(doutb[21]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[22] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [22]),
        .Q(doutb[22]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[23] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [23]),
        .Q(doutb[23]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[24] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [24]),
        .Q(doutb[24]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[25] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [25]),
        .Q(doutb[25]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(doutb[2]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(doutb[3]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(doutb[4]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(doutb[5]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(doutb[6]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(doutb[7]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(doutb[8]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "832" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addrb),
        .ADDRE(addrb),
        .ADDRF(addrb),
        .ADDRG(addrb),
        .ADDRH(addra),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "832" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "25" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_14_25 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addrb),
        .ADDRE(addrb),
        .ADDRF(addrb),
        .ADDRG(addrb),
        .ADDRH(addra),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID(dina[21:20]),
        .DIE(dina[23:22]),
        .DIF(dina[25:24]),
        .DIG({1'b0,1'b0}),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\gen_rd_b.doutb_reg0 [21:20]),
        .DOE(\gen_rd_b.doutb_reg0 [23:22]),
        .DOF(\gen_rd_b.doutb_reg0 [25:24]),
        .DOG(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_25_DOG_UNCONNECTED [1:0]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_25_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ADDR_WIDTH_A = "5" *) (* ADDR_WIDTH_B = "5" *) (* AUTO_SLEEP_TIME = "0" *) 
(* BYTE_WRITE_WIDTH_A = "42" *) (* BYTE_WRITE_WIDTH_B = "42" *) (* CASCADE_HEIGHT = "0" *) 
(* CLOCKING_MODE = "1" *) (* ECC_MODE = "0" *) (* MAX_NUM_CHAR = "0" *) 
(* MEMORY_INIT_FILE = "none" *) (* MEMORY_INIT_PARAM = "" *) (* MEMORY_OPTIMIZATION = "true" *) 
(* MEMORY_PRIMITIVE = "1" *) (* MEMORY_SIZE = "1344" *) (* MEMORY_TYPE = "1" *) 
(* MESSAGE_CONTROL = "0" *) (* NUM_CHAR_LOC = "0" *) (* ORIG_REF_NAME = "xpm_memory_base" *) 
(* P_ECC_MODE = "no_ecc" *) (* P_ENABLE_BYTE_WRITE_A = "0" *) (* P_ENABLE_BYTE_WRITE_B = "0" *) 
(* P_MAX_DEPTH_DATA = "32" *) (* P_MEMORY_OPT = "yes" *) (* P_MEMORY_PRIMITIVE = "distributed" *) 
(* P_MIN_WIDTH_DATA = "42" *) (* P_MIN_WIDTH_DATA_A = "42" *) (* P_MIN_WIDTH_DATA_B = "42" *) 
(* P_MIN_WIDTH_DATA_ECC = "42" *) (* P_MIN_WIDTH_DATA_LDW = "4" *) (* P_MIN_WIDTH_DATA_SHFT = "42" *) 
(* P_NUM_COLS_WRITE_A = "1" *) (* P_NUM_COLS_WRITE_B = "1" *) (* P_NUM_ROWS_READ_A = "1" *) 
(* P_NUM_ROWS_READ_B = "1" *) (* P_NUM_ROWS_WRITE_A = "1" *) (* P_NUM_ROWS_WRITE_B = "1" *) 
(* P_SDP_WRITE_MODE = "yes" *) (* P_WIDTH_ADDR_LSB_READ_A = "0" *) (* P_WIDTH_ADDR_LSB_READ_B = "0" *) 
(* P_WIDTH_ADDR_LSB_WRITE_A = "0" *) (* P_WIDTH_ADDR_LSB_WRITE_B = "0" *) (* P_WIDTH_ADDR_READ_A = "5" *) 
(* P_WIDTH_ADDR_READ_B = "5" *) (* P_WIDTH_ADDR_WRITE_A = "5" *) (* P_WIDTH_ADDR_WRITE_B = "5" *) 
(* P_WIDTH_COL_WRITE_A = "42" *) (* P_WIDTH_COL_WRITE_B = "42" *) (* READ_DATA_WIDTH_A = "42" *) 
(* READ_DATA_WIDTH_B = "42" *) (* READ_LATENCY_A = "2" *) (* READ_LATENCY_B = "1" *) 
(* READ_RESET_VALUE_A = "0" *) (* READ_RESET_VALUE_B = "0" *) (* RST_MODE_A = "SYNC" *) 
(* RST_MODE_B = "SYNC" *) (* SIM_ASSERT_CHK = "0" *) (* USE_EMBEDDED_CONSTRAINT = "1" *) 
(* USE_MEM_INIT = "0" *) (* USE_MEM_INIT_MMI = "0" *) (* VERSION = "0" *) 
(* WAKEUP_TIME = "0" *) (* WRITE_DATA_WIDTH_A = "42" *) (* WRITE_DATA_WIDTH_B = "42" *) 
(* WRITE_MODE_A = "2" *) (* WRITE_MODE_B = "1" *) (* WRITE_PROTECT = "1" *) 
(* XPM_MODULE = "TRUE" *) (* keep_hierarchy = "soft" *) (* rsta_loop_iter = "44" *) 
(* rstb_loop_iter = "44" *) 
module bd_d10d_rx_0_xpm_memory_base__parameterized2
   (sleep,
    clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    injectsbiterra,
    injectdbiterra,
    douta,
    sbiterra,
    dbiterra,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    injectsbiterrb,
    injectdbiterrb,
    doutb,
    sbiterrb,
    dbiterrb);
  input sleep;
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [4:0]addra;
  input [41:0]dina;
  input injectsbiterra;
  input injectdbiterra;
  output [41:0]douta;
  output sbiterra;
  output dbiterra;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [4:0]addrb;
  input [41:0]dinb;
  input injectsbiterrb;
  input injectdbiterrb;
  output [41:0]doutb;
  output sbiterrb;
  output dbiterrb;

  wire \<const0> ;
  wire [4:0]addra;
  wire [4:0]addrb;
  wire clka;
  wire clkb;
  wire [41:0]dina;
  wire [41:0]doutb;
  wire ena;
  wire enb;
  wire [41:0]\gen_rd_b.doutb_reg0 ;
  wire rstb;
  wire sleep;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_27_DOH_UNCONNECTED ;
  wire [1:0]\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_28_41_DOH_UNCONNECTED ;

  assign dbiterra = \<const0> ;
  assign dbiterrb = \<const0> ;
  assign douta[41] = \<const0> ;
  assign douta[40] = \<const0> ;
  assign douta[39] = \<const0> ;
  assign douta[38] = \<const0> ;
  assign douta[37] = \<const0> ;
  assign douta[36] = \<const0> ;
  assign douta[35] = \<const0> ;
  assign douta[34] = \<const0> ;
  assign douta[33] = \<const0> ;
  assign douta[32] = \<const0> ;
  assign douta[31] = \<const0> ;
  assign douta[30] = \<const0> ;
  assign douta[29] = \<const0> ;
  assign douta[28] = \<const0> ;
  assign douta[27] = \<const0> ;
  assign douta[26] = \<const0> ;
  assign douta[25] = \<const0> ;
  assign douta[24] = \<const0> ;
  assign douta[23] = \<const0> ;
  assign douta[22] = \<const0> ;
  assign douta[21] = \<const0> ;
  assign douta[20] = \<const0> ;
  assign douta[19] = \<const0> ;
  assign douta[18] = \<const0> ;
  assign douta[17] = \<const0> ;
  assign douta[16] = \<const0> ;
  assign douta[15] = \<const0> ;
  assign douta[14] = \<const0> ;
  assign douta[13] = \<const0> ;
  assign douta[12] = \<const0> ;
  assign douta[11] = \<const0> ;
  assign douta[10] = \<const0> ;
  assign douta[9] = \<const0> ;
  assign douta[8] = \<const0> ;
  assign douta[7] = \<const0> ;
  assign douta[6] = \<const0> ;
  assign douta[5] = \<const0> ;
  assign douta[4] = \<const0> ;
  assign douta[3] = \<const0> ;
  assign douta[2] = \<const0> ;
  assign douta[1] = \<const0> ;
  assign douta[0] = \<const0> ;
  assign sbiterra = \<const0> ;
  assign sbiterrb = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[0] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [0]),
        .Q(doutb[0]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[10] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [10]),
        .Q(doutb[10]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[11] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [11]),
        .Q(doutb[11]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[12] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [12]),
        .Q(doutb[12]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[13] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [13]),
        .Q(doutb[13]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[14] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [14]),
        .Q(doutb[14]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[15] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [15]),
        .Q(doutb[15]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[16] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [16]),
        .Q(doutb[16]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[17] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [17]),
        .Q(doutb[17]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[18] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [18]),
        .Q(doutb[18]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[19] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [19]),
        .Q(doutb[19]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[1] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [1]),
        .Q(doutb[1]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[20] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [20]),
        .Q(doutb[20]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[21] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [21]),
        .Q(doutb[21]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[22] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [22]),
        .Q(doutb[22]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[23] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [23]),
        .Q(doutb[23]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[24] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [24]),
        .Q(doutb[24]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[25] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [25]),
        .Q(doutb[25]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[26] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [26]),
        .Q(doutb[26]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[27] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [27]),
        .Q(doutb[27]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[28] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [28]),
        .Q(doutb[28]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[29] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [29]),
        .Q(doutb[29]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[2] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [2]),
        .Q(doutb[2]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[30] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [30]),
        .Q(doutb[30]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[31] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [31]),
        .Q(doutb[31]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[32] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [32]),
        .Q(doutb[32]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[33] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [33]),
        .Q(doutb[33]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[34] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [34]),
        .Q(doutb[34]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[35] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [35]),
        .Q(doutb[35]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[36] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [36]),
        .Q(doutb[36]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[37] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [37]),
        .Q(doutb[37]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[38] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [38]),
        .Q(doutb[38]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[39] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [39]),
        .Q(doutb[39]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[3] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [3]),
        .Q(doutb[3]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[40] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [40]),
        .Q(doutb[40]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[41] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [41]),
        .Q(doutb[41]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[4] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [4]),
        .Q(doutb[4]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[5] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [5]),
        .Q(doutb[5]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[6] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [6]),
        .Q(doutb[6]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[7] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [7]),
        .Q(doutb[7]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[8] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [8]),
        .Q(doutb[8]),
        .R(rstb));
  (* dram_emb_xdc = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_rd_b.doutb_reg_reg[9] 
       (.C(clkb),
        .CE(enb),
        .D(\gen_rd_b.doutb_reg0 [9]),
        .Q(doutb[9]),
        .R(rstb));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1344" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "0" *) 
  (* ram_slice_end = "13" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addrb),
        .ADDRE(addrb),
        .ADDRF(addrb),
        .ADDRG(addrb),
        .ADDRH(addra),
        .DIA(dina[1:0]),
        .DIB(dina[3:2]),
        .DIC(dina[5:4]),
        .DID(dina[7:6]),
        .DIE(dina[9:8]),
        .DIF(dina[11:10]),
        .DIG(dina[13:12]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [1:0]),
        .DOB(\gen_rd_b.doutb_reg0 [3:2]),
        .DOC(\gen_rd_b.doutb_reg0 [5:4]),
        .DOD(\gen_rd_b.doutb_reg0 [7:6]),
        .DOE(\gen_rd_b.doutb_reg0 [9:8]),
        .DOF(\gen_rd_b.doutb_reg0 [11:10]),
        .DOG(\gen_rd_b.doutb_reg0 [13:12]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_0_13_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1344" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "14" *) 
  (* ram_slice_end = "27" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_14_27 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addrb),
        .ADDRE(addrb),
        .ADDRF(addrb),
        .ADDRG(addrb),
        .ADDRH(addra),
        .DIA(dina[15:14]),
        .DIB(dina[17:16]),
        .DIC(dina[19:18]),
        .DID(dina[21:20]),
        .DIE(dina[23:22]),
        .DIF(dina[25:24]),
        .DIG(dina[27:26]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [15:14]),
        .DOB(\gen_rd_b.doutb_reg0 [17:16]),
        .DOC(\gen_rd_b.doutb_reg0 [19:18]),
        .DOD(\gen_rd_b.doutb_reg0 [21:20]),
        .DOE(\gen_rd_b.doutb_reg0 [23:22]),
        .DOF(\gen_rd_b.doutb_reg0 [25:24]),
        .DOG(\gen_rd_b.doutb_reg0 [27:26]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_14_27_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  (* RTL_RAM_BITS = "1344" *) 
  (* RTL_RAM_NAME = "gen_wr_a.gen_word_narrow.mem" *) 
  (* RTL_RAM_TYPE = "RAM_SDP" *) 
  (* dram_emb_xdc = "yes" *) 
  (* ram_addr_begin = "0" *) 
  (* ram_addr_end = "31" *) 
  (* ram_offset = "0" *) 
  (* ram_slice_begin = "28" *) 
  (* ram_slice_end = "41" *) 
  RAM32M16 #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .INIT_E(64'h0000000000000000),
    .INIT_F(64'h0000000000000000),
    .INIT_G(64'h0000000000000000),
    .INIT_H(64'h0000000000000000)) 
    \gen_wr_a.gen_word_narrow.mem_reg_0_31_28_41 
       (.ADDRA(addrb),
        .ADDRB(addrb),
        .ADDRC(addrb),
        .ADDRD(addrb),
        .ADDRE(addrb),
        .ADDRF(addrb),
        .ADDRG(addrb),
        .ADDRH(addra),
        .DIA(dina[29:28]),
        .DIB(dina[31:30]),
        .DIC(dina[33:32]),
        .DID(dina[35:34]),
        .DIE(dina[37:36]),
        .DIF(dina[39:38]),
        .DIG(dina[41:40]),
        .DIH({1'b0,1'b0}),
        .DOA(\gen_rd_b.doutb_reg0 [29:28]),
        .DOB(\gen_rd_b.doutb_reg0 [31:30]),
        .DOC(\gen_rd_b.doutb_reg0 [33:32]),
        .DOD(\gen_rd_b.doutb_reg0 [35:34]),
        .DOE(\gen_rd_b.doutb_reg0 [37:36]),
        .DOF(\gen_rd_b.doutb_reg0 [39:38]),
        .DOG(\gen_rd_b.doutb_reg0 [41:40]),
        .DOH(\NLW_gen_wr_a.gen_word_narrow.mem_reg_0_31_28_41_DOH_UNCONNECTED [1:0]),
        .WCLK(clka),
        .WE(ena));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_control" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_control
   (pkt_valid,
    \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_0 ,
    p_1_in40_in,
    p_1_in37_in,
    p_1_in34_in,
    p_1_in31_in,
    p_1_in28_in,
    p_1_in25_in,
    p_1_in22_in,
    p_1_in19_in,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_1_in7_in,
    p_1_in4_in,
    p_1_in1_in,
    p_1_in,
    src_in,
    crc_rst,
    lp_wc0,
    \ERR_FRAME_DATA[0].errframedata_reg[0]_0 ,
    \ERR_FRAME_DATA[1].errframedata_reg[1]_0 ,
    \ERR_FRAME_DATA[2].errframedata_reg[2]_0 ,
    \ERR_FRAME_DATA[3].errframedata_reg[3]_0 ,
    \ERR_FRAME_DATA[4].errframedata_reg[4]_0 ,
    \ERR_FRAME_DATA[5].errframedata_reg[5]_0 ,
    \ERR_FRAME_DATA[6].errframedata_reg[6]_0 ,
    \ERR_FRAME_DATA[7].errframedata_reg[7]_0 ,
    \ERR_FRAME_DATA[8].errframedata_reg[8]_0 ,
    \ERR_FRAME_DATA[9].errframedata_reg[9]_0 ,
    \ERR_FRAME_DATA[10].errframedata_reg[10]_0 ,
    \ERR_FRAME_DATA[11].errframedata_reg[11]_0 ,
    \ERR_FRAME_DATA[12].errframedata_reg[12]_0 ,
    \ERR_FRAME_DATA[13].errframedata_reg[13]_0 ,
    \ERR_FRAME_DATA[14].errframedata_reg[14]_0 ,
    p_0_in,
    Q,
    rd_en,
    \FSM_sequential_cur_state_reg[2]_0 ,
    \FSM_sequential_cur_state_reg[1]_0 ,
    pkt_rdvld_reg_0,
    \FSM_sequential_cur_state_reg[0]_0 ,
    \errframedata_d1_reg[15]_0 ,
    crc_start,
    pkt_rdvld_reg_1,
    pkt_rdvld_reg_2,
    crc_trig_d10,
    mem_data1,
    E,
    \FSM_sequential_cur_state_reg[2]_1 ,
    m_axis_aclk,
    SR,
    empty,
    p_80_out,
    p_78_out,
    p_76_out,
    p_74_out,
    p_72_out,
    p_70_out,
    p_68_out,
    p_66_out,
    p_64_out,
    p_62_out,
    p_60_out,
    p_58_out,
    p_56_out,
    p_54_out,
    p_52_out,
    p_50_out,
    \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_1 ,
    \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1]_0 ,
    \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2]_0 ,
    \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3]_0 ,
    \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4]_0 ,
    \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5]_0 ,
    \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6]_0 ,
    \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7]_0 ,
    \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8]_0 ,
    \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9]_0 ,
    \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10]_0 ,
    \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11]_0 ,
    \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12]_0 ,
    \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13]_0 ,
    \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14]_0 ,
    \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15]_0 ,
    lp_wc0_i_reg_reg_0,
    \FSM_sequential_cur_state_reg[2]_2 ,
    \FSM_sequential_cur_state_reg[1]_1 ,
    data_done,
    crc_start_d1_reg,
    wc_gt_pload,
    \cur_lp_vc_reg[3]_0 ,
    crc_status,
    crc_done,
    \FSM_sequential_cur_state_reg[1]_2 ,
    phecc_done,
    dest_out,
    m_axis_aresetn,
    dout,
    \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ,
    \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_1 ,
    \ERR_FRAME_SYNC_ALL[1].errframesync_reg[1]_0 ,
    \ERR_FRAME_SYNC_ALL[2].errframesync_reg[2]_0 ,
    \ERR_FRAME_SYNC_ALL[3].errframesync_reg[3]_0 ,
    \ERR_FRAME_SYNC_ALL[4].errframesync_reg[4]_0 ,
    \ERR_FRAME_SYNC_ALL[5].errframesync_reg[5]_0 ,
    \ERR_FRAME_SYNC_ALL[6].errframesync_reg[6]_0 ,
    \ERR_FRAME_SYNC_ALL[7].errframesync_reg[7]_0 ,
    \ERR_FRAME_SYNC_ALL[12].errframesync_reg[12]_0 ,
    \ERR_FRAME_SYNC_ALL[13].errframesync_reg[13]_0 ,
    \ERR_FRAME_SYNC_ALL[14].errframesync_reg[14]_0 ,
    \ERR_FRAME_SYNC_ALL[15].errframesync_reg[15]_0 ,
    \ERR_FRAME_SYNC_ALL[11].errframesync_reg[11]_0 ,
    \ERR_FRAME_SYNC_ALL[10].errframesync_reg[10]_0 ,
    \ERR_FRAME_SYNC_ALL[9].errframesync_reg[9]_0 ,
    \ERR_FRAME_SYNC_ALL[8].errframesync_reg[8]_0 ,
    \LINE_BUF_WR_64.mem_data_l32_reg[31] ,
    \LINE_BUF_WR_64.mem_wdata_i_reg[0] ,
    diwc_corrected_zero,
    data_wip_reg,
    D,
    \cur_lp_vc_reg[3]_1 ,
    diwc_valid,
    \reg_ecc_status_i_reg[2]_0 );
  output pkt_valid;
  output \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_0 ;
  output p_1_in40_in;
  output p_1_in37_in;
  output p_1_in34_in;
  output p_1_in31_in;
  output p_1_in28_in;
  output p_1_in25_in;
  output p_1_in22_in;
  output p_1_in19_in;
  output p_1_in16_in;
  output p_1_in13_in;
  output p_1_in10_in;
  output p_1_in7_in;
  output p_1_in4_in;
  output p_1_in1_in;
  output p_1_in;
  output [33:0]src_in;
  output crc_rst;
  output lp_wc0;
  output \ERR_FRAME_DATA[0].errframedata_reg[0]_0 ;
  output \ERR_FRAME_DATA[1].errframedata_reg[1]_0 ;
  output \ERR_FRAME_DATA[2].errframedata_reg[2]_0 ;
  output \ERR_FRAME_DATA[3].errframedata_reg[3]_0 ;
  output \ERR_FRAME_DATA[4].errframedata_reg[4]_0 ;
  output \ERR_FRAME_DATA[5].errframedata_reg[5]_0 ;
  output \ERR_FRAME_DATA[6].errframedata_reg[6]_0 ;
  output \ERR_FRAME_DATA[7].errframedata_reg[7]_0 ;
  output \ERR_FRAME_DATA[8].errframedata_reg[8]_0 ;
  output \ERR_FRAME_DATA[9].errframedata_reg[9]_0 ;
  output \ERR_FRAME_DATA[10].errframedata_reg[10]_0 ;
  output \ERR_FRAME_DATA[11].errframedata_reg[11]_0 ;
  output \ERR_FRAME_DATA[12].errframedata_reg[12]_0 ;
  output \ERR_FRAME_DATA[13].errframedata_reg[13]_0 ;
  output \ERR_FRAME_DATA[14].errframedata_reg[14]_0 ;
  output p_0_in;
  output [1:0]Q;
  output rd_en;
  output \FSM_sequential_cur_state_reg[2]_0 ;
  output \FSM_sequential_cur_state_reg[1]_0 ;
  output pkt_rdvld_reg_0;
  output \FSM_sequential_cur_state_reg[0]_0 ;
  output [15:0]\errframedata_d1_reg[15]_0 ;
  output crc_start;
  output pkt_rdvld_reg_1;
  output pkt_rdvld_reg_2;
  output crc_trig_d10;
  output mem_data1;
  output [0:0]E;
  output \FSM_sequential_cur_state_reg[2]_1 ;
  input m_axis_aclk;
  input [0:0]SR;
  input empty;
  input p_80_out;
  input p_78_out;
  input p_76_out;
  input p_74_out;
  input p_72_out;
  input p_70_out;
  input p_68_out;
  input p_66_out;
  input p_64_out;
  input p_62_out;
  input p_60_out;
  input p_58_out;
  input p_56_out;
  input p_54_out;
  input p_52_out;
  input p_50_out;
  input \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_1 ;
  input \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14]_0 ;
  input \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15]_0 ;
  input lp_wc0_i_reg_reg_0;
  input \FSM_sequential_cur_state_reg[2]_2 ;
  input \FSM_sequential_cur_state_reg[1]_1 ;
  input data_done;
  input crc_start_d1_reg;
  input wc_gt_pload;
  input [5:0]\cur_lp_vc_reg[3]_0 ;
  input crc_status;
  input crc_done;
  input [0:0]\FSM_sequential_cur_state_reg[1]_2 ;
  input phecc_done;
  input dest_out;
  input m_axis_aresetn;
  input [2:0]dout;
  input [0:0]\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ;
  input \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_1 ;
  input \ERR_FRAME_SYNC_ALL[1].errframesync_reg[1]_0 ;
  input \ERR_FRAME_SYNC_ALL[2].errframesync_reg[2]_0 ;
  input \ERR_FRAME_SYNC_ALL[3].errframesync_reg[3]_0 ;
  input \ERR_FRAME_SYNC_ALL[4].errframesync_reg[4]_0 ;
  input \ERR_FRAME_SYNC_ALL[5].errframesync_reg[5]_0 ;
  input \ERR_FRAME_SYNC_ALL[6].errframesync_reg[6]_0 ;
  input \ERR_FRAME_SYNC_ALL[7].errframesync_reg[7]_0 ;
  input \ERR_FRAME_SYNC_ALL[12].errframesync_reg[12]_0 ;
  input \ERR_FRAME_SYNC_ALL[13].errframesync_reg[13]_0 ;
  input \ERR_FRAME_SYNC_ALL[14].errframesync_reg[14]_0 ;
  input \ERR_FRAME_SYNC_ALL[15].errframesync_reg[15]_0 ;
  input \ERR_FRAME_SYNC_ALL[11].errframesync_reg[11]_0 ;
  input \ERR_FRAME_SYNC_ALL[10].errframesync_reg[10]_0 ;
  input \ERR_FRAME_SYNC_ALL[9].errframesync_reg[9]_0 ;
  input \ERR_FRAME_SYNC_ALL[8].errframesync_reg[8]_0 ;
  input \LINE_BUF_WR_64.mem_data_l32_reg[31] ;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[0] ;
  input diwc_corrected_zero;
  input data_wip_reg;
  input [0:0]D;
  input [0:0]\cur_lp_vc_reg[3]_1 ;
  input diwc_valid;
  input [1:0]\reg_ecc_status_i_reg[2]_0 ;

  wire [0:0]D;
  wire [0:0]E;
  wire \ERR_FRAME_DATA[0].errframedata[0]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[0].errframedata[0]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[0].errframedata_reg[0]_0 ;
  wire \ERR_FRAME_DATA[10].errframedata[10]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[10].errframedata[10]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[10].errframedata_reg[10]_0 ;
  wire \ERR_FRAME_DATA[11].errframedata[11]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[11].errframedata_reg[11]_0 ;
  wire \ERR_FRAME_DATA[12].errframedata[12]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[12].errframedata[12]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[12].errframedata_reg[12]_0 ;
  wire \ERR_FRAME_DATA[13].errframedata[13]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[13].errframedata_reg[13]_0 ;
  wire \ERR_FRAME_DATA[14].errframedata[14]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[14].errframedata[14]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[14].errframedata_reg[14]_0 ;
  wire \ERR_FRAME_DATA[15].errframedata[15]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[1].errframedata[1]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[1].errframedata_reg[1]_0 ;
  wire \ERR_FRAME_DATA[2].errframedata[2]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[2].errframedata[2]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[2].errframedata_reg[2]_0 ;
  wire \ERR_FRAME_DATA[3].errframedata[3]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[3].errframedata_reg[3]_0 ;
  wire \ERR_FRAME_DATA[4].errframedata[4]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[4].errframedata[4]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[4].errframedata_reg[4]_0 ;
  wire \ERR_FRAME_DATA[5].errframedata[5]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[5].errframedata_reg[5]_0 ;
  wire \ERR_FRAME_DATA[6].errframedata[6]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[6].errframedata[6]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[6].errframedata_reg[6]_0 ;
  wire \ERR_FRAME_DATA[7].errframedata[7]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[7].errframedata_reg[7]_0 ;
  wire \ERR_FRAME_DATA[8].errframedata[8]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[8].errframedata[8]_i_2_n_0 ;
  wire \ERR_FRAME_DATA[8].errframedata_reg[8]_0 ;
  wire \ERR_FRAME_DATA[9].errframedata[9]_i_1_n_0 ;
  wire \ERR_FRAME_DATA[9].errframedata_reg[9]_0 ;
  wire [0:0]\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ;
  wire \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_1 ;
  wire \ERR_FRAME_SYNC_ALL[10].errframesync_reg[10]_0 ;
  wire \ERR_FRAME_SYNC_ALL[11].errframesync_reg[11]_0 ;
  wire \ERR_FRAME_SYNC_ALL[12].errframesync_reg[12]_0 ;
  wire \ERR_FRAME_SYNC_ALL[13].errframesync_reg[13]_0 ;
  wire \ERR_FRAME_SYNC_ALL[14].errframesync_reg[14]_0 ;
  wire \ERR_FRAME_SYNC_ALL[15].errframesync_reg[15]_0 ;
  wire \ERR_FRAME_SYNC_ALL[1].errframesync_reg[1]_0 ;
  wire \ERR_FRAME_SYNC_ALL[2].errframesync_reg[2]_0 ;
  wire \ERR_FRAME_SYNC_ALL[3].errframesync_reg[3]_0 ;
  wire \ERR_FRAME_SYNC_ALL[4].errframesync_reg[4]_0 ;
  wire \ERR_FRAME_SYNC_ALL[5].errframesync_reg[5]_0 ;
  wire \ERR_FRAME_SYNC_ALL[6].errframesync_reg[6]_0 ;
  wire \ERR_FRAME_SYNC_ALL[7].errframesync_reg[7]_0 ;
  wire \ERR_FRAME_SYNC_ALL[8].errframesync_reg[8]_0 ;
  wire \ERR_FRAME_SYNC_ALL[9].errframesync_reg[9]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_1 ;
  wire \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8]_0 ;
  wire \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9]_0 ;
  wire \FE_DETECT[0].fe_detect_reg_n_0_[0] ;
  wire \FE_DETECT[10].fe_detect_reg_n_0_[10] ;
  wire \FE_DETECT[11].fe_detect_reg_n_0_[11] ;
  wire \FE_DETECT[12].fe_detect_reg_n_0_[12] ;
  wire \FE_DETECT[13].fe_detect_reg_n_0_[13] ;
  wire \FE_DETECT[14].fe_detect_reg_n_0_[14] ;
  wire \FE_DETECT[15].fe_detect_reg_n_0_[15] ;
  wire \FE_DETECT[1].fe_detect_reg_n_0_[1] ;
  wire \FE_DETECT[2].fe_detect_reg_n_0_[2] ;
  wire \FE_DETECT[3].fe_detect_reg_n_0_[3] ;
  wire \FE_DETECT[4].fe_detect_reg_n_0_[4] ;
  wire \FE_DETECT[5].fe_detect_reg_n_0_[5] ;
  wire \FE_DETECT[6].fe_detect_reg_n_0_[6] ;
  wire \FE_DETECT[7].fe_detect_reg_n_0_[7] ;
  wire \FE_DETECT[8].fe_detect_reg_n_0_[8] ;
  wire \FE_DETECT[9].fe_detect_reg_n_0_[9] ;
  wire \FSM_sequential_cur_state[1]_i_1_n_0 ;
  wire \FSM_sequential_cur_state[1]_i_3_n_0 ;
  wire \FSM_sequential_cur_state[2]_i_2_n_0 ;
  wire \FSM_sequential_cur_state_reg[0]_0 ;
  wire \FSM_sequential_cur_state_reg[1]_0 ;
  wire \FSM_sequential_cur_state_reg[1]_1 ;
  wire [0:0]\FSM_sequential_cur_state_reg[1]_2 ;
  wire \FSM_sequential_cur_state_reg[2]_0 ;
  wire \FSM_sequential_cur_state_reg[2]_1 ;
  wire \FSM_sequential_cur_state_reg[2]_2 ;
  wire \LINE_BUF_WR_64.mem_data_l32_reg[31] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[0] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire crc_done;
  wire crc_rst;
  wire crc_rst0;
  wire crc_start;
  wire crc_start_d1_i_2_n_0;
  wire crc_start_d1_reg;
  wire crc_status;
  wire crc_trig_d10;
  wire crc_trig_d1_i_2_n_0;
  wire crc_trig_d1_i_3_n_0;
  wire [3:0]cur_lp_vc;
  wire [5:0]\cur_lp_vc_reg[3]_0 ;
  wire [0:0]\cur_lp_vc_reg[3]_1 ;
  wire [1:1]cur_state;
  wire [2:2]cur_state_reg;
  wire data_done;
  wire data_wip_reg;
  wire dest_out;
  wire diwc_corrected_zero;
  wire diwc_valid;
  wire [2:0]dout;
  wire empty;
  wire [15:0]\errframedata_d1_reg[15]_0 ;
  wire [3:0]latest_vc;
  wire lp_wc0;
  wire lp_wc0_i_reg_reg_0;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire mem_data1;
  wire p_0_in;
  wire p_0_out;
  wire p_12_out;
  wire p_15_out;
  wire p_18_out;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in19_in;
  wire p_1_in1_in;
  wire p_1_in22_in;
  wire p_1_in25_in;
  wire p_1_in28_in;
  wire p_1_in31_in;
  wire p_1_in34_in;
  wire p_1_in37_in;
  wire p_1_in40_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_21_out;
  wire p_24_out;
  wire p_27_out;
  wire p_30_out;
  wire p_33_out;
  wire p_36_out;
  wire p_39_out;
  wire p_3_out;
  wire p_42_out;
  wire p_43_out;
  wire p_50_out;
  wire p_52_out;
  wire p_54_out;
  wire p_56_out;
  wire p_58_out;
  wire p_60_out;
  wire p_62_out;
  wire p_64_out;
  wire p_66_out;
  wire p_68_out;
  wire p_6_out;
  wire p_70_out;
  wire p_72_out;
  wire p_74_out;
  wire p_76_out;
  wire p_78_out;
  wire p_80_out;
  wire p_9_out;
  wire phecc_done;
  wire pkt_fifo_empty_reg;
  wire pkt_fifo_i_2_n_0;
  wire pkt_fifo_i_3_n_0;
  wire pkt_fifo_ren_reg;
  wire pkt_rdvld0;
  wire pkt_rdvld_reg_0;
  wire pkt_rdvld_reg_1;
  wire pkt_rdvld_reg_2;
  wire pkt_valid;
  wire [2:0]prv_state;
  wire \prv_state[0]_i_1_n_0 ;
  wire \prv_state[1]_i_1_n_0 ;
  wire rd_en;
  wire [2:1]reg_ecc_status_i;
  wire [1:0]\reg_ecc_status_i_reg[2]_0 ;
  wire [33:0]src_in;
  wire wc_gt_pload;

  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[0].errframedata[0]_i_1 
       (.I0(\ERR_FRAME_DATA[0].errframedata_reg[0]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[0].errframedata[0]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[0].fe_detect_reg_n_0_[0] ),
        .O(\ERR_FRAME_DATA[0].errframedata[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \ERR_FRAME_DATA[0].errframedata[0]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[3]),
        .I2(crc_done),
        .I3(cur_lp_vc[2]),
        .O(\ERR_FRAME_DATA[0].errframedata[0]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[0].errframedata_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[0].errframedata[0]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[0].errframedata_reg[0]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[10].errframedata[10]_i_1 
       (.I0(\ERR_FRAME_DATA[10].errframedata_reg[10]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[10].errframedata[10]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[10].fe_detect_reg_n_0_[10] ),
        .O(\ERR_FRAME_DATA[10].errframedata[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \ERR_FRAME_DATA[10].errframedata[10]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(crc_done),
        .I2(cur_lp_vc[3]),
        .I3(cur_lp_vc[2]),
        .O(\ERR_FRAME_DATA[10].errframedata[10]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[10].errframedata_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[10].errframedata[10]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[10].errframedata_reg[10]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[11].errframedata[11]_i_1 
       (.I0(\ERR_FRAME_DATA[11].errframedata_reg[11]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[10].errframedata[10]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[11].fe_detect_reg_n_0_[11] ),
        .O(\ERR_FRAME_DATA[11].errframedata[11]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[11].errframedata_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[11].errframedata[11]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[11].errframedata_reg[11]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[12].errframedata[12]_i_1 
       (.I0(\ERR_FRAME_DATA[12].errframedata_reg[12]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[12].errframedata[12]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[12].fe_detect_reg_n_0_[12] ),
        .O(\ERR_FRAME_DATA[12].errframedata[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \ERR_FRAME_DATA[12].errframedata[12]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[2]),
        .I2(crc_done),
        .I3(cur_lp_vc[3]),
        .O(\ERR_FRAME_DATA[12].errframedata[12]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[12].errframedata_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[12].errframedata[12]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[12].errframedata_reg[12]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[13].errframedata[13]_i_1 
       (.I0(\ERR_FRAME_DATA[13].errframedata_reg[13]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[12].errframedata[12]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[13].fe_detect_reg_n_0_[13] ),
        .O(\ERR_FRAME_DATA[13].errframedata[13]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[13].errframedata_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[13].errframedata[13]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[13].errframedata_reg[13]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[14].errframedata[14]_i_1 
       (.I0(\ERR_FRAME_DATA[14].errframedata_reg[14]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[14].errframedata[14]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[14].fe_detect_reg_n_0_[14] ),
        .O(\ERR_FRAME_DATA[14].errframedata[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \ERR_FRAME_DATA[14].errframedata[14]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[2]),
        .I2(crc_done),
        .I3(cur_lp_vc[3]),
        .O(\ERR_FRAME_DATA[14].errframedata[14]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[14].errframedata_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[14].errframedata[14]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[14].errframedata_reg[14]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[15].errframedata[15]_i_1 
       (.I0(p_0_in),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[14].errframedata[14]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[15].fe_detect_reg_n_0_[15] ),
        .O(\ERR_FRAME_DATA[15].errframedata[15]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[15].errframedata_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[15].errframedata[15]_i_1_n_0 ),
        .Q(p_0_in),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[1].errframedata[1]_i_1 
       (.I0(\ERR_FRAME_DATA[1].errframedata_reg[1]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[0].errframedata[0]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[1].fe_detect_reg_n_0_[1] ),
        .O(\ERR_FRAME_DATA[1].errframedata[1]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[1].errframedata_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[1].errframedata[1]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[1].errframedata_reg[1]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[2].errframedata[2]_i_1 
       (.I0(\ERR_FRAME_DATA[2].errframedata_reg[2]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[2].errframedata[2]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[2].fe_detect_reg_n_0_[2] ),
        .O(\ERR_FRAME_DATA[2].errframedata[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \ERR_FRAME_DATA[2].errframedata[2]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[3]),
        .I2(crc_done),
        .I3(cur_lp_vc[2]),
        .O(\ERR_FRAME_DATA[2].errframedata[2]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[2].errframedata_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[2].errframedata[2]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[2].errframedata_reg[2]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[3].errframedata[3]_i_1 
       (.I0(\ERR_FRAME_DATA[3].errframedata_reg[3]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[2].errframedata[2]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[3].fe_detect_reg_n_0_[3] ),
        .O(\ERR_FRAME_DATA[3].errframedata[3]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[3].errframedata_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[3].errframedata[3]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[3].errframedata_reg[3]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[4].errframedata[4]_i_1 
       (.I0(\ERR_FRAME_DATA[4].errframedata_reg[4]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[4].errframedata[4]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[4].fe_detect_reg_n_0_[4] ),
        .O(\ERR_FRAME_DATA[4].errframedata[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \ERR_FRAME_DATA[4].errframedata[4]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[3]),
        .I3(crc_done),
        .O(\ERR_FRAME_DATA[4].errframedata[4]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[4].errframedata_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[4].errframedata[4]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[4].errframedata_reg[4]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[5].errframedata[5]_i_1 
       (.I0(\ERR_FRAME_DATA[5].errframedata_reg[5]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[4].errframedata[4]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[5].fe_detect_reg_n_0_[5] ),
        .O(\ERR_FRAME_DATA[5].errframedata[5]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[5].errframedata_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[5].errframedata[5]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[5].errframedata_reg[5]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[6].errframedata[6]_i_1 
       (.I0(\ERR_FRAME_DATA[6].errframedata_reg[6]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[6].errframedata[6]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[6].fe_detect_reg_n_0_[6] ),
        .O(\ERR_FRAME_DATA[6].errframedata[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \ERR_FRAME_DATA[6].errframedata[6]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[3]),
        .I3(crc_done),
        .O(\ERR_FRAME_DATA[6].errframedata[6]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[6].errframedata_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[6].errframedata[6]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[6].errframedata_reg[6]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[7].errframedata[7]_i_1 
       (.I0(\ERR_FRAME_DATA[7].errframedata_reg[7]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[6].errframedata[6]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[7].fe_detect_reg_n_0_[7] ),
        .O(\ERR_FRAME_DATA[7].errframedata[7]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[7].errframedata_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[7].errframedata[7]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[7].errframedata_reg[7]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000BAAA)) 
    \ERR_FRAME_DATA[8].errframedata[8]_i_1 
       (.I0(\ERR_FRAME_DATA[8].errframedata_reg[8]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[8].errframedata[8]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[8].fe_detect_reg_n_0_[8] ),
        .O(\ERR_FRAME_DATA[8].errframedata[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \ERR_FRAME_DATA[8].errframedata[8]_i_2 
       (.I0(cur_lp_vc[1]),
        .I1(crc_done),
        .I2(cur_lp_vc[3]),
        .I3(cur_lp_vc[2]),
        .O(\ERR_FRAME_DATA[8].errframedata[8]_i_2_n_0 ));
  FDRE \ERR_FRAME_DATA[8].errframedata_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[8].errframedata[8]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[8].errframedata_reg[8]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT5 #(
    .INIT(32'h0000EAAA)) 
    \ERR_FRAME_DATA[9].errframedata[9]_i_1 
       (.I0(\ERR_FRAME_DATA[9].errframedata_reg[9]_0 ),
        .I1(cur_lp_vc[0]),
        .I2(\ERR_FRAME_DATA[8].errframedata[8]_i_2_n_0 ),
        .I3(crc_status),
        .I4(\FE_DETECT[9].fe_detect_reg_n_0_[9] ),
        .O(\ERR_FRAME_DATA[9].errframedata[9]_i_1_n_0 ));
  FDRE \ERR_FRAME_DATA[9].errframedata_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[9].errframedata[9]_i_1_n_0 ),
        .Q(\ERR_FRAME_DATA[9].errframedata_reg[9]_0 ),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000004)) 
    \ERR_FRAME_SYNC_ALL[0].errframesync[0]_i_1 
       (.I0(latest_vc[2]),
        .I1(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I2(latest_vc[3]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_1 ),
        .O(p_43_out));
  FDRE \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_43_out),
        .Q(src_in[1]),
        .R(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAA)) 
    \ERR_FRAME_SYNC_ALL[10].errframesync[10]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[10].errframesync_reg[10]_0 ),
        .I1(latest_vc[2]),
        .I2(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I3(latest_vc[3]),
        .I4(latest_vc[1]),
        .I5(latest_vc[0]),
        .O(p_15_out));
  FDRE \ERR_FRAME_SYNC_ALL[10].errframesync_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_15_out),
        .Q(src_in[21]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF40000000)) 
    \ERR_FRAME_SYNC_ALL[11].errframesync[11]_i_1 
       (.I0(latest_vc[2]),
        .I1(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I2(latest_vc[3]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[11].errframesync_reg[11]_0 ),
        .O(p_12_out));
  FDRE \ERR_FRAME_SYNC_ALL[11].errframesync_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_12_out),
        .Q(src_in[23]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000080)) 
    \ERR_FRAME_SYNC_ALL[12].errframesync[12]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[12].errframesync_reg[12]_0 ),
        .O(p_9_out));
  FDRE \ERR_FRAME_SYNC_ALL[12].errframesync_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_9_out),
        .Q(src_in[25]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00008000)) 
    \ERR_FRAME_SYNC_ALL[13].errframesync[13]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[13].errframesync_reg[13]_0 ),
        .O(p_6_out));
  FDRE \ERR_FRAME_SYNC_ALL[13].errframesync_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_6_out),
        .Q(src_in[27]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00008000)) 
    \ERR_FRAME_SYNC_ALL[14].errframesync[14]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[1]),
        .I4(latest_vc[0]),
        .I5(\ERR_FRAME_SYNC_ALL[14].errframesync_reg[14]_0 ),
        .O(p_3_out));
  FDRE \ERR_FRAME_SYNC_ALL[14].errframesync_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_3_out),
        .Q(src_in[29]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \ERR_FRAME_SYNC_ALL[15].errframesync[15]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[15].errframesync_reg[15]_0 ),
        .O(p_0_out));
  FDRE \ERR_FRAME_SYNC_ALL[15].errframesync_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_out),
        .Q(src_in[31]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000200)) 
    \ERR_FRAME_SYNC_ALL[1].errframesync[1]_i_1 
       (.I0(latest_vc[0]),
        .I1(latest_vc[1]),
        .I2(latest_vc[2]),
        .I3(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I4(latest_vc[3]),
        .I5(\ERR_FRAME_SYNC_ALL[1].errframesync_reg[1]_0 ),
        .O(p_42_out));
  FDRE \ERR_FRAME_SYNC_ALL[1].errframesync_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_42_out),
        .Q(src_in[3]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000200)) 
    \ERR_FRAME_SYNC_ALL[2].errframesync[2]_i_1 
       (.I0(latest_vc[1]),
        .I1(latest_vc[0]),
        .I2(latest_vc[2]),
        .I3(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I4(latest_vc[3]),
        .I5(\ERR_FRAME_SYNC_ALL[2].errframesync_reg[2]_0 ),
        .O(p_39_out));
  FDRE \ERR_FRAME_SYNC_ALL[2].errframesync_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_39_out),
        .Q(src_in[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000800)) 
    \ERR_FRAME_SYNC_ALL[3].errframesync[3]_i_1 
       (.I0(latest_vc[0]),
        .I1(latest_vc[1]),
        .I2(latest_vc[2]),
        .I3(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I4(latest_vc[3]),
        .I5(\ERR_FRAME_SYNC_ALL[3].errframesync_reg[3]_0 ),
        .O(p_36_out));
  FDRE \ERR_FRAME_SYNC_ALL[3].errframesync_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_36_out),
        .Q(src_in[7]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000020)) 
    \ERR_FRAME_SYNC_ALL[4].errframesync[4]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[4].errframesync_reg[4]_0 ),
        .O(p_33_out));
  FDRE \ERR_FRAME_SYNC_ALL[4].errframesync_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_33_out),
        .Q(src_in[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    \ERR_FRAME_SYNC_ALL[5].errframesync[5]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[5].errframesync_reg[5]_0 ),
        .O(p_30_out));
  FDRE \ERR_FRAME_SYNC_ALL[5].errframesync_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_30_out),
        .Q(src_in[11]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    \ERR_FRAME_SYNC_ALL[6].errframesync[6]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[1]),
        .I4(latest_vc[0]),
        .I5(\ERR_FRAME_SYNC_ALL[6].errframesync_reg[6]_0 ),
        .O(p_27_out));
  FDRE \ERR_FRAME_SYNC_ALL[6].errframesync_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_27_out),
        .Q(src_in[13]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF20000000)) 
    \ERR_FRAME_SYNC_ALL[7].errframesync[7]_i_1 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I1(latest_vc[3]),
        .I2(latest_vc[2]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[7].errframesync_reg[7]_0 ),
        .O(p_24_out));
  FDRE \ERR_FRAME_SYNC_ALL[7].errframesync_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_24_out),
        .Q(src_in[15]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000040)) 
    \ERR_FRAME_SYNC_ALL[8].errframesync[8]_i_1 
       (.I0(latest_vc[2]),
        .I1(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I2(latest_vc[3]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[8].errframesync_reg[8]_0 ),
        .O(p_21_out));
  FDRE \ERR_FRAME_SYNC_ALL[8].errframesync_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_21_out),
        .Q(src_in[17]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004000)) 
    \ERR_FRAME_SYNC_ALL[9].errframesync[9]_i_1 
       (.I0(latest_vc[2]),
        .I1(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 ),
        .I2(latest_vc[3]),
        .I3(latest_vc[0]),
        .I4(latest_vc[1]),
        .I5(\ERR_FRAME_SYNC_ALL[9].errframesync_reg[9]_0 ),
        .O(p_18_out));
  FDRE \ERR_FRAME_SYNC_ALL[9].errframesync_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_18_out),
        .Q(src_in[19]),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_1 ),
        .Q(\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_0 ),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10]_0 ),
        .Q(p_1_in13_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11]_0 ),
        .Q(p_1_in10_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12]_0 ),
        .Q(p_1_in7_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13]_0 ),
        .Q(p_1_in4_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14]_0 ),
        .Q(p_1_in1_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15]_0 ),
        .Q(p_1_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1]_0 ),
        .Q(p_1_in40_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2]_0 ),
        .Q(p_1_in37_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3]_0 ),
        .Q(p_1_in34_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4]_0 ),
        .Q(p_1_in31_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5]_0 ),
        .Q(p_1_in28_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6]_0 ),
        .Q(p_1_in25_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7]_0 ),
        .Q(p_1_in22_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8]_0 ),
        .Q(p_1_in19_in),
        .R(SR));
  FDRE \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9]_0 ),
        .Q(p_1_in16_in),
        .R(SR));
  FDRE \FE_DETECT[0].fe_detect_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_80_out),
        .Q(\FE_DETECT[0].fe_detect_reg_n_0_[0] ),
        .R(SR));
  FDRE \FE_DETECT[10].fe_detect_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_60_out),
        .Q(\FE_DETECT[10].fe_detect_reg_n_0_[10] ),
        .R(SR));
  FDRE \FE_DETECT[11].fe_detect_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_58_out),
        .Q(\FE_DETECT[11].fe_detect_reg_n_0_[11] ),
        .R(SR));
  FDRE \FE_DETECT[12].fe_detect_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_56_out),
        .Q(\FE_DETECT[12].fe_detect_reg_n_0_[12] ),
        .R(SR));
  FDRE \FE_DETECT[13].fe_detect_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_54_out),
        .Q(\FE_DETECT[13].fe_detect_reg_n_0_[13] ),
        .R(SR));
  FDRE \FE_DETECT[14].fe_detect_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_52_out),
        .Q(\FE_DETECT[14].fe_detect_reg_n_0_[14] ),
        .R(SR));
  FDRE \FE_DETECT[15].fe_detect_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_50_out),
        .Q(\FE_DETECT[15].fe_detect_reg_n_0_[15] ),
        .R(SR));
  FDRE \FE_DETECT[1].fe_detect_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_78_out),
        .Q(\FE_DETECT[1].fe_detect_reg_n_0_[1] ),
        .R(SR));
  FDRE \FE_DETECT[2].fe_detect_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_76_out),
        .Q(\FE_DETECT[2].fe_detect_reg_n_0_[2] ),
        .R(SR));
  FDRE \FE_DETECT[3].fe_detect_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_74_out),
        .Q(\FE_DETECT[3].fe_detect_reg_n_0_[3] ),
        .R(SR));
  FDRE \FE_DETECT[4].fe_detect_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_72_out),
        .Q(\FE_DETECT[4].fe_detect_reg_n_0_[4] ),
        .R(SR));
  FDRE \FE_DETECT[5].fe_detect_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_70_out),
        .Q(\FE_DETECT[5].fe_detect_reg_n_0_[5] ),
        .R(SR));
  FDRE \FE_DETECT[6].fe_detect_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_68_out),
        .Q(\FE_DETECT[6].fe_detect_reg_n_0_[6] ),
        .R(SR));
  FDRE \FE_DETECT[7].fe_detect_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_66_out),
        .Q(\FE_DETECT[7].fe_detect_reg_n_0_[7] ),
        .R(SR));
  FDRE \FE_DETECT[8].fe_detect_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_64_out),
        .Q(\FE_DETECT[8].fe_detect_reg_n_0_[8] ),
        .R(SR));
  FDRE \FE_DETECT[9].fe_detect_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_62_out),
        .Q(\FE_DETECT[9].fe_detect_reg_n_0_[9] ),
        .R(SR));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_cur_state[0]_i_4 
       (.I0(Q[0]),
        .I1(cur_state),
        .O(\FSM_sequential_cur_state_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h00BA)) 
    \FSM_sequential_cur_state[0]_i_6 
       (.I0(cur_state),
        .I1(crc_done),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\FSM_sequential_cur_state_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hCC44CF44CC44CC44)) 
    \FSM_sequential_cur_state[1]_i_1 
       (.I0(\FSM_sequential_cur_state_reg[1]_1 ),
        .I1(\FSM_sequential_cur_state[1]_i_3_n_0 ),
        .I2(pkt_valid),
        .I3(cur_state),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\FSM_sequential_cur_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000050500003000)) 
    \FSM_sequential_cur_state[1]_i_3 
       (.I0(data_done),
        .I1(\FSM_sequential_cur_state_reg[1]_2 ),
        .I2(Q[1]),
        .I3(phecc_done),
        .I4(Q[0]),
        .I5(cur_state),
        .O(\FSM_sequential_cur_state[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT5 #(
    .INIT(32'hAAAAABAA)) 
    \FSM_sequential_cur_state[2]_i_2 
       (.I0(\FSM_sequential_cur_state_reg[2]_0 ),
        .I1(cur_state),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(phecc_done),
        .O(\FSM_sequential_cur_state[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:100,iSTATE0:011,iSTATE1:010,iSTATE2:001,iSTATE3:000" *) 
  FDRE \FSM_sequential_cur_state_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D),
        .Q(Q[0]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  (* FSM_ENCODED_STATES = "iSTATE:100,iSTATE0:011,iSTATE1:010,iSTATE2:001,iSTATE3:000" *) 
  FDRE \FSM_sequential_cur_state_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_cur_state[1]_i_1_n_0 ),
        .Q(cur_state),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  (* FSM_ENCODED_STATES = "iSTATE:100,iSTATE0:011,iSTATE1:010,iSTATE2:001,iSTATE3:000" *) 
  FDRE \FSM_sequential_cur_state_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\FSM_sequential_cur_state[2]_i_2_n_0 ),
        .Q(Q[1]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[0].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [0]),
        .I1(\ERR_FRAME_DATA[0].errframedata_reg[0]_0 ),
        .O(src_in[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[10].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [5]),
        .I1(\ERR_FRAME_DATA[5].errframedata_reg[5]_0 ),
        .O(src_in[10]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[12].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [6]),
        .I1(\ERR_FRAME_DATA[6].errframedata_reg[6]_0 ),
        .O(src_in[12]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[14].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [7]),
        .I1(\ERR_FRAME_DATA[7].errframedata_reg[7]_0 ),
        .O(src_in[14]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[16].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [8]),
        .I1(\ERR_FRAME_DATA[8].errframedata_reg[8]_0 ),
        .O(src_in[16]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[18].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [9]),
        .I1(\ERR_FRAME_DATA[9].errframedata_reg[9]_0 ),
        .O(src_in[18]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[20].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [10]),
        .I1(\ERR_FRAME_DATA[10].errframedata_reg[10]_0 ),
        .O(src_in[20]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[22].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [11]),
        .I1(\ERR_FRAME_DATA[11].errframedata_reg[11]_0 ),
        .O(src_in[22]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[24].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [12]),
        .I1(\ERR_FRAME_DATA[12].errframedata_reg[12]_0 ),
        .O(src_in[24]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[26].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [13]),
        .I1(\ERR_FRAME_DATA[13].errframedata_reg[13]_0 ),
        .O(src_in[26]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[28].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [14]),
        .I1(\ERR_FRAME_DATA[14].errframedata_reg[14]_0 ),
        .O(src_in[28]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[2].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [1]),
        .I1(\ERR_FRAME_DATA[1].errframedata_reg[1]_0 ),
        .O(src_in[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[30].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [15]),
        .I1(p_0_in),
        .O(src_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \HSC2R_CDC[35].hsc2r_send[35]_i_2 
       (.I0(pkt_valid),
        .I1(dout[2]),
        .O(pkt_rdvld_reg_0));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[4].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [2]),
        .I1(\ERR_FRAME_DATA[2].errframedata_reg[2]_0 ),
        .O(src_in[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[6].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [3]),
        .I1(\ERR_FRAME_DATA[3].errframedata_reg[3]_0 ),
        .O(src_in[6]));
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[8].hsc2r_bus_cdc_i_1 
       (.I0(\errframedata_d1_reg[15]_0 [4]),
        .I1(\ERR_FRAME_DATA[4].errframedata_reg[4]_0 ),
        .O(src_in[8]));
  LUT2 #(
    .INIT(4'h2)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_1 
       (.I0(pkt_valid),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[31] ),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_3 
       (.I0(pkt_valid),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[31] ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0] ),
        .O(pkt_rdvld_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_5 
       (.I0(pkt_valid),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[31] ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0] ),
        .O(pkt_rdvld_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \LINE_BUF_WR_64.str_fwd_i_4 
       (.I0(pkt_valid),
        .I1(data_wip_reg),
        .O(mem_data1));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    crc_rst_i_1
       (.I0(prv_state[2]),
        .I1(prv_state[1]),
        .I2(prv_state[0]),
        .I3(Q[0]),
        .I4(cur_state),
        .I5(Q[1]),
        .O(crc_rst0));
  FDRE crc_rst_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_rst0),
        .Q(crc_rst),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h1050)) 
    crc_start_d1_i_1
       (.I0(Q[1]),
        .I1(crc_start_d1_i_2_n_0),
        .I2(cur_state),
        .I3(crc_trig_d1_i_2_n_0),
        .O(crc_start));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    crc_start_d1_i_2
       (.I0(dest_out),
        .I1(dout[1]),
        .I2(dout[0]),
        .I3(pkt_rdvld_reg_0),
        .I4(Q[0]),
        .I5(cur_state),
        .O(crc_start_d1_i_2_n_0));
  LUT5 #(
    .INIT(32'h000000D0)) 
    crc_trig_d1_i_1
       (.I0(crc_trig_d1_i_2_n_0),
        .I1(crc_trig_d1_i_3_n_0),
        .I2(cur_state),
        .I3(Q[1]),
        .I4(diwc_corrected_zero),
        .O(crc_trig_d10));
  LUT6 #(
    .INIT(64'h00FFFDFDFFFFFFFF)) 
    crc_trig_d1_i_2
       (.I0(data_done),
        .I1(crc_start_d1_reg),
        .I2(wc_gt_pload),
        .I3(pkt_valid),
        .I4(Q[0]),
        .I5(cur_state),
        .O(crc_trig_d1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h5575)) 
    crc_trig_d1_i_3
       (.I0(crc_start_d1_i_2_n_0),
        .I1(cur_state),
        .I2(Q[0]),
        .I3(crc_done),
        .O(crc_trig_d1_i_3_n_0));
  FDRE \cur_lp_vc_reg[0] 
       (.C(m_axis_aclk),
        .CE(\cur_lp_vc_reg[3]_1 ),
        .D(\cur_lp_vc_reg[3]_0 [2]),
        .Q(cur_lp_vc[0]),
        .R(SR));
  FDRE \cur_lp_vc_reg[1] 
       (.C(m_axis_aclk),
        .CE(\cur_lp_vc_reg[3]_1 ),
        .D(\cur_lp_vc_reg[3]_0 [3]),
        .Q(cur_lp_vc[1]),
        .R(SR));
  FDRE \cur_lp_vc_reg[2] 
       (.C(m_axis_aclk),
        .CE(\cur_lp_vc_reg[3]_1 ),
        .D(\cur_lp_vc_reg[3]_0 [4]),
        .Q(cur_lp_vc[2]),
        .R(SR));
  FDRE \cur_lp_vc_reg[3] 
       (.C(m_axis_aclk),
        .CE(\cur_lp_vc_reg[3]_1 ),
        .D(\cur_lp_vc_reg[3]_0 [5]),
        .Q(cur_lp_vc[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'hFDFF)) 
    data_wip_reg_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(cur_state),
        .I3(phecc_done),
        .O(\FSM_sequential_cur_state_reg[2]_1 ));
  FDRE \errframedata_d1_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[0].errframedata_reg[0]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [0]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[10].errframedata_reg[10]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [10]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[11].errframedata_reg[11]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [11]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[12].errframedata_reg[12]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [12]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[13].errframedata_reg[13]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [13]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[14].errframedata_reg[14]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [14]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(\errframedata_d1_reg[15]_0 [15]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[1].errframedata_reg[1]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [1]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[2].errframedata_reg[2]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [2]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[3].errframedata_reg[3]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [3]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[4].errframedata_reg[4]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [4]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[5].errframedata_reg[5]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [5]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[6].errframedata_reg[6]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [6]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[7].errframedata_reg[7]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [7]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[8].errframedata_reg[8]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [8]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \errframedata_d1_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_DATA[9].errframedata_reg[9]_0 ),
        .Q(\errframedata_d1_reg[15]_0 [9]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \latest_vc_reg[0] 
       (.C(m_axis_aclk),
        .CE(diwc_valid),
        .D(\cur_lp_vc_reg[3]_0 [2]),
        .Q(latest_vc[0]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \latest_vc_reg[1] 
       (.C(m_axis_aclk),
        .CE(diwc_valid),
        .D(\cur_lp_vc_reg[3]_0 [3]),
        .Q(latest_vc[1]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \latest_vc_reg[2] 
       (.C(m_axis_aclk),
        .CE(diwc_valid),
        .D(\cur_lp_vc_reg[3]_0 [4]),
        .Q(latest_vc[2]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE \latest_vc_reg[3] 
       (.C(m_axis_aclk),
        .CE(diwc_valid),
        .D(\cur_lp_vc_reg[3]_0 [5]),
        .Q(latest_vc[3]),
        .R(\FSM_sequential_cur_state_reg[2]_2 ));
  FDRE lp_wc0_i_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(lp_wc0_i_reg_reg_0),
        .Q(lp_wc0),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    phecc_start_d1_i_1
       (.I0(Q[1]),
        .I1(\FSM_sequential_cur_state_reg[0]_0 ),
        .I2(pkt_rdvld_reg_0),
        .I3(dout[0]),
        .I4(dout[1]),
        .I5(dest_out),
        .O(\FSM_sequential_cur_state_reg[2]_0 ));
  FDRE pkt_fifo_empty_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(empty),
        .Q(pkt_fifo_empty_reg),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000F2)) 
    pkt_fifo_i_1
       (.I0(pkt_fifo_i_2_n_0),
        .I1(pkt_fifo_empty_reg),
        .I2(pkt_fifo_ren_reg),
        .I3(pkt_fifo_i_3_n_0),
        .I4(\FSM_sequential_cur_state_reg[2]_0 ),
        .O(rd_en));
  LUT6 #(
    .INIT(64'hAAFFAAAAAAFFAAEA)) 
    pkt_fifo_i_2
       (.I0(phecc_done),
        .I1(dest_out),
        .I2(m_axis_aresetn),
        .I3(Q[1]),
        .I4(cur_state),
        .I5(Q[0]),
        .O(pkt_fifo_i_2_n_0));
  LUT6 #(
    .INIT(64'h11F1111011111110)) 
    pkt_fifo_i_3
       (.I0(\cur_lp_vc_reg[3]_0 [1]),
        .I1(\cur_lp_vc_reg[3]_0 [0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(cur_state),
        .I5(pkt_valid),
        .O(pkt_fifo_i_3_n_0));
  FDRE pkt_fifo_ren_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pkt_rdvld0),
        .Q(pkt_fifo_ren_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000000000F2)) 
    pkt_rdvld_i_1
       (.I0(pkt_fifo_i_2_n_0),
        .I1(pkt_fifo_empty_reg),
        .I2(pkt_fifo_ren_reg),
        .I3(pkt_fifo_i_3_n_0),
        .I4(\FSM_sequential_cur_state_reg[2]_0 ),
        .I5(empty),
        .O(pkt_rdvld0));
  FDRE pkt_rdvld_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pkt_rdvld0),
        .Q(pkt_valid),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \prv_state[0]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(cur_state),
        .O(\prv_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \prv_state[1]_i_1 
       (.I0(cur_state),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\prv_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \prv_state[2]_i_1 
       (.I0(cur_state),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(cur_state_reg));
  FDRE \prv_state_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\prv_state[0]_i_1_n_0 ),
        .Q(prv_state[0]),
        .R(SR));
  FDRE \prv_state_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\prv_state[1]_i_1_n_0 ),
        .Q(prv_state[1]),
        .R(SR));
  FDRE \prv_state_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(cur_state_reg),
        .Q(prv_state[2]),
        .R(SR));
  FDRE \reg_ecc_status_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\reg_ecc_status_i_reg[2]_0 [0]),
        .Q(reg_ecc_status_i[1]),
        .R(SR));
  FDRE \reg_ecc_status_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\reg_ecc_status_i_reg[2]_0 [1]),
        .Q(reg_ecc_status_i[2]),
        .R(SR));
  FDRE \reg_ecc_status_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(reg_ecc_status_i[1]),
        .Q(src_in[32]),
        .R(SR));
  FDRE \reg_ecc_status_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(reg_ecc_status_i[2]),
        .Q(src_in[33]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_crc" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_crc
   (crc_start_d1,
    \c_data_reg[15]_0 ,
    crc_done,
    src_in,
    crc_status,
    Q,
    \crc_reg_out_reg[15] ,
    \data_p_strb_reg[1]_0 ,
    SR,
    m_axis_aclk,
    crc_en,
    crc_start,
    m_axis_aresetn,
    dout,
    crc_blk_sel,
    \src_ff_reg[33] ,
    \src_ff_reg[33]_0 ,
    lp_wc0,
    D,
    dest_out,
    crc_rst,
    E,
    \data_p_strb_reg[1]_1 ,
    \exp_crc_i_reg[12]_0 ,
    \exp_crc_i_reg[15]_0 );
  output crc_start_d1;
  output [15:0]\c_data_reg[15]_0 ;
  output crc_done;
  output [0:0]src_in;
  output crc_status;
  output [15:0]Q;
  output [5:0]\crc_reg_out_reg[15] ;
  output [1:0]\data_p_strb_reg[1]_0 ;
  input [0:0]SR;
  input m_axis_aclk;
  input crc_en;
  input crc_start;
  input m_axis_aresetn;
  input [31:0]dout;
  input [3:0]crc_blk_sel;
  input \src_ff_reg[33] ;
  input \src_ff_reg[33]_0 ;
  input lp_wc0;
  input [1:0]D;
  input dest_out;
  input crc_rst;
  input [0:0]E;
  input [1:0]\data_p_strb_reg[1]_1 ;
  input [1:0]\exp_crc_i_reg[12]_0 ;
  input [15:0]\exp_crc_i_reg[15]_0 ;

  wire \CSI_OPT1_OFF.crc_32b_i_n_3 ;
  wire [1:0]D;
  wire [0:0]E;
  wire [15:0]Q;
  wire [0:0]SR;
  wire aresetn_d1;
  wire aresetn_d2;
  wire [31:16]c_data;
  wire [15:0]\c_data_reg[15]_0 ;
  wire c_en;
  wire [3:0]crc_blk_sel;
  wire crc_done;
  wire crc_en;
  wire [5:0]\crc_reg_out_reg[15] ;
  wire crc_rst;
  wire crc_start;
  wire crc_start_d1;
  wire crc_status;
  wire [1:0]\data_p_strb_reg[1]_0 ;
  wire [1:0]\data_p_strb_reg[1]_1 ;
  wire dest_out;
  wire [31:0]dout;
  wire [1:0]\exp_crc_i_reg[12]_0 ;
  wire [15:0]\exp_crc_i_reg[15]_0 ;
  wire lp_wc0;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire rstart;
  wire \src_ff_reg[33] ;
  wire \src_ff_reg[33]_0 ;
  wire [0:0]src_in;

  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_crc0 \CSI_OPT1_OFF.crc_32b_i 
       (.D(D),
        .\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 ({Q[10],Q[8],Q[5:0]}),
        .Q(c_data),
        .SR(SR),
        .aresetn_d1(aresetn_d1),
        .aresetn_d2(aresetn_d2),
        .c_en(c_en),
        .crc_blk_sel(crc_blk_sel),
        .\crc_reg_out[1]_i_2_0 (\c_data_reg[15]_0 [13]),
        .\crc_reg_out[8]_i_3_0 (\c_data_reg[15]_0 [8]),
        .\crc_reg_out_reg[11]_0 (\c_data_reg[15]_0 [3]),
        .\crc_reg_out_reg[12]_0 (\c_data_reg[15]_0 [4]),
        .\crc_reg_out_reg[13]_0 (\c_data_reg[15]_0 [5]),
        .\crc_reg_out_reg[14]_0 (\c_data_reg[15]_0 [2]),
        .\crc_reg_out_reg[14]_1 (\c_data_reg[15]_0 [6]),
        .\crc_reg_out_reg[15]_0 (\crc_reg_out_reg[15] ),
        .\crc_reg_out_reg[4]_0 (\c_data_reg[15]_0 [1]),
        .crc_rst(crc_rst),
        .crc_start_d1(crc_start_d1),
        .crc_status(crc_status),
        .crcdone_reg_0(crc_done),
        .dest_out(dest_out),
        .dout({dout[10],dout[8],dout[5:0]}),
        .lp_wc0(lp_wc0),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .\prv_crc_cr0_reg[13]_0 (\c_data_reg[15]_0 [7]),
        .\prv_crc_cr0_reg[13]_1 (\c_data_reg[15]_0 [10]),
        .\prv_crc_cr0_reg[15]_0 (\c_data_reg[15]_0 [9]),
        .\prv_crc_cr0_reg[15]_1 (\c_data_reg[15]_0 [11]),
        .\prv_crc_cr0_reg[15]_2 (\c_data_reg[15]_0 [12]),
        .\prv_crc_cr0_reg[2]_0 (\c_data_reg[15]_0 [15]),
        .\prv_crc_cr0_reg[5]_0 (\c_data_reg[15]_0 [0]),
        .\prv_crc_cr0_reg[5]_1 (\c_data_reg[15]_0 [14]),
        .rstart(rstart),
        .\src_ff_reg[33] (\src_ff_reg[33] ),
        .\src_ff_reg[33]_0 (\src_ff_reg[33]_0 ),
        .src_in(src_in),
        .\syncstages_ff_reg[2] (\CSI_OPT1_OFF.crc_32b_i_n_3 ));
  FDRE aresetn_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(m_axis_aresetn),
        .Q(aresetn_d1),
        .R(1'b0));
  FDRE aresetn_d2_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(aresetn_d1),
        .Q(aresetn_d2),
        .R(SR));
  FDRE \c_data_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[0]),
        .Q(\c_data_reg[15]_0 [0]),
        .R(SR));
  FDRE \c_data_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[10]),
        .Q(\c_data_reg[15]_0 [10]),
        .R(SR));
  FDRE \c_data_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[11]),
        .Q(\c_data_reg[15]_0 [11]),
        .R(SR));
  FDRE \c_data_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[12]),
        .Q(\c_data_reg[15]_0 [12]),
        .R(SR));
  FDRE \c_data_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[13]),
        .Q(\c_data_reg[15]_0 [13]),
        .R(SR));
  FDRE \c_data_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[14]),
        .Q(\c_data_reg[15]_0 [14]),
        .R(SR));
  FDRE \c_data_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[15]),
        .Q(\c_data_reg[15]_0 [15]),
        .R(SR));
  FDRE \c_data_reg[16] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[16]),
        .Q(c_data[16]),
        .R(SR));
  FDRE \c_data_reg[17] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[17]),
        .Q(c_data[17]),
        .R(SR));
  FDRE \c_data_reg[18] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[18]),
        .Q(c_data[18]),
        .R(SR));
  FDRE \c_data_reg[19] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[19]),
        .Q(c_data[19]),
        .R(SR));
  FDRE \c_data_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[1]),
        .Q(\c_data_reg[15]_0 [1]),
        .R(SR));
  FDRE \c_data_reg[20] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[20]),
        .Q(c_data[20]),
        .R(SR));
  FDRE \c_data_reg[21] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[21]),
        .Q(c_data[21]),
        .R(SR));
  FDRE \c_data_reg[22] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[22]),
        .Q(c_data[22]),
        .R(SR));
  FDRE \c_data_reg[23] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[23]),
        .Q(c_data[23]),
        .R(SR));
  FDRE \c_data_reg[24] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[24]),
        .Q(c_data[24]),
        .R(SR));
  FDRE \c_data_reg[25] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[25]),
        .Q(c_data[25]),
        .R(SR));
  FDRE \c_data_reg[26] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[26]),
        .Q(c_data[26]),
        .R(SR));
  FDRE \c_data_reg[27] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[27]),
        .Q(c_data[27]),
        .R(SR));
  FDRE \c_data_reg[28] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[28]),
        .Q(c_data[28]),
        .R(SR));
  FDRE \c_data_reg[29] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[29]),
        .Q(c_data[29]),
        .R(SR));
  FDRE \c_data_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[2]),
        .Q(\c_data_reg[15]_0 [2]),
        .R(SR));
  FDRE \c_data_reg[30] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[30]),
        .Q(c_data[30]),
        .R(SR));
  FDRE \c_data_reg[31] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[31]),
        .Q(c_data[31]),
        .R(SR));
  FDRE \c_data_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[3]),
        .Q(\c_data_reg[15]_0 [3]),
        .R(SR));
  FDRE \c_data_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[4]),
        .Q(\c_data_reg[15]_0 [4]),
        .R(SR));
  FDRE \c_data_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[5]),
        .Q(\c_data_reg[15]_0 [5]),
        .R(SR));
  FDRE \c_data_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[6]),
        .Q(\c_data_reg[15]_0 [6]),
        .R(SR));
  FDRE \c_data_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[7]),
        .Q(\c_data_reg[15]_0 [7]),
        .R(SR));
  FDRE \c_data_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[8]),
        .Q(\c_data_reg[15]_0 [8]),
        .R(SR));
  FDRE \c_data_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(dout[9]),
        .Q(\c_data_reg[15]_0 [9]),
        .R(SR));
  FDRE c_en_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_en),
        .Q(c_en),
        .R(SR));
  FDRE crc_start_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_start),
        .Q(crc_start_d1),
        .R(SR));
  FDSE \data_p_strb_reg[0] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(\data_p_strb_reg[1]_1 [0]),
        .Q(\data_p_strb_reg[1]_0 [0]),
        .S(SR));
  FDSE \data_p_strb_reg[1] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(\data_p_strb_reg[1]_1 [1]),
        .Q(\data_p_strb_reg[1]_0 [1]),
        .S(SR));
  FDRE \exp_crc_i_reg[0] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \exp_crc_i_reg[10] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \exp_crc_i_reg[11] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \exp_crc_i_reg[12] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \exp_crc_i_reg[13] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \exp_crc_i_reg[14] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \exp_crc_i_reg[15] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \exp_crc_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \exp_crc_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \exp_crc_i_reg[3] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \exp_crc_i_reg[4] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \exp_crc_i_reg[5] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \exp_crc_i_reg[6] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \exp_crc_i_reg[7] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [0]),
        .D(\exp_crc_i_reg[15]_0 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \exp_crc_i_reg[8] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \exp_crc_i_reg[9] 
       (.C(m_axis_aclk),
        .CE(\exp_crc_i_reg[12]_0 [1]),
        .D(\exp_crc_i_reg[15]_0 [9]),
        .Q(Q[9]),
        .R(SR));
  FDRE rstart_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\CSI_OPT1_OFF.crc_32b_i_n_3 ),
        .Q(rstart),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_crc0" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_crc0
   (crcdone_reg_0,
    src_in,
    crc_status,
    \syncstages_ff_reg[2] ,
    \crc_reg_out_reg[15]_0 ,
    crc_blk_sel,
    m_axis_aclk,
    rstart,
    c_en,
    \crc_reg_out_reg[4]_0 ,
    \crc_reg_out_reg[13]_0 ,
    \prv_crc_cr0_reg[5]_0 ,
    Q,
    \crc_reg_out[1]_i_2_0 ,
    \prv_crc_cr0_reg[2]_0 ,
    \prv_crc_cr0_reg[15]_0 ,
    \prv_crc_cr0_reg[13]_0 ,
    \crc_reg_out_reg[11]_0 ,
    \crc_reg_out_reg[14]_0 ,
    \prv_crc_cr0_reg[15]_1 ,
    \crc_reg_out_reg[12]_0 ,
    \prv_crc_cr0_reg[15]_2 ,
    \prv_crc_cr0_reg[5]_1 ,
    \crc_reg_out_reg[14]_1 ,
    \prv_crc_cr0_reg[13]_1 ,
    \crc_reg_out[8]_i_3_0 ,
    crc_start_d1,
    m_axis_aresetn,
    \src_ff_reg[33] ,
    \src_ff_reg[33]_0 ,
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 ,
    lp_wc0,
    dout,
    D,
    dest_out,
    aresetn_d1,
    aresetn_d2,
    crc_rst,
    SR);
  output crcdone_reg_0;
  output [0:0]src_in;
  output crc_status;
  output \syncstages_ff_reg[2] ;
  output [5:0]\crc_reg_out_reg[15]_0 ;
  input [3:0]crc_blk_sel;
  input m_axis_aclk;
  input rstart;
  input c_en;
  input \crc_reg_out_reg[4]_0 ;
  input \crc_reg_out_reg[13]_0 ;
  input \prv_crc_cr0_reg[5]_0 ;
  input [15:0]Q;
  input \crc_reg_out[1]_i_2_0 ;
  input \prv_crc_cr0_reg[2]_0 ;
  input \prv_crc_cr0_reg[15]_0 ;
  input \prv_crc_cr0_reg[13]_0 ;
  input \crc_reg_out_reg[11]_0 ;
  input \crc_reg_out_reg[14]_0 ;
  input \prv_crc_cr0_reg[15]_1 ;
  input \crc_reg_out_reg[12]_0 ;
  input \prv_crc_cr0_reg[15]_2 ;
  input \prv_crc_cr0_reg[5]_1 ;
  input \crc_reg_out_reg[14]_1 ;
  input \prv_crc_cr0_reg[13]_1 ;
  input \crc_reg_out[8]_i_3_0 ;
  input crc_start_d1;
  input m_axis_aresetn;
  input \src_ff_reg[33] ;
  input \src_ff_reg[33]_0 ;
  input [7:0]\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 ;
  input lp_wc0;
  input [7:0]dout;
  input [1:0]D;
  input dest_out;
  input aresetn_d1;
  input aresetn_d2;
  input crc_rst;
  input [0:0]SR;

  wire [1:0]D;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_10_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_11_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_12_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_13_n_0 ;
  wire [7:0]\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_3_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_4_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_7_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_8_n_0 ;
  wire \HSC2R_CDC[33].hsc2r_bus_cdc_i_9_n_0 ;
  wire [15:0]Q;
  wire [0:0]SR;
  wire aresetn_d1;
  wire aresetn_d2;
  wire c_en;
  wire [3:0]crc_blk_sel;
  wire \crc_reg_out[0]_i_1_n_0 ;
  wire \crc_reg_out[0]_i_2_n_0 ;
  wire \crc_reg_out[0]_i_3_n_0 ;
  wire \crc_reg_out[0]_i_4_n_0 ;
  wire \crc_reg_out[10]_i_1_n_0 ;
  wire \crc_reg_out[10]_i_2_n_0 ;
  wire \crc_reg_out[10]_i_3_n_0 ;
  wire \crc_reg_out[10]_i_4_n_0 ;
  wire \crc_reg_out[10]_i_5_n_0 ;
  wire \crc_reg_out[10]_i_6_n_0 ;
  wire \crc_reg_out[10]_i_8_n_0 ;
  wire \crc_reg_out[11]_i_1_n_0 ;
  wire \crc_reg_out[11]_i_2_n_0 ;
  wire \crc_reg_out[11]_i_4_n_0 ;
  wire \crc_reg_out[11]_i_5_n_0 ;
  wire \crc_reg_out[12]_i_1_n_0 ;
  wire \crc_reg_out[12]_i_2_n_0 ;
  wire \crc_reg_out[12]_i_3_n_0 ;
  wire \crc_reg_out[12]_i_4_n_0 ;
  wire \crc_reg_out[12]_i_5_n_0 ;
  wire \crc_reg_out[12]_i_6_n_0 ;
  wire \crc_reg_out[13]_i_1_n_0 ;
  wire \crc_reg_out[13]_i_2_n_0 ;
  wire \crc_reg_out[13]_i_3_n_0 ;
  wire \crc_reg_out[13]_i_4_n_0 ;
  wire \crc_reg_out[13]_i_5_n_0 ;
  wire \crc_reg_out[13]_i_6_n_0 ;
  wire \crc_reg_out[14]_i_1_n_0 ;
  wire \crc_reg_out[14]_i_2_n_0 ;
  wire \crc_reg_out[14]_i_3_n_0 ;
  wire \crc_reg_out[14]_i_4_n_0 ;
  wire \crc_reg_out[15]_i_1_n_0 ;
  wire \crc_reg_out[15]_i_2_n_0 ;
  wire \crc_reg_out[15]_i_3_n_0 ;
  wire \crc_reg_out[15]_i_4_n_0 ;
  wire \crc_reg_out[15]_i_5_n_0 ;
  wire \crc_reg_out[15]_i_6_n_0 ;
  wire \crc_reg_out[15]_i_7_n_0 ;
  wire \crc_reg_out[1]_i_1_n_0 ;
  wire \crc_reg_out[1]_i_2_0 ;
  wire \crc_reg_out[1]_i_2_n_0 ;
  wire \crc_reg_out[1]_i_3_n_0 ;
  wire \crc_reg_out[1]_i_4_n_0 ;
  wire \crc_reg_out[1]_i_5_n_0 ;
  wire \crc_reg_out[1]_i_6_n_0 ;
  wire \crc_reg_out[2]_i_1_n_0 ;
  wire \crc_reg_out[2]_i_2_n_0 ;
  wire \crc_reg_out[2]_i_3_n_0 ;
  wire \crc_reg_out[2]_i_4_n_0 ;
  wire \crc_reg_out[2]_i_5_n_0 ;
  wire \crc_reg_out[2]_i_6_n_0 ;
  wire \crc_reg_out[3]_i_1_n_0 ;
  wire \crc_reg_out[3]_i_2_n_0 ;
  wire \crc_reg_out[3]_i_3_n_0 ;
  wire \crc_reg_out[3]_i_5_n_0 ;
  wire \crc_reg_out[4]_i_1_n_0 ;
  wire \crc_reg_out[4]_i_2_n_0 ;
  wire \crc_reg_out[4]_i_3_n_0 ;
  wire \crc_reg_out[4]_i_4_n_0 ;
  wire \crc_reg_out[4]_i_5_n_0 ;
  wire \crc_reg_out[5]_i_1_n_0 ;
  wire \crc_reg_out[5]_i_2_n_0 ;
  wire \crc_reg_out[5]_i_3_n_0 ;
  wire \crc_reg_out[5]_i_4_n_0 ;
  wire \crc_reg_out[5]_i_6_n_0 ;
  wire \crc_reg_out[6]_i_1_n_0 ;
  wire \crc_reg_out[6]_i_2_n_0 ;
  wire \crc_reg_out[6]_i_3_n_0 ;
  wire \crc_reg_out[6]_i_5_n_0 ;
  wire \crc_reg_out[7]_i_1_n_0 ;
  wire \crc_reg_out[7]_i_2_n_0 ;
  wire \crc_reg_out[7]_i_3_n_0 ;
  wire \crc_reg_out[7]_i_4_n_0 ;
  wire \crc_reg_out[7]_i_5_n_0 ;
  wire \crc_reg_out[7]_i_7_n_0 ;
  wire \crc_reg_out[8]_i_10_n_0 ;
  wire \crc_reg_out[8]_i_1_n_0 ;
  wire \crc_reg_out[8]_i_2_n_0 ;
  wire \crc_reg_out[8]_i_3_0 ;
  wire \crc_reg_out[8]_i_3_n_0 ;
  wire \crc_reg_out[8]_i_4_n_0 ;
  wire \crc_reg_out[8]_i_5_n_0 ;
  wire \crc_reg_out[8]_i_6_n_0 ;
  wire \crc_reg_out[8]_i_7_n_0 ;
  wire \crc_reg_out[8]_i_8_n_0 ;
  wire \crc_reg_out[8]_i_9_n_0 ;
  wire \crc_reg_out[9]_i_1_n_0 ;
  wire \crc_reg_out[9]_i_2_n_0 ;
  wire \crc_reg_out[9]_i_3_n_0 ;
  wire \crc_reg_out[9]_i_4_n_0 ;
  wire \crc_reg_out[9]_i_5_n_0 ;
  wire \crc_reg_out[9]_i_6_n_0 ;
  wire \crc_reg_out[9]_i_7_n_0 ;
  wire \crc_reg_out[9]_i_8_n_0 ;
  wire crc_reg_out_n_0;
  wire \crc_reg_out_reg[11]_0 ;
  wire \crc_reg_out_reg[12]_0 ;
  wire \crc_reg_out_reg[13]_0 ;
  wire \crc_reg_out_reg[14]_0 ;
  wire \crc_reg_out_reg[14]_1 ;
  wire [5:0]\crc_reg_out_reg[15]_0 ;
  wire \crc_reg_out_reg[4]_0 ;
  wire \crc_reg_out_reg_n_0_[0] ;
  wire \crc_reg_out_reg_n_0_[10] ;
  wire \crc_reg_out_reg_n_0_[1] ;
  wire \crc_reg_out_reg_n_0_[2] ;
  wire \crc_reg_out_reg_n_0_[3] ;
  wire \crc_reg_out_reg_n_0_[4] ;
  wire \crc_reg_out_reg_n_0_[5] ;
  wire \crc_reg_out_reg_n_0_[7] ;
  wire \crc_reg_out_reg_n_0_[8] ;
  wire \crc_reg_out_reg_n_0_[9] ;
  wire crc_rst;
  wire crc_start_d1;
  wire crc_status;
  wire crcdone_i_1_n_0;
  wire crcdone_reg_0;
  wire dest_out;
  wire [7:0]dout;
  wire lp_wc0;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire [12:12]nxt_crc_8bit;
  wire nxt_crc_8bit0114_out__0;
  wire [15:0]p_0_in;
  wire p_0_in140_in;
  wire p_0_in160_in;
  wire p_0_in75_in;
  wire p_13_in97_in;
  wire p_15_in;
  wire p_16_in100_in;
  wire p_17_in103_in;
  wire [15:0]p_1_in;
  wire p_1_in76_in;
  wire p_204_in;
  wire p_20_in107_in;
  wire p_26_in82_in;
  wire p_27_in;
  wire p_301_in;
  wire p_310_in;
  wire p_317_in;
  wire [15:0]prv_crc_cr0;
  wire \prv_crc_cr0[0]_i_2_n_0 ;
  wire \prv_crc_cr0[0]_i_3_n_0 ;
  wire \prv_crc_cr0[10]_i_2_n_0 ;
  wire \prv_crc_cr0[10]_i_3_n_0 ;
  wire \prv_crc_cr0[10]_i_4_n_0 ;
  wire \prv_crc_cr0[10]_i_5_n_0 ;
  wire \prv_crc_cr0[10]_i_6_n_0 ;
  wire \prv_crc_cr0[11]_i_2_n_0 ;
  wire \prv_crc_cr0[11]_i_3_n_0 ;
  wire \prv_crc_cr0[11]_i_4_n_0 ;
  wire \prv_crc_cr0[11]_i_5_n_0 ;
  wire \prv_crc_cr0[11]_i_6_n_0 ;
  wire \prv_crc_cr0[12]_i_2_n_0 ;
  wire \prv_crc_cr0[12]_i_3_n_0 ;
  wire \prv_crc_cr0[12]_i_4_n_0 ;
  wire \prv_crc_cr0[12]_i_5_n_0 ;
  wire \prv_crc_cr0[13]_i_2_n_0 ;
  wire \prv_crc_cr0[13]_i_3_n_0 ;
  wire \prv_crc_cr0[13]_i_4_n_0 ;
  wire \prv_crc_cr0[13]_i_5_n_0 ;
  wire \prv_crc_cr0[13]_i_6_n_0 ;
  wire \prv_crc_cr0[13]_i_7_n_0 ;
  wire \prv_crc_cr0[14]_i_2_n_0 ;
  wire \prv_crc_cr0[14]_i_3_n_0 ;
  wire \prv_crc_cr0[14]_i_4_n_0 ;
  wire \prv_crc_cr0[15]_i_1_n_0 ;
  wire \prv_crc_cr0[15]_i_3_n_0 ;
  wire \prv_crc_cr0[15]_i_4_n_0 ;
  wire \prv_crc_cr0[15]_i_5_n_0 ;
  wire \prv_crc_cr0[15]_i_6_n_0 ;
  wire \prv_crc_cr0[15]_i_7_n_0 ;
  wire \prv_crc_cr0[15]_i_8_n_0 ;
  wire \prv_crc_cr0[1]_i_2_n_0 ;
  wire \prv_crc_cr0[1]_i_3_n_0 ;
  wire \prv_crc_cr0[1]_i_4_n_0 ;
  wire \prv_crc_cr0[2]_i_2_n_0 ;
  wire \prv_crc_cr0[2]_i_3_n_0 ;
  wire \prv_crc_cr0[2]_i_4_n_0 ;
  wire \prv_crc_cr0[2]_i_5_n_0 ;
  wire \prv_crc_cr0[3]_i_2_n_0 ;
  wire \prv_crc_cr0[3]_i_3_n_0 ;
  wire \prv_crc_cr0[4]_i_2_n_0 ;
  wire \prv_crc_cr0[4]_i_3_n_0 ;
  wire \prv_crc_cr0[5]_i_2_n_0 ;
  wire \prv_crc_cr0[5]_i_3_n_0 ;
  wire \prv_crc_cr0[5]_i_4_n_0 ;
  wire \prv_crc_cr0[5]_i_5_n_0 ;
  wire \prv_crc_cr0[5]_i_6_n_0 ;
  wire \prv_crc_cr0[5]_i_7_n_0 ;
  wire \prv_crc_cr0[6]_i_2_n_0 ;
  wire \prv_crc_cr0[6]_i_3_n_0 ;
  wire \prv_crc_cr0[7]_i_2_n_0 ;
  wire \prv_crc_cr0[7]_i_3_n_0 ;
  wire \prv_crc_cr0[7]_i_4_n_0 ;
  wire \prv_crc_cr0[7]_i_5_n_0 ;
  wire \prv_crc_cr0[8]_i_2_n_0 ;
  wire \prv_crc_cr0[8]_i_3_n_0 ;
  wire \prv_crc_cr0[8]_i_4_n_0 ;
  wire \prv_crc_cr0[9]_i_2_n_0 ;
  wire \prv_crc_cr0[9]_i_3_n_0 ;
  wire \prv_crc_cr0[9]_i_4_n_0 ;
  wire \prv_crc_cr0[9]_i_5_n_0 ;
  wire \prv_crc_cr0_reg[13]_0 ;
  wire \prv_crc_cr0_reg[13]_1 ;
  wire \prv_crc_cr0_reg[15]_0 ;
  wire \prv_crc_cr0_reg[15]_1 ;
  wire \prv_crc_cr0_reg[15]_2 ;
  wire \prv_crc_cr0_reg[2]_0 ;
  wire \prv_crc_cr0_reg[5]_0 ;
  wire \prv_crc_cr0_reg[5]_1 ;
  wire [15:0]prv_crc_cr1;
  wire rstart;
  wire \src_ff_reg[33] ;
  wire \src_ff_reg[33]_0 ;
  wire [0:0]src_in;
  wire \syncstages_ff_reg[2] ;

  LUT2 #(
    .INIT(4'h8)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_1 
       (.I0(crcdone_reg_0),
        .I1(crc_status),
        .O(src_in));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_10 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [3]),
        .I1(lp_wc0),
        .I2(dout[3]),
        .I3(\crc_reg_out_reg_n_0_[3] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_11 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [2]),
        .I1(lp_wc0),
        .I2(dout[2]),
        .I3(\crc_reg_out_reg_n_0_[2] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_12 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [4]),
        .I1(lp_wc0),
        .I2(dout[4]),
        .I3(\crc_reg_out_reg_n_0_[4] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_13 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [5]),
        .I1(lp_wc0),
        .I2(dout[5]),
        .I3(\crc_reg_out_reg_n_0_[5] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA8)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_2 
       (.I0(crcdone_reg_0),
        .I1(\HSC2R_CDC[33].hsc2r_bus_cdc_i_3_n_0 ),
        .I2(\HSC2R_CDC[33].hsc2r_bus_cdc_i_4_n_0 ),
        .I3(\src_ff_reg[33] ),
        .I4(\src_ff_reg[33]_0 ),
        .I5(\HSC2R_CDC[33].hsc2r_bus_cdc_i_7_n_0 ),
        .O(crc_status));
  LUT6 #(
    .INIT(64'h656AFFFFFFFF656A)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_3 
       (.I0(\crc_reg_out_reg_n_0_[8] ),
        .I1(dout[6]),
        .I2(lp_wc0),
        .I3(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [6]),
        .I4(\crc_reg_out_reg_n_0_[7] ),
        .I5(D[0]),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_4 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_8_n_0 ),
        .I1(\HSC2R_CDC[33].hsc2r_bus_cdc_i_9_n_0 ),
        .I2(\HSC2R_CDC[33].hsc2r_bus_cdc_i_10_n_0 ),
        .I3(\HSC2R_CDC[33].hsc2r_bus_cdc_i_11_n_0 ),
        .I4(\HSC2R_CDC[33].hsc2r_bus_cdc_i_12_n_0 ),
        .I5(\HSC2R_CDC[33].hsc2r_bus_cdc_i_13_n_0 ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h656AFFFFFFFF656A)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_7 
       (.I0(\crc_reg_out_reg_n_0_[10] ),
        .I1(dout[7]),
        .I2(lp_wc0),
        .I3(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [7]),
        .I4(\crc_reg_out_reg_n_0_[9] ),
        .I5(D[1]),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_8 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [1]),
        .I1(lp_wc0),
        .I2(dout[1]),
        .I3(\crc_reg_out_reg_n_0_[1] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h1DE2)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_9 
       (.I0(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2_0 [0]),
        .I1(lp_wc0),
        .I2(dout[0]),
        .I3(\crc_reg_out_reg_n_0_[0] ),
        .O(\HSC2R_CDC[33].hsc2r_bus_cdc_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h0116)) 
    crc_reg_out
       (.I0(crc_blk_sel[0]),
        .I1(crc_blk_sel[1]),
        .I2(crc_blk_sel[2]),
        .I3(crc_blk_sel[3]),
        .O(crc_reg_out_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[0]_i_1 
       (.I0(\crc_reg_out[0]_i_2_n_0 ),
        .I1(\crc_reg_out[0]_i_3_n_0 ),
        .I2(\prv_crc_cr0[0]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBBEAAAAAAAA)) 
    \crc_reg_out[0]_i_2 
       (.I0(\crc_reg_out[0]_i_4_n_0 ),
        .I1(Q[0]),
        .I2(\prv_crc_cr0[13]_i_7_n_0 ),
        .I3(\prv_crc_cr0[9]_i_3_n_0 ),
        .I4(\prv_crc_cr0[15]_i_5_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[0]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(\crc_reg_out[12]_i_6_n_0 ),
        .I2(\prv_crc_cr0_reg[5]_0 ),
        .I3(\crc_reg_out_reg[12]_0 ),
        .I4(p_15_in),
        .I5(p_0_in140_in),
        .O(\crc_reg_out[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[0]_i_4 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[2]_i_3_n_0 ),
        .I2(\prv_crc_cr0[15]_i_8_n_0 ),
        .I3(\prv_crc_cr0[11]_i_6_n_0 ),
        .I4(\prv_crc_cr0[15]_i_7_n_0 ),
        .O(\crc_reg_out[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[0]_i_5 
       (.I0(prv_crc_cr0[8]),
        .I1(prv_crc_cr1[8]),
        .I2(c_en),
        .O(p_0_in140_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \crc_reg_out[10]_i_1 
       (.I0(\crc_reg_out[10]_i_2_n_0 ),
        .I1(\crc_reg_out[10]_i_3_n_0 ),
        .I2(\crc_reg_out[10]_i_4_n_0 ),
        .I3(\crc_reg_out[10]_i_5_n_0 ),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[10]_i_2 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[10]_i_4_n_0 ),
        .I2(\prv_crc_cr0[13]_i_5_n_0 ),
        .I3(\prv_crc_cr0[15]_i_8_n_0 ),
        .I4(\prv_crc_cr0[5]_i_7_n_0 ),
        .O(\crc_reg_out[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[10]_i_3 
       (.I0(crc_blk_sel[2]),
        .I1(\prv_crc_cr0[10]_i_5_n_0 ),
        .I2(\prv_crc_cr0[7]_i_3_n_0 ),
        .I3(\crc_reg_out[10]_i_6_n_0 ),
        .I4(\crc_reg_out[12]_i_4_n_0 ),
        .I5(\prv_crc_cr0[10]_i_4_n_0 ),
        .O(\crc_reg_out[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[10]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(p_204_in),
        .I2(\prv_crc_cr0_reg[13]_0 ),
        .I3(p_1_in76_in),
        .I4(\crc_reg_out_reg[11]_0 ),
        .I5(\crc_reg_out_reg[14]_0 ),
        .O(\crc_reg_out[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[10]_i_5 
       (.I0(crc_blk_sel[3]),
        .I1(\prv_crc_cr0[10]_i_6_n_0 ),
        .I2(\crc_reg_out[10]_i_8_n_0 ),
        .I3(\prv_crc_cr0[5]_i_4_n_0 ),
        .I4(\prv_crc_cr0[10]_i_4_n_0 ),
        .I5(\prv_crc_cr0[10]_i_3_n_0 ),
        .O(\crc_reg_out[10]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \crc_reg_out[10]_i_6 
       (.I0(\prv_crc_cr0_reg[13]_1 ),
        .I1(prv_crc_cr0[10]),
        .I2(prv_crc_cr1[10]),
        .I3(c_en),
        .I4(Q[2]),
        .O(\crc_reg_out[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT5 #(
    .INIT(32'h353AC5CA)) 
    \crc_reg_out[10]_i_7 
       (.I0(prv_crc_cr1[3]),
        .I1(prv_crc_cr0[3]),
        .I2(c_en),
        .I3(prv_crc_cr1[2]),
        .I4(prv_crc_cr0[2]),
        .O(p_204_in));
  LUT6 #(
    .INIT(64'h569AA965A965569A)) 
    \crc_reg_out[10]_i_8 
       (.I0(\prv_crc_cr0[5]_i_7_n_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[14]),
        .I3(prv_crc_cr0[14]),
        .I4(\prv_crc_cr0_reg[5]_1 ),
        .I5(Q[10]),
        .O(\crc_reg_out[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEA0000)) 
    \crc_reg_out[11]_i_1 
       (.I0(\crc_reg_out[11]_i_2_n_0 ),
        .I1(crc_blk_sel[0]),
        .I2(nxt_crc_8bit0114_out__0),
        .I3(\crc_reg_out[11]_i_4_n_0 ),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBBEAAAAAAAA)) 
    \crc_reg_out[11]_i_2 
       (.I0(\crc_reg_out[11]_i_5_n_0 ),
        .I1(Q[3]),
        .I2(\prv_crc_cr0[1]_i_4_n_0 ),
        .I3(\prv_crc_cr0[5]_i_5_n_0 ),
        .I4(\crc_reg_out[12]_i_5_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[11]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \crc_reg_out[11]_i_3 
       (.I0(\crc_reg_out_reg[11]_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[3]),
        .I3(prv_crc_cr0[3]),
        .O(nxt_crc_8bit0114_out__0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'h8228)) 
    \crc_reg_out[11]_i_4 
       (.I0(crc_blk_sel[3]),
        .I1(\prv_crc_cr0[15]_i_4_n_0 ),
        .I2(\prv_crc_cr0[11]_i_2_n_0 ),
        .I3(\prv_crc_cr0[11]_i_3_n_0 ),
        .O(\crc_reg_out[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[11]_i_5 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[1]_i_4_n_0 ),
        .I2(nxt_crc_8bit0114_out__0),
        .I3(\prv_crc_cr0[11]_i_4_n_0 ),
        .I4(\prv_crc_cr0[12]_i_5_n_0 ),
        .O(\crc_reg_out[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[12]_i_1 
       (.I0(\crc_reg_out[12]_i_2_n_0 ),
        .I1(\crc_reg_out[12]_i_3_n_0 ),
        .I2(\prv_crc_cr0[12]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h60FFFF6060606060)) 
    \crc_reg_out[12]_i_2 
       (.I0(\crc_reg_out[12]_i_4_n_0 ),
        .I1(\crc_reg_out[12]_i_5_n_0 ),
        .I2(crc_blk_sel[1]),
        .I3(\prv_crc_cr0[12]_i_3_n_0 ),
        .I4(\prv_crc_cr0[4]_i_3_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[12]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(\crc_reg_out[12]_i_6_n_0 ),
        .I2(p_15_in),
        .I3(\crc_reg_out_reg[12]_0 ),
        .I4(\prv_crc_cr0_reg[5]_0 ),
        .O(\crc_reg_out[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h569AA965A965569A)) 
    \crc_reg_out[12]_i_4 
       (.I0(\prv_crc_cr0[15]_i_8_n_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[12]),
        .I3(prv_crc_cr0[12]),
        .I4(\prv_crc_cr0_reg[15]_2 ),
        .I5(\prv_crc_cr0[11]_i_5_n_0 ),
        .O(\crc_reg_out[12]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'h96969966)) 
    \crc_reg_out[12]_i_5 
       (.I0(\prv_crc_cr0[11]_i_6_n_0 ),
        .I1(\prv_crc_cr0_reg[5]_0 ),
        .I2(prv_crc_cr0[0]),
        .I3(prv_crc_cr1[0]),
        .I4(c_en),
        .O(\crc_reg_out[12]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[12]_i_6 
       (.I0(prv_crc_cr0[0]),
        .I1(prv_crc_cr1[0]),
        .I2(c_en),
        .O(\crc_reg_out[12]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[12]_i_7 
       (.I0(prv_crc_cr0[4]),
        .I1(prv_crc_cr1[4]),
        .I2(c_en),
        .O(p_15_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[13]_i_1 
       (.I0(\crc_reg_out[13]_i_2_n_0 ),
        .I1(\crc_reg_out[13]_i_3_n_0 ),
        .I2(\crc_reg_out[13]_i_4_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h60FFFF6060606060)) 
    \crc_reg_out[13]_i_2 
       (.I0(\prv_crc_cr0[8]_i_3_n_0 ),
        .I1(\prv_crc_cr0[13]_i_7_n_0 ),
        .I2(crc_blk_sel[1]),
        .I3(\crc_reg_out[13]_i_5_n_0 ),
        .I4(\crc_reg_out[13]_i_6_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[13]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(p_26_in82_in),
        .I2(\crc_reg_out_reg[4]_0 ),
        .I3(\crc_reg_out_reg[13]_0 ),
        .I4(p_17_in103_in),
        .O(\crc_reg_out[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[13]_i_4 
       (.I0(\prv_crc_cr0[13]_i_6_n_0 ),
        .I1(\prv_crc_cr0[13]_i_5_n_0 ),
        .I2(\prv_crc_cr0[13]_i_4_n_0 ),
        .I3(\prv_crc_cr0[13]_i_3_n_0 ),
        .I4(Q[13]),
        .I5(Q[9]),
        .O(\crc_reg_out[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6969669996969966)) 
    \crc_reg_out[13]_i_5 
       (.I0(\prv_crc_cr0[13]_i_7_n_0 ),
        .I1(\prv_crc_cr0[8]_i_4_n_0 ),
        .I2(prv_crc_cr0[13]),
        .I3(prv_crc_cr1[13]),
        .I4(c_en),
        .I5(\crc_reg_out[1]_i_2_0 ),
        .O(\crc_reg_out[13]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg_out[13]_i_6 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(p_26_in82_in),
        .I3(\crc_reg_out_reg[4]_0 ),
        .I4(\prv_crc_cr0[15]_i_3_n_0 ),
        .O(\crc_reg_out[13]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[13]_i_7 
       (.I0(prv_crc_cr0[1]),
        .I1(prv_crc_cr1[1]),
        .I2(c_en),
        .O(p_26_in82_in));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[13]_i_8 
       (.I0(prv_crc_cr0[5]),
        .I1(prv_crc_cr1[5]),
        .I2(c_en),
        .O(p_17_in103_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[14]_i_1 
       (.I0(\crc_reg_out[14]_i_2_n_0 ),
        .I1(\crc_reg_out[14]_i_3_n_0 ),
        .I2(\prv_crc_cr0[14]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h60FFFF6060606060)) 
    \crc_reg_out[14]_i_2 
       (.I0(\prv_crc_cr0[5]_i_3_n_0 ),
        .I1(nxt_crc_8bit0114_out__0),
        .I2(crc_blk_sel[1]),
        .I3(\prv_crc_cr0[6]_i_3_n_0 ),
        .I4(\crc_reg_out[14]_i_4_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[14]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(p_27_in),
        .I2(\crc_reg_out_reg[14]_0 ),
        .I3(\crc_reg_out_reg[14]_1 ),
        .I4(p_20_in107_in),
        .O(\crc_reg_out[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6969699696699696)) 
    \crc_reg_out[14]_i_4 
       (.I0(\prv_crc_cr0[5]_i_4_n_0 ),
        .I1(nxt_crc_8bit0114_out__0),
        .I2(\prv_crc_cr0_reg[15]_1 ),
        .I3(c_en),
        .I4(prv_crc_cr1[11]),
        .I5(prv_crc_cr0[11]),
        .O(\crc_reg_out[14]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[14]_i_5 
       (.I0(prv_crc_cr0[2]),
        .I1(prv_crc_cr1[2]),
        .I2(c_en),
        .O(p_27_in));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[14]_i_6 
       (.I0(prv_crc_cr0[6]),
        .I1(prv_crc_cr1[6]),
        .I2(c_en),
        .O(p_20_in107_in));
  LUT2 #(
    .INIT(4'hE)) 
    \crc_reg_out[15]_i_1 
       (.I0(c_en),
        .I1(rstart),
        .O(\crc_reg_out[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[15]_i_2 
       (.I0(\crc_reg_out[15]_i_3_n_0 ),
        .I1(\crc_reg_out[15]_i_4_n_0 ),
        .I2(\crc_reg_out[15]_i_5_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h60FFFF6060606060)) 
    \crc_reg_out[15]_i_3 
       (.I0(\prv_crc_cr0[10]_i_4_n_0 ),
        .I1(\prv_crc_cr0[15]_i_8_n_0 ),
        .I2(crc_blk_sel[1]),
        .I3(\crc_reg_out[15]_i_6_n_0 ),
        .I4(\crc_reg_out[15]_i_7_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[15]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(\prv_crc_cr0_reg[13]_0 ),
        .I2(p_0_in75_in),
        .I3(p_1_in76_in),
        .I4(\crc_reg_out_reg[11]_0 ),
        .O(\crc_reg_out[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg_out[15]_i_5 
       (.I0(\prv_crc_cr0[15]_i_6_n_0 ),
        .I1(\prv_crc_cr0[15]_i_5_n_0 ),
        .I2(\prv_crc_cr0[15]_i_4_n_0 ),
        .I3(\prv_crc_cr0[15]_i_3_n_0 ),
        .I4(Q[15]),
        .O(\crc_reg_out[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969669996969966)) 
    \crc_reg_out[15]_i_6 
       (.I0(nxt_crc_8bit0114_out__0),
        .I1(\prv_crc_cr0[1]_i_4_n_0 ),
        .I2(prv_crc_cr0[15]),
        .I3(prv_crc_cr1[15]),
        .I4(c_en),
        .I5(\prv_crc_cr0_reg[2]_0 ),
        .O(\crc_reg_out[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[15]_i_7 
       (.I0(p_26_in82_in),
        .I1(\crc_reg_out_reg[4]_0 ),
        .I2(\prv_crc_cr0[2]_i_3_n_0 ),
        .I3(\prv_crc_cr0[15]_i_8_n_0 ),
        .I4(Q[7]),
        .I5(Q[3]),
        .O(\crc_reg_out[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[15]_i_8 
       (.I0(prv_crc_cr0[3]),
        .I1(prv_crc_cr1[3]),
        .I2(c_en),
        .O(p_0_in75_in));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[15]_i_9 
       (.I0(prv_crc_cr0[7]),
        .I1(prv_crc_cr1[7]),
        .I2(c_en),
        .O(p_1_in76_in));
  LUT5 #(
    .INIT(32'hFFFFEA00)) 
    \crc_reg_out[1]_i_1 
       (.I0(\crc_reg_out[1]_i_2_n_0 ),
        .I1(\crc_reg_out[1]_i_3_n_0 ),
        .I2(crc_blk_sel[3]),
        .I3(crc_reg_out_n_0),
        .I4(rstart),
        .O(\crc_reg_out[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAAEAEEA)) 
    \crc_reg_out[1]_i_2 
       (.I0(\crc_reg_out[1]_i_4_n_0 ),
        .I1(crc_blk_sel[2]),
        .I2(\prv_crc_cr0[13]_i_3_n_0 ),
        .I3(\prv_crc_cr0[10]_i_5_n_0 ),
        .I4(\prv_crc_cr0[9]_i_3_n_0 ),
        .I5(\crc_reg_out[1]_i_5_n_0 ),
        .O(\crc_reg_out[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[1]_i_3 
       (.I0(Q[13]),
        .I1(Q[9]),
        .I2(\prv_crc_cr0[1]_i_3_n_0 ),
        .I3(\crc_reg_out[1]_i_6_n_0 ),
        .I4(\prv_crc_cr0[9]_i_3_n_0 ),
        .I5(\prv_crc_cr0[10]_i_5_n_0 ),
        .O(\crc_reg_out[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[1]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(\crc_reg_out_reg[4]_0 ),
        .I2(\crc_reg_out_reg[13]_0 ),
        .I3(p_17_in103_in),
        .I4(p_0_in160_in),
        .I5(p_26_in82_in),
        .O(\crc_reg_out[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[1]_i_5 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[5]_i_6_n_0 ),
        .I2(\prv_crc_cr0[15]_i_7_n_0 ),
        .I3(\prv_crc_cr0[15]_i_3_n_0 ),
        .I4(\prv_crc_cr0[5]_i_7_n_0 ),
        .O(\crc_reg_out[1]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg_out[1]_i_6 
       (.I0(p_26_in82_in),
        .I1(\crc_reg_out_reg[4]_0 ),
        .I2(\prv_crc_cr0[1]_i_4_n_0 ),
        .I3(Q[6]),
        .I4(Q[5]),
        .O(\crc_reg_out[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \crc_reg_out[1]_i_7 
       (.I0(prv_crc_cr0[9]),
        .I1(prv_crc_cr1[9]),
        .I2(c_en),
        .O(p_0_in160_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[2]_i_1 
       (.I0(\crc_reg_out[2]_i_2_n_0 ),
        .I1(\crc_reg_out[2]_i_3_n_0 ),
        .I2(\crc_reg_out[2]_i_4_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBBEAAAAAAAA)) 
    \crc_reg_out[2]_i_2 
       (.I0(\crc_reg_out[2]_i_5_n_0 ),
        .I1(\prv_crc_cr0[15]_i_8_n_0 ),
        .I2(\prv_crc_cr0[10]_i_5_n_0 ),
        .I3(\prv_crc_cr0[5]_i_5_n_0 ),
        .I4(\prv_crc_cr0[5]_i_4_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8282822828822828)) 
    \crc_reg_out[2]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(\crc_reg_out[2]_i_6_n_0 ),
        .I2(p_20_in107_in),
        .I3(c_en),
        .I4(prv_crc_cr1[10]),
        .I5(prv_crc_cr0[10]),
        .O(\crc_reg_out[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg_out[2]_i_4 
       (.I0(\prv_crc_cr0[11]_i_2_n_0 ),
        .I1(Q[14]),
        .I2(Q[10]),
        .I3(\prv_crc_cr0[2]_i_2_n_0 ),
        .O(\crc_reg_out[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[2]_i_5 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0_reg[5]_1 ),
        .I2(p_13_in97_in),
        .I3(\prv_crc_cr0[5]_i_7_n_0 ),
        .I4(\prv_crc_cr0[11]_i_4_n_0 ),
        .I5(\prv_crc_cr0[8]_i_4_n_0 ),
        .O(\crc_reg_out[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT5 #(
    .INIT(32'hE41B1BE4)) 
    \crc_reg_out[2]_i_6 
       (.I0(c_en),
        .I1(prv_crc_cr1[2]),
        .I2(prv_crc_cr0[2]),
        .I3(\crc_reg_out_reg[14]_0 ),
        .I4(\crc_reg_out_reg[14]_1 ),
        .O(\crc_reg_out[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[3]_i_1 
       (.I0(\crc_reg_out[3]_i_2_n_0 ),
        .I1(\crc_reg_out[3]_i_3_n_0 ),
        .I2(\prv_crc_cr0[3]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF88F8FF888888888)) 
    \crc_reg_out[3]_i_2 
       (.I0(p_317_in),
        .I1(crc_blk_sel[1]),
        .I2(\crc_reg_out[3]_i_5_n_0 ),
        .I3(\prv_crc_cr0[11]_i_2_n_0 ),
        .I4(\prv_crc_cr0[11]_i_3_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8282822828822828)) 
    \crc_reg_out[3]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(\prv_crc_cr0[1]_i_3_n_0 ),
        .I2(nxt_crc_8bit0114_out__0),
        .I3(c_en),
        .I4(prv_crc_cr1[11]),
        .I5(prv_crc_cr0[11]),
        .O(\crc_reg_out[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[3]_i_4 
       (.I0(\prv_crc_cr0[1]_i_4_n_0 ),
        .I1(p_16_in100_in),
        .I2(\prv_crc_cr0_reg[2]_0 ),
        .I3(\prv_crc_cr0[11]_i_4_n_0 ),
        .I4(\prv_crc_cr0[12]_i_5_n_0 ),
        .I5(\prv_crc_cr0[11]_i_6_n_0 ),
        .O(p_317_in));
  LUT6 #(
    .INIT(64'h6969669996969966)) 
    \crc_reg_out[3]_i_5 
       (.I0(Q[7]),
        .I1(Q[3]),
        .I2(prv_crc_cr0[5]),
        .I3(prv_crc_cr1[5]),
        .I4(c_en),
        .I5(\crc_reg_out_reg[13]_0 ),
        .O(\crc_reg_out[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[4]_i_1 
       (.I0(\crc_reg_out[4]_i_2_n_0 ),
        .I1(\crc_reg_out[4]_i_3_n_0 ),
        .I2(\prv_crc_cr0[4]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBEEBEBBEAAAAAAAA)) 
    \crc_reg_out[4]_i_2 
       (.I0(\crc_reg_out[4]_i_4_n_0 ),
        .I1(\crc_reg_out[4]_i_5_n_0 ),
        .I2(\prv_crc_cr0[8]_i_3_n_0 ),
        .I3(\crc_reg_out[12]_i_5_n_0 ),
        .I4(\crc_reg_out[8]_i_6_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8882282222288288)) 
    \crc_reg_out[4]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(p_26_in82_in),
        .I2(c_en),
        .I3(prv_crc_cr1[12]),
        .I4(prv_crc_cr0[12]),
        .I5(\crc_reg_out_reg[4]_0 ),
        .O(\crc_reg_out[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[4]_i_4 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[11]_i_5_n_0 ),
        .I2(\prv_crc_cr0[15]_i_3_n_0 ),
        .I3(\prv_crc_cr0[15]_i_8_n_0 ),
        .I4(\prv_crc_cr0[15]_i_7_n_0 ),
        .I5(\prv_crc_cr0[12]_i_5_n_0 ),
        .O(\crc_reg_out[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT5 #(
    .INIT(32'hAC5353AC)) 
    \crc_reg_out[4]_i_5 
       (.I0(prv_crc_cr0[6]),
        .I1(prv_crc_cr1[6]),
        .I2(c_en),
        .I3(\crc_reg_out_reg[14]_1 ),
        .I4(Q[1]),
        .O(\crc_reg_out[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[5]_i_1 
       (.I0(\crc_reg_out[5]_i_2_n_0 ),
        .I1(\crc_reg_out[5]_i_3_n_0 ),
        .I2(\crc_reg_out[5]_i_4_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF88F8FF888888888)) 
    \crc_reg_out[5]_i_2 
       (.I0(p_301_in),
        .I1(crc_blk_sel[1]),
        .I2(\prv_crc_cr0[8]_i_3_n_0 ),
        .I3(\prv_crc_cr0[13]_i_4_n_0 ),
        .I4(\prv_crc_cr0[5]_i_3_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h28282288)) 
    \crc_reg_out[5]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(\prv_crc_cr0[13]_i_7_n_0 ),
        .I2(prv_crc_cr0[13]),
        .I3(prv_crc_cr1[13]),
        .I4(c_en),
        .O(\crc_reg_out[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[5]_i_4 
       (.I0(\prv_crc_cr0[5]_i_4_n_0 ),
        .I1(\prv_crc_cr0[5]_i_3_n_0 ),
        .I2(\prv_crc_cr0[5]_i_6_n_0 ),
        .I3(\prv_crc_cr0[5]_i_5_n_0 ),
        .I4(\crc_reg_out[5]_i_6_n_0 ),
        .I5(\crc_reg_out[13]_i_6_n_0 ),
        .O(\crc_reg_out[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[5]_i_5 
       (.I0(p_26_in82_in),
        .I1(\crc_reg_out_reg[4]_0 ),
        .I2(\prv_crc_cr0[15]_i_7_n_0 ),
        .I3(\prv_crc_cr0[5]_i_7_n_0 ),
        .I4(\prv_crc_cr0[8]_i_4_n_0 ),
        .I5(\prv_crc_cr0[13]_i_7_n_0 ),
        .O(p_301_in));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \crc_reg_out[5]_i_6 
       (.I0(\crc_reg_out_reg[12]_0 ),
        .I1(prv_crc_cr0[4]),
        .I2(prv_crc_cr1[4]),
        .I3(c_en),
        .I4(Q[10]),
        .O(\crc_reg_out[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEE0000)) 
    \crc_reg_out[6]_i_1 
       (.I0(\crc_reg_out[6]_i_2_n_0 ),
        .I1(\crc_reg_out[6]_i_3_n_0 ),
        .I2(\prv_crc_cr0[6]_i_2_n_0 ),
        .I3(crc_blk_sel[3]),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF88F8FF888888888)) 
    \crc_reg_out[6]_i_2 
       (.I0(p_310_in),
        .I1(crc_blk_sel[1]),
        .I2(\crc_reg_out[6]_i_5_n_0 ),
        .I3(\prv_crc_cr0[10]_i_4_n_0 ),
        .I4(\prv_crc_cr0[5]_i_3_n_0 ),
        .I5(crc_blk_sel[2]),
        .O(\crc_reg_out[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT5 #(
    .INIT(32'h28282288)) 
    \crc_reg_out[6]_i_3 
       (.I0(crc_blk_sel[0]),
        .I1(nxt_crc_8bit0114_out__0),
        .I2(prv_crc_cr0[14]),
        .I3(prv_crc_cr1[14]),
        .I4(c_en),
        .O(\crc_reg_out[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[6]_i_4 
       (.I0(\prv_crc_cr0[1]_i_4_n_0 ),
        .I1(nxt_crc_8bit0114_out__0),
        .I2(\prv_crc_cr0[11]_i_4_n_0 ),
        .I3(\prv_crc_cr0[12]_i_5_n_0 ),
        .I4(\prv_crc_cr0[13]_i_7_n_0 ),
        .I5(\prv_crc_cr0[5]_i_7_n_0 ),
        .O(p_310_in));
  LUT6 #(
    .INIT(64'h1BE4E41BE41B1BE4)) 
    \crc_reg_out[6]_i_5 
       (.I0(c_en),
        .I1(prv_crc_cr1[0]),
        .I2(prv_crc_cr0[0]),
        .I3(\prv_crc_cr0_reg[5]_0 ),
        .I4(\prv_crc_cr0[11]_i_6_n_0 ),
        .I5(Q[3]),
        .O(\crc_reg_out[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \crc_reg_out[7]_i_1 
       (.I0(\crc_reg_out[7]_i_2_n_0 ),
        .I1(\crc_reg_out[7]_i_3_n_0 ),
        .I2(\crc_reg_out[7]_i_4_n_0 ),
        .I3(\crc_reg_out[7]_i_5_n_0 ),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[7]_i_2 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[11]_i_5_n_0 ),
        .I2(\crc_reg_out[8]_i_6_n_0 ),
        .I3(\crc_reg_out[12]_i_5_n_0 ),
        .I4(nxt_crc_8bit0114_out__0),
        .I5(\prv_crc_cr0[11]_i_4_n_0 ),
        .O(\crc_reg_out[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8228)) 
    \crc_reg_out[7]_i_3 
       (.I0(crc_blk_sel[2]),
        .I1(\prv_crc_cr0[12]_i_3_n_0 ),
        .I2(\prv_crc_cr0[15]_i_5_n_0 ),
        .I3(\prv_crc_cr0[10]_i_4_n_0 ),
        .O(\crc_reg_out[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28282288)) 
    \crc_reg_out[7]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(nxt_crc_8bit),
        .I2(prv_crc_cr0[15]),
        .I3(prv_crc_cr1[15]),
        .I4(c_en),
        .O(\crc_reg_out[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[7]_i_5 
       (.I0(crc_blk_sel[3]),
        .I1(\crc_reg_out[7]_i_7_n_0 ),
        .I2(\prv_crc_cr0[12]_i_4_n_0 ),
        .I3(\prv_crc_cr0[7]_i_4_n_0 ),
        .I4(\prv_crc_cr0[11]_i_3_n_0 ),
        .I5(\prv_crc_cr0[7]_i_3_n_0 ),
        .O(\crc_reg_out[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969669996969966)) 
    \crc_reg_out[7]_i_6 
       (.I0(\prv_crc_cr0_reg[5]_0 ),
        .I1(\crc_reg_out_reg[12]_0 ),
        .I2(prv_crc_cr0[4]),
        .I3(prv_crc_cr1[4]),
        .I4(c_en),
        .I5(\crc_reg_out[12]_i_6_n_0 ),
        .O(nxt_crc_8bit));
  LUT5 #(
    .INIT(32'h96696996)) 
    \crc_reg_out[7]_i_7 
       (.I0(Q[4]),
        .I1(\prv_crc_cr0[2]_i_3_n_0 ),
        .I2(\prv_crc_cr0[15]_i_8_n_0 ),
        .I3(Q[8]),
        .I4(Q[12]),
        .O(\crc_reg_out[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \crc_reg_out[8]_i_1 
       (.I0(\crc_reg_out[8]_i_2_n_0 ),
        .I1(\crc_reg_out[8]_i_3_n_0 ),
        .I2(\crc_reg_out[8]_i_4_n_0 ),
        .I3(\crc_reg_out[8]_i_5_n_0 ),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \crc_reg_out[8]_i_10 
       (.I0(Q[0]),
        .I1(Q[8]),
        .O(\crc_reg_out[8]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[8]_i_2 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[8]_i_3_n_0 ),
        .I2(\crc_reg_out[12]_i_5_n_0 ),
        .I3(\prv_crc_cr0[15]_i_8_n_0 ),
        .I4(\prv_crc_cr0[13]_i_7_n_0 ),
        .O(\crc_reg_out[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[8]_i_3 
       (.I0(crc_blk_sel[2]),
        .I1(\prv_crc_cr0[13]_i_5_n_0 ),
        .I2(\crc_reg_out[8]_i_6_n_0 ),
        .I3(\crc_reg_out[8]_i_7_n_0 ),
        .I4(\prv_crc_cr0[8]_i_3_n_0 ),
        .I5(\prv_crc_cr0[9]_i_4_n_0 ),
        .O(\crc_reg_out[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[8]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(p_17_in103_in),
        .I2(\prv_crc_cr0_reg[5]_0 ),
        .I3(\crc_reg_out_reg[4]_0 ),
        .I4(\crc_reg_out[8]_i_8_n_0 ),
        .O(\crc_reg_out[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[8]_i_5 
       (.I0(crc_blk_sel[3]),
        .I1(\prv_crc_cr0[15]_i_5_n_0 ),
        .I2(\prv_crc_cr0[13]_i_3_n_0 ),
        .I3(\crc_reg_out[8]_i_9_n_0 ),
        .I4(\prv_crc_cr0[13]_i_2_n_0 ),
        .I5(\prv_crc_cr0[13]_i_4_n_0 ),
        .O(\crc_reg_out[8]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \crc_reg_out[8]_i_6 
       (.I0(\prv_crc_cr0_reg[15]_2 ),
        .I1(prv_crc_cr0[12]),
        .I2(prv_crc_cr1[12]),
        .I3(c_en),
        .I4(\prv_crc_cr0[15]_i_8_n_0 ),
        .O(\crc_reg_out[8]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \crc_reg_out[8]_i_7 
       (.I0(\crc_reg_out[8]_i_3_0 ),
        .I1(prv_crc_cr0[8]),
        .I2(prv_crc_cr1[8]),
        .I3(c_en),
        .I4(Q[0]),
        .O(\crc_reg_out[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAC5CA35353A35CAC)) 
    \crc_reg_out[8]_i_8 
       (.I0(prv_crc_cr0[1]),
        .I1(prv_crc_cr1[1]),
        .I2(c_en),
        .I3(prv_crc_cr0[0]),
        .I4(prv_crc_cr1[0]),
        .I5(\crc_reg_out_reg[13]_0 ),
        .O(\crc_reg_out[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \crc_reg_out[8]_i_9 
       (.I0(\prv_crc_cr0[8]_i_4_n_0 ),
        .I1(\prv_crc_cr0[15]_i_7_n_0 ),
        .I2(\prv_crc_cr0[5]_i_6_n_0 ),
        .I3(\prv_crc_cr0[11]_i_5_n_0 ),
        .I4(\prv_crc_cr0[15]_i_3_n_0 ),
        .I5(\crc_reg_out[8]_i_10_n_0 ),
        .O(\crc_reg_out[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFE0000)) 
    \crc_reg_out[9]_i_1 
       (.I0(\crc_reg_out[9]_i_2_n_0 ),
        .I1(\crc_reg_out[9]_i_3_n_0 ),
        .I2(\crc_reg_out[9]_i_4_n_0 ),
        .I3(\crc_reg_out[9]_i_5_n_0 ),
        .I4(crc_reg_out_n_0),
        .I5(rstart),
        .O(\crc_reg_out[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h28828228)) 
    \crc_reg_out[9]_i_2 
       (.I0(crc_blk_sel[1]),
        .I1(\prv_crc_cr0[5]_i_3_n_0 ),
        .I2(\prv_crc_cr0[13]_i_6_n_0 ),
        .I3(\prv_crc_cr0[15]_i_7_n_0 ),
        .I4(nxt_crc_8bit0114_out__0),
        .O(\crc_reg_out[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[9]_i_3 
       (.I0(crc_blk_sel[2]),
        .I1(\prv_crc_cr0[15]_i_6_n_0 ),
        .I2(\prv_crc_cr0[9]_i_3_n_0 ),
        .I3(\crc_reg_out[9]_i_6_n_0 ),
        .I4(\prv_crc_cr0[5]_i_4_n_0 ),
        .I5(\prv_crc_cr0[5]_i_3_n_0 ),
        .O(\crc_reg_out[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8882282222288288)) 
    \crc_reg_out[9]_i_4 
       (.I0(crc_blk_sel[0]),
        .I1(\crc_reg_out[9]_i_7_n_0 ),
        .I2(c_en),
        .I3(prv_crc_cr1[2]),
        .I4(prv_crc_cr0[2]),
        .I5(p_26_in82_in),
        .O(\crc_reg_out[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8228288228828228)) 
    \crc_reg_out[9]_i_5 
       (.I0(crc_blk_sel[3]),
        .I1(\prv_crc_cr0[5]_i_3_n_0 ),
        .I2(\prv_crc_cr0[14]_i_3_n_0 ),
        .I3(\prv_crc_cr0[14]_i_4_n_0 ),
        .I4(\prv_crc_cr0[9]_i_5_n_0 ),
        .I5(\crc_reg_out[9]_i_8_n_0 ),
        .O(\crc_reg_out[9]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \crc_reg_out[9]_i_6 
       (.I0(\prv_crc_cr0_reg[15]_0 ),
        .I1(prv_crc_cr0[9]),
        .I2(prv_crc_cr1[9]),
        .I3(c_en),
        .I4(Q[1]),
        .O(\crc_reg_out[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6996699669699696)) 
    \crc_reg_out[9]_i_7 
       (.I0(\crc_reg_out_reg[4]_0 ),
        .I1(\crc_reg_out_reg[14]_0 ),
        .I2(\crc_reg_out_reg[14]_1 ),
        .I3(prv_crc_cr0[6]),
        .I4(prv_crc_cr1[6]),
        .I5(c_en),
        .O(\crc_reg_out[9]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \crc_reg_out[9]_i_8 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(\prv_crc_cr0[15]_i_7_n_0 ),
        .I3(\prv_crc_cr0[5]_i_6_n_0 ),
        .O(\crc_reg_out[9]_i_8_n_0 ));
  FDRE \crc_reg_out_reg[0] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[0]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[0] ),
        .R(SR));
  FDRE \crc_reg_out_reg[10] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[10]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[10] ),
        .R(SR));
  FDRE \crc_reg_out_reg[11] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[11]_i_1_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [1]),
        .R(SR));
  FDRE \crc_reg_out_reg[12] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[12]_i_1_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [2]),
        .R(SR));
  FDRE \crc_reg_out_reg[13] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[13]_i_1_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [3]),
        .R(SR));
  FDRE \crc_reg_out_reg[14] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[14]_i_1_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [4]),
        .R(SR));
  FDRE \crc_reg_out_reg[15] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[15]_i_2_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [5]),
        .R(SR));
  FDRE \crc_reg_out_reg[1] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[1]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[1] ),
        .R(SR));
  FDRE \crc_reg_out_reg[2] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[2]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[2] ),
        .R(SR));
  FDRE \crc_reg_out_reg[3] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[3]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[3] ),
        .R(SR));
  FDRE \crc_reg_out_reg[4] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[4]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[4] ),
        .R(SR));
  FDRE \crc_reg_out_reg[5] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[5]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[5] ),
        .R(SR));
  FDRE \crc_reg_out_reg[6] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[6]_i_1_n_0 ),
        .Q(\crc_reg_out_reg[15]_0 [0]),
        .R(SR));
  FDRE \crc_reg_out_reg[7] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[7]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[7] ),
        .R(SR));
  FDRE \crc_reg_out_reg[8] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[8]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[8] ),
        .R(SR));
  FDRE \crc_reg_out_reg[9] 
       (.C(m_axis_aclk),
        .CE(\crc_reg_out[15]_i_1_n_0 ),
        .D(\crc_reg_out[9]_i_1_n_0 ),
        .Q(\crc_reg_out_reg_n_0_[9] ),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    crcdone_i_1
       (.I0(crc_start_d1),
        .I1(m_axis_aresetn),
        .I2(rstart),
        .O(crcdone_i_1_n_0));
  FDRE crcdone_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crcdone_i_1_n_0),
        .Q(crcdone_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[0]_i_1 
       (.I0(\prv_crc_cr0[0]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[0]_i_2 
       (.I0(Q[8]),
        .I1(Q[12]),
        .I2(\prv_crc_cr0[0]_i_3_n_0 ),
        .I3(\prv_crc_cr0[15]_i_5_n_0 ),
        .I4(\prv_crc_cr0[9]_i_3_n_0 ),
        .O(\prv_crc_cr0[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \prv_crc_cr0[0]_i_3 
       (.I0(\prv_crc_cr0[5]_i_7_n_0 ),
        .I1(\prv_crc_cr0[8]_i_4_n_0 ),
        .I2(Q[5]),
        .I3(\prv_crc_cr0[12]_i_5_n_0 ),
        .O(\prv_crc_cr0[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[10]_i_1 
       (.I0(\prv_crc_cr0[10]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[10]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[10]_i_2 
       (.I0(\prv_crc_cr0[10]_i_3_n_0 ),
        .I1(\prv_crc_cr0[10]_i_4_n_0 ),
        .I2(\prv_crc_cr0[5]_i_4_n_0 ),
        .I3(Q[10]),
        .I4(\prv_crc_cr0[10]_i_5_n_0 ),
        .I5(\prv_crc_cr0[10]_i_6_n_0 ),
        .O(\prv_crc_cr0[10]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \prv_crc_cr0[10]_i_3 
       (.I0(\prv_crc_cr0_reg[15]_0 ),
        .I1(prv_crc_cr0[9]),
        .I2(prv_crc_cr1[9]),
        .I3(c_en),
        .I4(Q[15]),
        .O(\prv_crc_cr0[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[10]_i_4 
       (.I0(\prv_crc_cr0[11]_i_4_n_0 ),
        .I1(\prv_crc_cr0_reg[2]_0 ),
        .I2(p_16_in100_in),
        .I3(nxt_crc_8bit0114_out__0),
        .I4(\prv_crc_cr0[1]_i_4_n_0 ),
        .O(\prv_crc_cr0[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \prv_crc_cr0[10]_i_5 
       (.I0(\prv_crc_cr0_reg[5]_1 ),
        .I1(prv_crc_cr0[14]),
        .I2(prv_crc_cr1[14]),
        .I3(c_en),
        .I4(\prv_crc_cr0[5]_i_7_n_0 ),
        .O(\prv_crc_cr0[10]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[10]_i_6 
       (.I0(\prv_crc_cr0[4]_i_3_n_0 ),
        .I1(Q[11]),
        .I2(Q[7]),
        .I3(Q[3]),
        .I4(\prv_crc_cr0[15]_i_7_n_0 ),
        .O(\prv_crc_cr0[10]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \prv_crc_cr0[10]_i_7 
       (.I0(prv_crc_cr0[15]),
        .I1(prv_crc_cr1[15]),
        .I2(c_en),
        .O(p_16_in100_in));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT4 #(
    .INIT(16'hFF96)) 
    \prv_crc_cr0[11]_i_1 
       (.I0(\prv_crc_cr0[15]_i_4_n_0 ),
        .I1(\prv_crc_cr0[11]_i_2_n_0 ),
        .I2(\prv_crc_cr0[11]_i_3_n_0 ),
        .I3(rstart),
        .O(p_1_in[11]));
  LUT6 #(
    .INIT(64'h6669969999966966)) 
    \prv_crc_cr0[11]_i_2 
       (.I0(\prv_crc_cr0[11]_i_4_n_0 ),
        .I1(\prv_crc_cr0_reg[2]_0 ),
        .I2(c_en),
        .I3(prv_crc_cr1[15]),
        .I4(prv_crc_cr0[15]),
        .I5(\prv_crc_cr0[11]_i_5_n_0 ),
        .O(\prv_crc_cr0[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1BE4E41BE41B1BE4)) 
    \prv_crc_cr0[11]_i_3 
       (.I0(c_en),
        .I1(prv_crc_cr1[0]),
        .I2(prv_crc_cr0[0]),
        .I3(\prv_crc_cr0_reg[5]_0 ),
        .I4(\prv_crc_cr0[11]_i_6_n_0 ),
        .I5(Q[0]),
        .O(\prv_crc_cr0[11]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[11]_i_4 
       (.I0(\prv_crc_cr0_reg[13]_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[7]),
        .I3(prv_crc_cr0[7]),
        .O(\prv_crc_cr0[11]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[11]_i_5 
       (.I0(c_en),
        .I1(prv_crc_cr1[1]),
        .I2(prv_crc_cr0[1]),
        .I3(\crc_reg_out_reg[4]_0 ),
        .O(\prv_crc_cr0[11]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[11]_i_6 
       (.I0(c_en),
        .I1(prv_crc_cr1[8]),
        .I2(prv_crc_cr0[8]),
        .I3(\crc_reg_out[8]_i_3_0 ),
        .O(\prv_crc_cr0[11]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[12]_i_1 
       (.I0(\prv_crc_cr0[12]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[12]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[12]_i_2 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(\prv_crc_cr0[12]_i_3_n_0 ),
        .I3(Q[12]),
        .I4(Q[8]),
        .I5(\prv_crc_cr0[12]_i_4_n_0 ),
        .O(\prv_crc_cr0[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[12]_i_3 
       (.I0(Q[0]),
        .I1(\prv_crc_cr0[11]_i_6_n_0 ),
        .I2(\prv_crc_cr0[12]_i_5_n_0 ),
        .I3(p_26_in82_in),
        .I4(\crc_reg_out_reg[4]_0 ),
        .I5(\prv_crc_cr0[15]_i_3_n_0 ),
        .O(\prv_crc_cr0[12]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \prv_crc_cr0[12]_i_4 
       (.I0(\prv_crc_cr0[5]_i_7_n_0 ),
        .I1(prv_crc_cr0[2]),
        .I2(prv_crc_cr1[2]),
        .I3(c_en),
        .I4(\crc_reg_out_reg[14]_0 ),
        .O(\prv_crc_cr0[12]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[12]_i_5 
       (.I0(c_en),
        .I1(prv_crc_cr1[0]),
        .I2(prv_crc_cr0[0]),
        .I3(\prv_crc_cr0_reg[5]_0 ),
        .O(\prv_crc_cr0[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF96696996)) 
    \prv_crc_cr0[13]_i_1 
       (.I0(\prv_crc_cr0[13]_i_2_n_0 ),
        .I1(\prv_crc_cr0[13]_i_3_n_0 ),
        .I2(\prv_crc_cr0[13]_i_4_n_0 ),
        .I3(\prv_crc_cr0[13]_i_5_n_0 ),
        .I4(\prv_crc_cr0[13]_i_6_n_0 ),
        .I5(rstart),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[13]_i_2 
       (.I0(Q[13]),
        .I1(Q[9]),
        .O(\prv_crc_cr0[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6969669996969966)) 
    \prv_crc_cr0[13]_i_3 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(prv_crc_cr0[3]),
        .I3(prv_crc_cr1[3]),
        .I4(c_en),
        .I5(\crc_reg_out_reg[11]_0 ),
        .O(\prv_crc_cr0[13]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT5 #(
    .INIT(32'hAC5353AC)) 
    \prv_crc_cr0[13]_i_4 
       (.I0(prv_crc_cr0[7]),
        .I1(prv_crc_cr1[7]),
        .I2(c_en),
        .I3(\prv_crc_cr0_reg[13]_0 ),
        .I4(Q[2]),
        .O(\prv_crc_cr0[13]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \prv_crc_cr0[13]_i_5 
       (.I0(\prv_crc_cr0_reg[13]_1 ),
        .I1(prv_crc_cr0[10]),
        .I2(prv_crc_cr1[10]),
        .I3(c_en),
        .I4(\prv_crc_cr0[13]_i_7_n_0 ),
        .O(\prv_crc_cr0[13]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT5 #(
    .INIT(32'h96969966)) 
    \prv_crc_cr0[13]_i_6 
       (.I0(\prv_crc_cr0[15]_i_3_n_0 ),
        .I1(\crc_reg_out_reg[4]_0 ),
        .I2(prv_crc_cr0[1]),
        .I3(prv_crc_cr1[1]),
        .I4(c_en),
        .O(\prv_crc_cr0[13]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[13]_i_7 
       (.I0(\crc_reg_out_reg[14]_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[2]),
        .I3(prv_crc_cr0[2]),
        .O(\prv_crc_cr0[13]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[14]_i_1 
       (.I0(\prv_crc_cr0[14]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[14]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[14]_i_2 
       (.I0(\prv_crc_cr0[14]_i_3_n_0 ),
        .I1(\prv_crc_cr0[14]_i_4_n_0 ),
        .I2(\prv_crc_cr0[15]_i_8_n_0 ),
        .I3(Q[3]),
        .I4(\prv_crc_cr0[15]_i_6_n_0 ),
        .I5(\prv_crc_cr0[13]_i_5_n_0 ),
        .O(\prv_crc_cr0[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[14]_i_3 
       (.I0(Q[14]),
        .I1(Q[10]),
        .O(\prv_crc_cr0[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996699669699696)) 
    \prv_crc_cr0[14]_i_4 
       (.I0(Q[6]),
        .I1(Q[2]),
        .I2(\crc_reg_out[8]_i_3_0 ),
        .I3(prv_crc_cr0[8]),
        .I4(prv_crc_cr1[8]),
        .I5(c_en),
        .O(\prv_crc_cr0[14]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[15]_i_1 
       (.I0(rstart),
        .I1(c_en),
        .O(\prv_crc_cr0[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF96696996)) 
    \prv_crc_cr0[15]_i_2 
       (.I0(Q[15]),
        .I1(\prv_crc_cr0[15]_i_3_n_0 ),
        .I2(\prv_crc_cr0[15]_i_4_n_0 ),
        .I3(\prv_crc_cr0[15]_i_5_n_0 ),
        .I4(\prv_crc_cr0[15]_i_6_n_0 ),
        .I5(rstart),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[15]_i_3 
       (.I0(c_en),
        .I1(prv_crc_cr1[9]),
        .I2(prv_crc_cr0[9]),
        .I3(\prv_crc_cr0_reg[15]_0 ),
        .O(\prv_crc_cr0[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \prv_crc_cr0[15]_i_4 
       (.I0(\prv_crc_cr0[15]_i_7_n_0 ),
        .I1(Q[3]),
        .I2(Q[7]),
        .I3(Q[11]),
        .O(\prv_crc_cr0[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h569AA965A965569A)) 
    \prv_crc_cr0[15]_i_5 
       (.I0(\prv_crc_cr0[15]_i_8_n_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[12]),
        .I3(prv_crc_cr0[12]),
        .I4(\prv_crc_cr0_reg[15]_2 ),
        .I5(Q[4]),
        .O(\prv_crc_cr0[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'hAC5353AC)) 
    \prv_crc_cr0[15]_i_6 
       (.I0(prv_crc_cr0[11]),
        .I1(prv_crc_cr1[11]),
        .I2(c_en),
        .I3(\prv_crc_cr0_reg[15]_1 ),
        .I4(nxt_crc_8bit0114_out__0),
        .O(\prv_crc_cr0[15]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[15]_i_7 
       (.I0(\crc_reg_out_reg[13]_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[5]),
        .I3(prv_crc_cr0[5]),
        .O(\prv_crc_cr0[15]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[15]_i_8 
       (.I0(c_en),
        .I1(prv_crc_cr1[4]),
        .I2(prv_crc_cr0[4]),
        .I3(\crc_reg_out_reg[12]_0 ),
        .O(\prv_crc_cr0[15]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF6996)) 
    \prv_crc_cr0[1]_i_1 
       (.I0(\prv_crc_cr0[1]_i_2_n_0 ),
        .I1(\prv_crc_cr0[1]_i_3_n_0 ),
        .I2(Q[9]),
        .I3(Q[13]),
        .I4(rstart),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[1]_i_2 
       (.I0(\prv_crc_cr0[10]_i_5_n_0 ),
        .I1(\prv_crc_cr0[9]_i_3_n_0 ),
        .I2(Q[5]),
        .I3(Q[6]),
        .I4(\prv_crc_cr0[1]_i_4_n_0 ),
        .I5(\prv_crc_cr0[11]_i_5_n_0 ),
        .O(\prv_crc_cr0[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h96969966)) 
    \prv_crc_cr0[1]_i_3 
       (.I0(\prv_crc_cr0[11]_i_4_n_0 ),
        .I1(\prv_crc_cr0_reg[5]_0 ),
        .I2(prv_crc_cr0[0]),
        .I3(prv_crc_cr1[0]),
        .I4(c_en),
        .O(\prv_crc_cr0[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[1]_i_4 
       (.I0(\prv_crc_cr0_reg[15]_1 ),
        .I1(c_en),
        .I2(prv_crc_cr1[11]),
        .I3(prv_crc_cr0[11]),
        .O(\prv_crc_cr0[1]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT5 #(
    .INIT(32'hFFFF6996)) 
    \prv_crc_cr0[2]_i_1 
       (.I0(\prv_crc_cr0[2]_i_2_n_0 ),
        .I1(Q[10]),
        .I2(Q[14]),
        .I3(\prv_crc_cr0[11]_i_2_n_0 ),
        .I4(rstart),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[2]_i_2 
       (.I0(\prv_crc_cr0[2]_i_3_n_0 ),
        .I1(\prv_crc_cr0[2]_i_4_n_0 ),
        .I2(\prv_crc_cr0[5]_i_7_n_0 ),
        .I3(\prv_crc_cr0[2]_i_5_n_0 ),
        .I4(\prv_crc_cr0[11]_i_6_n_0 ),
        .I5(\prv_crc_cr0[13]_i_7_n_0 ),
        .O(\prv_crc_cr0[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[2]_i_3 
       (.I0(c_en),
        .I1(prv_crc_cr1[12]),
        .I2(prv_crc_cr0[12]),
        .I3(\prv_crc_cr0_reg[15]_2 ),
        .O(\prv_crc_cr0[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[2]_i_4 
       (.I0(c_en),
        .I1(prv_crc_cr1[14]),
        .I2(prv_crc_cr0[14]),
        .I3(\prv_crc_cr0_reg[5]_1 ),
        .O(\prv_crc_cr0[2]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[2]_i_5 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(\prv_crc_cr0[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[3]_i_1 
       (.I0(\prv_crc_cr0[3]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[3]));
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[3]_i_2 
       (.I0(\prv_crc_cr0[3]_i_3_n_0 ),
        .I1(\prv_crc_cr0[15]_i_3_n_0 ),
        .I2(Q[15]),
        .I3(\prv_crc_cr0[11]_i_3_n_0 ),
        .I4(\prv_crc_cr0[5]_i_5_n_0 ),
        .O(\prv_crc_cr0[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[3]_i_3 
       (.I0(\prv_crc_cr0[13]_i_7_n_0 ),
        .I1(\prv_crc_cr0[5]_i_6_n_0 ),
        .I2(Q[11]),
        .I3(Q[7]),
        .I4(nxt_crc_8bit0114_out__0),
        .I5(Q[8]),
        .O(\prv_crc_cr0[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[4]_i_1 
       (.I0(\prv_crc_cr0[4]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[4]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[4]_i_2 
       (.I0(\prv_crc_cr0[13]_i_3_n_0 ),
        .I1(\prv_crc_cr0[4]_i_3_n_0 ),
        .I2(\prv_crc_cr0[10]_i_5_n_0 ),
        .I3(Q[9]),
        .I4(\prv_crc_cr0[8]_i_3_n_0 ),
        .I5(\prv_crc_cr0[11]_i_3_n_0 ),
        .O(\prv_crc_cr0[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h99A5665A)) 
    \prv_crc_cr0[4]_i_3 
       (.I0(\prv_crc_cr0_reg[15]_2 ),
        .I1(prv_crc_cr0[12]),
        .I2(prv_crc_cr1[12]),
        .I3(c_en),
        .I4(Q[4]),
        .O(\prv_crc_cr0[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hFF96)) 
    \prv_crc_cr0[5]_i_1 
       (.I0(\prv_crc_cr0[5]_i_2_n_0 ),
        .I1(\prv_crc_cr0[5]_i_3_n_0 ),
        .I2(\prv_crc_cr0[5]_i_4_n_0 ),
        .I3(rstart),
        .O(p_1_in[5]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[5]_i_2 
       (.I0(\prv_crc_cr0[13]_i_6_n_0 ),
        .I1(\prv_crc_cr0[9]_i_4_n_0 ),
        .I2(\prv_crc_cr0[15]_i_8_n_0 ),
        .I3(Q[10]),
        .I4(\prv_crc_cr0[5]_i_5_n_0 ),
        .I5(\prv_crc_cr0[5]_i_6_n_0 ),
        .O(\prv_crc_cr0[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[5]_i_3 
       (.I0(\prv_crc_cr0[13]_i_7_n_0 ),
        .I1(\prv_crc_cr0[8]_i_4_n_0 ),
        .I2(\prv_crc_cr0[5]_i_7_n_0 ),
        .I3(p_13_in97_in),
        .I4(\prv_crc_cr0_reg[5]_1 ),
        .O(\prv_crc_cr0[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996699669699696)) 
    \prv_crc_cr0[5]_i_4 
       (.I0(Q[6]),
        .I1(Q[2]),
        .I2(\prv_crc_cr0_reg[5]_0 ),
        .I3(prv_crc_cr0[0]),
        .I4(prv_crc_cr1[0]),
        .I5(c_en),
        .O(\prv_crc_cr0[5]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hAC5353AC)) 
    \prv_crc_cr0[5]_i_5 
       (.I0(prv_crc_cr0[15]),
        .I1(prv_crc_cr1[15]),
        .I2(c_en),
        .I3(\prv_crc_cr0_reg[2]_0 ),
        .I4(\prv_crc_cr0[11]_i_4_n_0 ),
        .O(\prv_crc_cr0[5]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[5]_i_6 
       (.I0(\crc_reg_out[1]_i_2_0 ),
        .I1(c_en),
        .I2(prv_crc_cr1[13]),
        .I3(prv_crc_cr0[13]),
        .O(\prv_crc_cr0[5]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'h569A)) 
    \prv_crc_cr0[5]_i_7 
       (.I0(\crc_reg_out_reg[14]_1 ),
        .I1(c_en),
        .I2(prv_crc_cr1[6]),
        .I3(prv_crc_cr0[6]),
        .O(\prv_crc_cr0[5]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'hAC)) 
    \prv_crc_cr0[5]_i_8 
       (.I0(prv_crc_cr0[14]),
        .I1(prv_crc_cr1[14]),
        .I2(c_en),
        .O(p_13_in97_in));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[6]_i_1 
       (.I0(\prv_crc_cr0[6]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[6]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[6]_i_2 
       (.I0(\prv_crc_cr0[14]_i_4_n_0 ),
        .I1(\prv_crc_cr0[6]_i_3_n_0 ),
        .I2(Q[0]),
        .I3(\prv_crc_cr0[11]_i_5_n_0 ),
        .I4(\prv_crc_cr0[15]_i_4_n_0 ),
        .I5(\prv_crc_cr0[10]_i_4_n_0 ),
        .O(\prv_crc_cr0[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6996699669699696)) 
    \prv_crc_cr0[6]_i_3 
       (.I0(\prv_crc_cr0[13]_i_7_n_0 ),
        .I1(\prv_crc_cr0[8]_i_4_n_0 ),
        .I2(\prv_crc_cr0_reg[5]_1 ),
        .I3(prv_crc_cr0[14]),
        .I4(prv_crc_cr1[14]),
        .I5(c_en),
        .O(\prv_crc_cr0[6]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[7]_i_1 
       (.I0(\prv_crc_cr0[7]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[7]_i_2 
       (.I0(\prv_crc_cr0[7]_i_3_n_0 ),
        .I1(\prv_crc_cr0[11]_i_3_n_0 ),
        .I2(\prv_crc_cr0[7]_i_4_n_0 ),
        .I3(\prv_crc_cr0[12]_i_4_n_0 ),
        .I4(\prv_crc_cr0[7]_i_5_n_0 ),
        .I5(\prv_crc_cr0[15]_i_5_n_0 ),
        .O(\prv_crc_cr0[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[7]_i_3 
       (.I0(Q[3]),
        .I1(Q[7]),
        .O(\prv_crc_cr0[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[7]_i_4 
       (.I0(\prv_crc_cr0_reg[2]_0 ),
        .I1(p_16_in100_in),
        .I2(\prv_crc_cr0[1]_i_4_n_0 ),
        .I3(nxt_crc_8bit0114_out__0),
        .I4(Q[1]),
        .I5(\prv_crc_cr0[15]_i_3_n_0 ),
        .O(\prv_crc_cr0[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[7]_i_5 
       (.I0(Q[12]),
        .I1(Q[8]),
        .O(\prv_crc_cr0[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'hFFFF6996)) 
    \prv_crc_cr0[8]_i_1 
       (.I0(\prv_crc_cr0[8]_i_2_n_0 ),
        .I1(Q[9]),
        .I2(Q[13]),
        .I3(\prv_crc_cr0[13]_i_4_n_0 ),
        .I4(rstart),
        .O(p_1_in[8]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[8]_i_2 
       (.I0(\prv_crc_cr0[15]_i_5_n_0 ),
        .I1(\prv_crc_cr0[13]_i_3_n_0 ),
        .I2(Q[0]),
        .I3(Q[8]),
        .I4(\prv_crc_cr0[8]_i_3_n_0 ),
        .I5(\prv_crc_cr0[8]_i_4_n_0 ),
        .O(\prv_crc_cr0[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \prv_crc_cr0[8]_i_3 
       (.I0(\prv_crc_cr0[15]_i_7_n_0 ),
        .I1(\prv_crc_cr0[5]_i_6_n_0 ),
        .I2(p_26_in82_in),
        .I3(\crc_reg_out_reg[4]_0 ),
        .I4(\prv_crc_cr0[15]_i_3_n_0 ),
        .O(\prv_crc_cr0[8]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT4 #(
    .INIT(16'h1BE4)) 
    \prv_crc_cr0[8]_i_4 
       (.I0(c_en),
        .I1(prv_crc_cr1[10]),
        .I2(prv_crc_cr0[10]),
        .I3(\prv_crc_cr0_reg[13]_1 ),
        .O(\prv_crc_cr0[8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \prv_crc_cr0[9]_i_1 
       (.I0(\prv_crc_cr0[9]_i_2_n_0 ),
        .I1(rstart),
        .O(p_1_in[9]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \prv_crc_cr0[9]_i_2 
       (.I0(\prv_crc_cr0[9]_i_3_n_0 ),
        .I1(\prv_crc_cr0[9]_i_4_n_0 ),
        .I2(\prv_crc_cr0[9]_i_5_n_0 ),
        .I3(\prv_crc_cr0[14]_i_4_n_0 ),
        .I4(\prv_crc_cr0[14]_i_3_n_0 ),
        .I5(\prv_crc_cr0[5]_i_3_n_0 ),
        .O(\prv_crc_cr0[9]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'hAC5353AC)) 
    \prv_crc_cr0[9]_i_3 
       (.I0(prv_crc_cr0[13]),
        .I1(prv_crc_cr1[13]),
        .I2(c_en),
        .I3(\crc_reg_out[1]_i_2_0 ),
        .I4(\prv_crc_cr0[15]_i_7_n_0 ),
        .O(\prv_crc_cr0[9]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \prv_crc_cr0[9]_i_4 
       (.I0(Q[5]),
        .I1(Q[1]),
        .O(\prv_crc_cr0[9]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \prv_crc_cr0[9]_i_5 
       (.I0(\prv_crc_cr0[15]_i_8_n_0 ),
        .I1(\prv_crc_cr0[1]_i_4_n_0 ),
        .I2(Q[3]),
        .I3(Q[9]),
        .O(\prv_crc_cr0[9]_i_5_n_0 ));
  FDPE \prv_crc_cr0_reg[0] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .PRE(SR),
        .Q(prv_crc_cr0[0]));
  FDPE \prv_crc_cr0_reg[10] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .PRE(SR),
        .Q(prv_crc_cr0[10]));
  FDPE \prv_crc_cr0_reg[11] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .PRE(SR),
        .Q(prv_crc_cr0[11]));
  FDPE \prv_crc_cr0_reg[12] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .PRE(SR),
        .Q(prv_crc_cr0[12]));
  FDPE \prv_crc_cr0_reg[13] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .PRE(SR),
        .Q(prv_crc_cr0[13]));
  FDPE \prv_crc_cr0_reg[14] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .PRE(SR),
        .Q(prv_crc_cr0[14]));
  FDPE \prv_crc_cr0_reg[15] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .PRE(SR),
        .Q(prv_crc_cr0[15]));
  FDPE \prv_crc_cr0_reg[1] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .PRE(SR),
        .Q(prv_crc_cr0[1]));
  FDPE \prv_crc_cr0_reg[2] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .PRE(SR),
        .Q(prv_crc_cr0[2]));
  FDPE \prv_crc_cr0_reg[3] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .PRE(SR),
        .Q(prv_crc_cr0[3]));
  FDPE \prv_crc_cr0_reg[4] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .PRE(SR),
        .Q(prv_crc_cr0[4]));
  FDPE \prv_crc_cr0_reg[5] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .PRE(SR),
        .Q(prv_crc_cr0[5]));
  FDPE \prv_crc_cr0_reg[6] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .PRE(SR),
        .Q(prv_crc_cr0[6]));
  FDPE \prv_crc_cr0_reg[7] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .PRE(SR),
        .Q(prv_crc_cr0[7]));
  FDPE \prv_crc_cr0_reg[8] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .PRE(SR),
        .Q(prv_crc_cr0[8]));
  FDPE \prv_crc_cr0_reg[9] 
       (.C(m_axis_aclk),
        .CE(\prv_crc_cr0[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .PRE(SR),
        .Q(prv_crc_cr0[9]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[0]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[0]),
        .I2(prv_crc_cr0[0]),
        .I3(rstart),
        .O(p_0_in[0]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[10]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[10]),
        .I2(prv_crc_cr0[10]),
        .I3(rstart),
        .O(p_0_in[10]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[11]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[11]),
        .I2(prv_crc_cr0[11]),
        .I3(rstart),
        .O(p_0_in[11]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[12]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[12]),
        .I2(prv_crc_cr0[12]),
        .I3(rstart),
        .O(p_0_in[12]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[13]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[13]),
        .I2(prv_crc_cr0[13]),
        .I3(rstart),
        .O(p_0_in[13]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[14]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[14]),
        .I2(prv_crc_cr0[14]),
        .I3(rstart),
        .O(p_0_in[14]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[15]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[15]),
        .I2(prv_crc_cr0[15]),
        .I3(rstart),
        .O(p_0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[1]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[1]),
        .I2(prv_crc_cr0[1]),
        .I3(rstart),
        .O(p_0_in[1]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[2]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[2]),
        .I2(prv_crc_cr0[2]),
        .I3(rstart),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[3]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[3]),
        .I2(prv_crc_cr0[3]),
        .I3(rstart),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[4]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[4]),
        .I2(prv_crc_cr0[4]),
        .I3(rstart),
        .O(p_0_in[4]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[5]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[5]),
        .I2(prv_crc_cr0[5]),
        .I3(rstart),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[6]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[6]),
        .I2(prv_crc_cr0[6]),
        .I3(rstart),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[7]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[7]),
        .I2(prv_crc_cr0[7]),
        .I3(rstart),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[8]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[8]),
        .I2(prv_crc_cr0[8]),
        .I3(rstart),
        .O(p_0_in[8]));
  LUT4 #(
    .INIT(16'hFFE4)) 
    \prv_crc_cr1[9]_i_1 
       (.I0(c_en),
        .I1(prv_crc_cr1[9]),
        .I2(prv_crc_cr0[9]),
        .I3(rstart),
        .O(p_0_in[9]));
  FDPE \prv_crc_cr1_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .PRE(SR),
        .Q(prv_crc_cr1[0]));
  FDPE \prv_crc_cr1_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[10]),
        .PRE(SR),
        .Q(prv_crc_cr1[10]));
  FDPE \prv_crc_cr1_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[11]),
        .PRE(SR),
        .Q(prv_crc_cr1[11]));
  FDPE \prv_crc_cr1_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[12]),
        .PRE(SR),
        .Q(prv_crc_cr1[12]));
  FDPE \prv_crc_cr1_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[13]),
        .PRE(SR),
        .Q(prv_crc_cr1[13]));
  FDPE \prv_crc_cr1_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[14]),
        .PRE(SR),
        .Q(prv_crc_cr1[14]));
  FDPE \prv_crc_cr1_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[15]),
        .PRE(SR),
        .Q(prv_crc_cr1[15]));
  FDPE \prv_crc_cr1_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .PRE(SR),
        .Q(prv_crc_cr1[1]));
  FDPE \prv_crc_cr1_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[2]),
        .PRE(SR),
        .Q(prv_crc_cr1[2]));
  FDPE \prv_crc_cr1_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .PRE(SR),
        .Q(prv_crc_cr1[3]));
  FDPE \prv_crc_cr1_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[4]),
        .PRE(SR),
        .Q(prv_crc_cr1[4]));
  FDPE \prv_crc_cr1_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .PRE(SR),
        .Q(prv_crc_cr1[5]));
  FDPE \prv_crc_cr1_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .PRE(SR),
        .Q(prv_crc_cr1[6]));
  FDPE \prv_crc_cr1_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[7]),
        .PRE(SR),
        .Q(prv_crc_cr1[7]));
  FDPE \prv_crc_cr1_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[8]),
        .PRE(SR),
        .Q(prv_crc_cr1[8]));
  FDPE \prv_crc_cr1_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_in[9]),
        .PRE(SR),
        .Q(prv_crc_cr1[9]));
  LUT5 #(
    .INIT(32'hFFFFFF5D)) 
    rstart_i_1
       (.I0(dest_out),
        .I1(aresetn_d1),
        .I2(aresetn_d2),
        .I3(crc_rst),
        .I4(crcdone_reg_0),
        .O(\syncstages_ff_reg[2] ));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_data" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_data
   (wc_gt_pload,
    data_wip_reg,
    crc_trig_d2,
    \LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 ,
    wc_err,
    wr_en,
    lp_count_en,
    fsm_wip_reg,
    \LINE_BUF_WR_64.str_fwd_reg_0 ,
    end_mem_wr2,
    lbuf_blk_wen_i,
    data_sdown_reg_reg_0,
    phecc_start_d1,
    \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] ,
    \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] ,
    \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] ,
    \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] ,
    \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] ,
    \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] ,
    \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] ,
    \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] ,
    \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] ,
    \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] ,
    \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] ,
    \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] ,
    \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] ,
    \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] ,
    \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] ,
    \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] ,
    crc_trig_d2_reg_0,
    data_done_0,
    data_wip_reg_reg_0,
    data_done,
    din,
    \cur_byte_cnt_reg[3]_0 ,
    \cur_byte_cnt_reg[8]_0 ,
    out,
    S,
    E,
    \crc_p_strb_reg[0]_0 ,
    crc_start_d1_reg,
    \crc_p_value_reg[15]_0 ,
    \FSM_sequential_cur_state_reg[0] ,
    crc_blk_sel,
    \FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2]_0 ,
    SR,
    m_axis_aclk,
    data_wip,
    crc_trig_d10,
    \LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 ,
    crc_partial0,
    lp_data,
    \ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ,
    fsm_wip_reg_reg_0,
    \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ,
    phecc_start_d1_reg_0,
    pkt_valid,
    \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] ,
    p_1_in40_in,
    p_1_in37_in,
    p_1_in34_in,
    p_1_in31_in,
    p_1_in28_in,
    p_1_in25_in,
    p_1_in22_in,
    p_1_in19_in,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_1_in7_in,
    p_1_in4_in,
    p_1_in1_in,
    p_1_in,
    \LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ,
    \LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ,
    Q,
    \LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ,
    \LINE_BUF_WR_64.str_fwd_reg_1 ,
    mem_data1,
    dest_out,
    \LINE_BUF_WR_64.mem_wdata_i_reg[65]_0 ,
    m_axis_aresetn,
    diwc_corrected_zero,
    data_donei120_out,
    data_wip_reg_i_2_0,
    almost_full,
    full,
    lbuf_blk_wen_i_reg_0,
    \cur_byte_cnt_reg[15]_0 ,
    pre_byt_cnt2_reg_i_2_0,
    dout,
    \mem_wdata_reg[5]_0 ,
    pre_byt_cnt1_reg_0,
    DI,
    pre_byt_cnt2_reg_0,
    CO,
    crc_start_d1,
    \exp_crc_i_reg[8] ,
    \exp_crc_i_reg[15] ,
    \FSM_sequential_cur_state_reg[0]_0 ,
    diwc_corrected_lte4,
    \LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ,
    D,
    \LINE_BUF_WR_64.mem_wen_i_reg_0 ,
    \crc_p_strb_reg[1]_0 ,
    \crc_blk_sel_reg[3]_0 ,
    \crc_blk_sel_reg[2]_0 ,
    \crc_blk_sel_reg[1]_0 ,
    \crc_blk_sel_reg[0]_0 ,
    \crc_p_value_reg[15]_1 ,
    \exp_crc_r_reg[15]_0 ,
    \mem_wdata_reg[67]_0 ,
    \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 );
  output wc_gt_pload;
  output data_wip_reg;
  output crc_trig_d2;
  output [2:0]\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 ;
  output wc_err;
  output wr_en;
  output [3:0]lp_count_en;
  output fsm_wip_reg;
  output \LINE_BUF_WR_64.str_fwd_reg_0 ;
  output end_mem_wr2;
  output lbuf_blk_wen_i;
  output data_sdown_reg_reg_0;
  output phecc_start_d1;
  output \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] ;
  output \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] ;
  output \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] ;
  output \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] ;
  output \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] ;
  output \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] ;
  output \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] ;
  output \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] ;
  output \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] ;
  output \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] ;
  output \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] ;
  output \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] ;
  output \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] ;
  output \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] ;
  output \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] ;
  output \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] ;
  output crc_trig_d2_reg_0;
  output data_done_0;
  output data_wip_reg_reg_0;
  output data_done;
  output [67:0]din;
  output [3:0]\cur_byte_cnt_reg[3]_0 ;
  output [3:0]\cur_byte_cnt_reg[8]_0 ;
  output [12:0]out;
  output [6:0]S;
  output [0:0]E;
  output [1:0]\crc_p_strb_reg[0]_0 ;
  output [1:0]crc_start_d1_reg;
  output [15:0]\crc_p_value_reg[15]_0 ;
  output \FSM_sequential_cur_state_reg[0] ;
  output [3:0]crc_blk_sel;
  output [0:0]\FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2]_0 ;
  input [0:0]SR;
  input m_axis_aclk;
  input data_wip;
  input crc_trig_d10;
  input [1:0]\LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 ;
  input crc_partial0;
  input lp_data;
  input \ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ;
  input fsm_wip_reg_reg_0;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ;
  input phecc_start_d1_reg_0;
  input pkt_valid;
  input \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] ;
  input p_1_in40_in;
  input p_1_in37_in;
  input p_1_in34_in;
  input p_1_in31_in;
  input p_1_in28_in;
  input p_1_in25_in;
  input p_1_in22_in;
  input p_1_in19_in;
  input p_1_in16_in;
  input p_1_in13_in;
  input p_1_in10_in;
  input p_1_in7_in;
  input p_1_in4_in;
  input p_1_in1_in;
  input p_1_in;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ;
  input [25:0]Q;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ;
  input \LINE_BUF_WR_64.str_fwd_reg_1 ;
  input mem_data1;
  input dest_out;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[65]_0 ;
  input m_axis_aresetn;
  input diwc_corrected_zero;
  input data_donei120_out;
  input [1:0]data_wip_reg_i_2_0;
  input almost_full;
  input full;
  input lbuf_blk_wen_i_reg_0;
  input [15:0]\cur_byte_cnt_reg[15]_0 ;
  input [15:0]pre_byt_cnt2_reg_i_2_0;
  input [0:0]dout;
  input [5:0]\mem_wdata_reg[5]_0 ;
  input [3:0]pre_byt_cnt1_reg_0;
  input [0:0]DI;
  input [2:0]pre_byt_cnt2_reg_0;
  input [0:0]CO;
  input crc_start_d1;
  input [1:0]\exp_crc_i_reg[8] ;
  input [15:0]\exp_crc_i_reg[15] ;
  input [0:0]\FSM_sequential_cur_state_reg[0]_0 ;
  input diwc_corrected_lte4;
  input [0:0]\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ;
  input [31:0]D;
  input \LINE_BUF_WR_64.mem_wen_i_reg_0 ;
  input [1:0]\crc_p_strb_reg[1]_0 ;
  input \crc_blk_sel_reg[3]_0 ;
  input \crc_blk_sel_reg[2]_0 ;
  input \crc_blk_sel_reg[1]_0 ;
  input \crc_blk_sel_reg[0]_0 ;
  input [15:0]\crc_p_value_reg[15]_1 ;
  input [15:0]\exp_crc_r_reg[15]_0 ;
  input [2:0]\mem_wdata_reg[67]_0 ;
  input \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ;

  wire [0:0]CO;
  wire [31:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \ERR_FRAME_SYNC[0].fe_hunt[0]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[0].fe_hunt_reg_n_0_[0] ;
  wire \ERR_FRAME_SYNC[0].fs_hunt[0]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[0].fs_hunt[0]_i_3_n_0 ;
  wire \ERR_FRAME_SYNC[0].fs_hunt_reg_n_0_[0] ;
  wire \ERR_FRAME_SYNC[10].fe_hunt[10]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[10].fs_hunt[10]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[10].fs_hunt[10]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[11].fe_hunt[11]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[11].fs_hunt[11]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[11].fs_hunt[11]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[12].fe_hunt[12]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[12].fs_hunt[12]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[12].fs_hunt[12]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[13].fe_hunt[13]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[13].fs_hunt[13]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[13].fs_hunt[13]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[14].fe_hunt[14]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[14].fs_hunt[14]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[14].fs_hunt[14]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[15].fe_hunt[15]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ;
  wire \ERR_FRAME_SYNC[15].fe_hunt_reg_n_0_[15] ;
  wire \ERR_FRAME_SYNC[15].fs_hunt[15]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[15].fs_hunt[15]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[1].fe_hunt[1]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[1].fs_hunt[1]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[1].fs_hunt[1]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[2].fe_hunt[2]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[2].fs_hunt[2]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[2].fs_hunt[2]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[3].fe_hunt[3]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[3].fs_hunt[3]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[3].fs_hunt[3]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[4].fe_hunt[4]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[4].fs_hunt[4]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[4].fs_hunt[4]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[5].fe_hunt[5]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[5].fs_hunt[5]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[5].fs_hunt[5]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[6].fe_hunt[6]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[6].fs_hunt[6]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[6].fs_hunt[6]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[7].fe_hunt[7]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[7].fs_hunt[7]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[7].fs_hunt[7]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[8].fe_hunt[8]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[8].fs_hunt[8]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[8].fs_hunt[8]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC[9].fe_hunt[9]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[9].fs_hunt[9]_i_1_n_0 ;
  wire \ERR_FRAME_SYNC[9].fs_hunt[9]_i_2_n_0 ;
  wire \ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] ;
  wire \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] ;
  wire \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] ;
  wire \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] ;
  wire \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] ;
  wire \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] ;
  wire \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] ;
  wire \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] ;
  wire \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] ;
  wire \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] ;
  wire \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] ;
  wire \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] ;
  wire \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] ;
  wire \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] ;
  wire \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] ;
  wire \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] ;
  wire \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] ;
  wire \FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ;
  wire \FRAME_RCVD_GEN[0].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ;
  wire \FRAME_RCVD_GEN[10].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[11].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[12].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[13].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[14].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[15].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[1].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ;
  wire \FRAME_RCVD_GEN[2].frame_rcvd_i_reg ;
  wire [0:0]\FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2]_0 ;
  wire \FRAME_RCVD_GEN[3].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[4].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[5].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[6].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[7].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ;
  wire \FRAME_RCVD_GEN[8].frame_rcvd_i_reg ;
  wire \FRAME_RCVD_GEN[9].frame_rcvd_i_reg ;
  wire \FSM_sequential_cur_state_reg[0] ;
  wire [0:0]\FSM_sequential_cur_state_reg[0]_0 ;
  wire \HSC2R_CDC[44].hsc2r_bus_cdc_i_2_n_0 ;
  wire \HSC2R_CDC[44].hsc2r_bus_cdc_i_3_n_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_4_n_0 ;
  wire [31:16]\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_1 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_10 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_11 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_12 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_13 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_14 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_15 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_2 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_3 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_4 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_5 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_6 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_7 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_8 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_9 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_1 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_10 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_11 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_12 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_13 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_14 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_15 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_2 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_3 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_4 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_5 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_6 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_7 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_8 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_9 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_11 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_12 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_13 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_14 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_15 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_4 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_5 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_6 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_7 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_0 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_1 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_10 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_11 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_12 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_13 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_14 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_15 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_2 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_3 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_4 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_5 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_6 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_7 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_8 ;
  wire \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_9 ;
  wire [0:0]\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[0]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[10]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[11]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[12]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[13]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[14]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[15]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[16]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[17]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[18]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[19]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[1]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[20]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[21]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[22]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[23]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[24]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[25]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[26]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[27]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[28]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[29]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[2]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[30]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_10_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_11_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_12_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_13_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_7_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_8_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_9_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[3]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[4]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[5]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[6]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[7]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[8]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[9]_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_1 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_2 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_3 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_4 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_5 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_6 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_7 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[65]_0 ;
  wire [2:0]\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 ;
  wire [1:0]\LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[0] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[10] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[11] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[12] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[13] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[14] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[15] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[16] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[17] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[18] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[19] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[1] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[20] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[21] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[22] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[23] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[26] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[27] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[28] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[29] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[2] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[30] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[31] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[32] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[33] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[34] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[35] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[36] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[37] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[38] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[39] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[3] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[40] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[41] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[42] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[43] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[44] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[45] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[46] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[47] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[48] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[49] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[4] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[50] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[51] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[52] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[53] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[54] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[55] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[56] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[57] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[58] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[59] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[5] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[60] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[61] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[62] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[63] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[8] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[9] ;
  wire \LINE_BUF_WR_64.mem_wen_i_i_1_n_0 ;
  wire \LINE_BUF_WR_64.mem_wen_i_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_wen_i_reg_0 ;
  wire \LINE_BUF_WR_64.str_fwd_i_1_n_0 ;
  wire \LINE_BUF_WR_64.str_fwd_i_2_n_0 ;
  wire \LINE_BUF_WR_64.str_fwd_reg_0 ;
  wire \LINE_BUF_WR_64.str_fwd_reg_1 ;
  wire \LP_CNTS[0].lp_data[0]_i_2_n_0 ;
  wire \LP_CNTS[0].lp_data_reg_n_0_[0] ;
  wire \LP_CNTS[0].lp_header[0]_i_1_n_0 ;
  wire \LP_CNTS[0].lp_header[0]_i_4_n_0 ;
  wire \LP_CNTS[0].lp_header[0]_i_5_n_0 ;
  wire \LP_CNTS[0].lp_header_reg_n_0_[0] ;
  wire \LP_CNTS[1].lp_header[1]_i_1_n_0 ;
  wire \LP_CNTS[2].lp_header[2]_i_1_n_0 ;
  wire \LP_CNTS[3].lp_header[3]_i_1_n_0 ;
  wire [25:0]Q;
  wire [6:0]S;
  wire [0:0]SR;
  wire almost_full;
  wire core_men_f;
  wire core_men_f_i_1_n_0;
  wire [3:0]crc_blk_sel;
  wire \crc_blk_sel_reg[0]_0 ;
  wire \crc_blk_sel_reg[1]_0 ;
  wire \crc_blk_sel_reg[2]_0 ;
  wire \crc_blk_sel_reg[3]_0 ;
  wire [1:0]crc_p_strb;
  wire [1:0]\crc_p_strb_reg[0]_0 ;
  wire [1:0]\crc_p_strb_reg[1]_0 ;
  wire [15:0]crc_p_value;
  wire [15:0]\crc_p_value_reg[15]_0 ;
  wire [15:0]\crc_p_value_reg[15]_1 ;
  wire crc_partial;
  wire crc_partial0;
  wire crc_start_d1;
  wire [1:0]crc_start_d1_reg;
  wire crc_trig_d1;
  wire crc_trig_d10;
  wire crc_trig_d2;
  wire crc_trig_d2_reg_0;
  wire crc_trig_d3;
  wire crc_trig_d3_i_1_n_0;
  wire [15:4]cur_byte_cnt;
  wire \cur_byte_cnt[14]_i_2_n_0 ;
  wire \cur_byte_cnt[15]_i_1_n_0 ;
  wire \cur_byte_cnt[15]_i_2_n_0 ;
  wire \cur_byte_cnt[15]_i_6_n_0 ;
  wire \cur_byte_cnt[9]_i_2_n_0 ;
  wire [15:0]\cur_byte_cnt_reg[15]_0 ;
  wire [3:0]\cur_byte_cnt_reg[3]_0 ;
  wire [3:0]\cur_byte_cnt_reg[8]_0 ;
  wire data_done;
  wire data_done_0;
  wire data_donei120_out;
  wire data_sdown_reg_i_1_n_0;
  wire data_sdown_reg_i_2_n_0;
  wire data_sdown_reg_reg_0;
  wire data_wip;
  wire data_wip_reg;
  wire [1:0]data_wip_reg_i_2_0;
  wire data_wip_reg_reg_0;
  wire dest_out;
  wire [67:0]din;
  wire diwc_corrected_lte4;
  wire diwc_corrected_zero;
  wire [0:0]dout;
  wire end_mem_wr1;
  wire end_mem_wr1_i_1_n_0;
  wire end_mem_wr1_i_2_n_0;
  wire end_mem_wr1_i_3_n_0;
  wire end_mem_wr2;
  wire end_mem_wr2_i_1_n_0;
  wire end_mem_wr2_i_2_n_0;
  wire \exp_crc_i[15]_i_3_n_0 ;
  wire \exp_crc_i[7]_i_3_n_0 ;
  wire [15:0]\exp_crc_i_reg[15] ;
  wire [1:0]\exp_crc_i_reg[8] ;
  wire [15:0]exp_crc_r;
  wire [15:0]\exp_crc_r_reg[15]_0 ;
  wire fe_opcode;
  wire fs_opcode;
  wire fsm_wip_reg;
  wire fsm_wip_reg_reg_0;
  wire full;
  wire lbuf_blk_wen_i;
  wire lbuf_blk_wen_i_i_1_n_0;
  wire lbuf_blk_wen_i_reg_0;
  wire lbuf_rst_code;
  wire [3:0]lp_count_en;
  wire lp_data;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire mem_data1;
  wire [31:0]mem_data_l32;
  wire [31:0]mem_data_l32_d;
  wire \mem_wdata[0]_i_1_n_0 ;
  wire \mem_wdata[10]_i_1_n_0 ;
  wire \mem_wdata[11]_i_1_n_0 ;
  wire \mem_wdata[12]_i_1_n_0 ;
  wire \mem_wdata[13]_i_1_n_0 ;
  wire \mem_wdata[14]_i_1_n_0 ;
  wire \mem_wdata[15]_i_1_n_0 ;
  wire \mem_wdata[16]_i_1_n_0 ;
  wire \mem_wdata[17]_i_1_n_0 ;
  wire \mem_wdata[18]_i_1_n_0 ;
  wire \mem_wdata[19]_i_1_n_0 ;
  wire \mem_wdata[1]_i_1_n_0 ;
  wire \mem_wdata[20]_i_1_n_0 ;
  wire \mem_wdata[21]_i_1_n_0 ;
  wire \mem_wdata[22]_i_1_n_0 ;
  wire \mem_wdata[23]_i_1_n_0 ;
  wire \mem_wdata[2]_i_1_n_0 ;
  wire \mem_wdata[3]_i_1_n_0 ;
  wire \mem_wdata[4]_i_1_n_0 ;
  wire \mem_wdata[5]_i_1_n_0 ;
  wire \mem_wdata[63]_i_1_n_0 ;
  wire \mem_wdata[64]_i_1_n_0 ;
  wire \mem_wdata[8]_i_1_n_0 ;
  wire \mem_wdata[9]_i_1_n_0 ;
  wire [3:3]mem_wdata_i;
  wire [5:0]\mem_wdata_reg[5]_0 ;
  wire [2:0]\mem_wdata_reg[67]_0 ;
  wire mem_wen0;
  wire mem_wen_i;
  wire mem_wr_err1;
  wire mem_wr_err2;
  wire [12:0]out;
  wire [0:0]p_0_in;
  wire p_0_in103_in;
  wire p_0_in104_in;
  wire p_0_in105_in;
  wire p_0_in106_in;
  wire p_0_in107_in;
  wire p_0_in108_in;
  wire p_0_in109_in;
  wire p_0_in110_in;
  wire p_0_in111_in;
  wire p_0_in112_in;
  wire p_0_in113_in;
  wire p_0_in114_in;
  wire p_0_in115_in;
  wire p_0_in116_in;
  wire p_0_in117_in;
  wire p_0_in118_in;
  wire p_0_in124_in;
  wire p_0_in130_in;
  wire [15:5]p_0_in__0;
  wire [1:1]p_0_out__0;
  wire p_11_in155_in;
  wire p_120_out;
  wire p_121_out;
  wire p_123_out;
  wire p_126_out;
  wire p_127_out;
  wire p_129_out;
  wire p_132_out;
  wire p_133_out;
  wire p_135_out;
  wire p_138_out;
  wire p_139_out;
  wire p_13_in;
  wire p_13_out;
  wire p_142_in;
  wire p_143_out;
  wire p_15_in156_in;
  wire p_17_in;
  wire p_17_out;
  wire p_19_in157_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in119_in;
  wire p_1_in125_in;
  wire p_1_in131_in;
  wire p_1_in13_in;
  wire p_1_in151_in;
  wire p_1_in16_in;
  wire p_1_in19_in;
  wire p_1_in1_in;
  wire p_1_in22_in;
  wire p_1_in25_in;
  wire p_1_in28_in;
  wire p_1_in31_in;
  wire p_1_in34_in;
  wire p_1_in37_in;
  wire p_1_in40_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_21_in;
  wire p_21_out;
  wire p_23_in158_in;
  wire p_25_in;
  wire p_25_out;
  wire p_27_in159_in;
  wire p_29_out;
  wire [15:0]p_2_in__0;
  wire p_33_out;
  wire p_37_out;
  wire p_3_in152_in;
  wire p_41_out;
  wire p_45_out;
  wire p_49_out;
  wire p_53_out;
  wire p_57_out;
  wire p_5_in153_in;
  wire p_61_out;
  wire p_65_out;
  wire p_69_out;
  wire p_7_in154_in;
  wire p_9_in;
  wire p_9_out;
  wire phecc_start_d1;
  wire phecc_start_d1_reg_0;
  wire pkt_valid;
  wire pkt_valid_d1;
  wire pre_byt_cnt1_i_10_n_0;
  wire pre_byt_cnt1_i_11_n_0;
  wire pre_byt_cnt1_i_12_n_0;
  wire pre_byt_cnt1_i_13_n_0;
  wire pre_byt_cnt1_i_15_n_0;
  wire pre_byt_cnt1_i_17_n_0;
  wire pre_byt_cnt1_i_2_n_0;
  wire pre_byt_cnt1_i_4_n_0;
  wire pre_byt_cnt1_i_5_n_0;
  wire pre_byt_cnt1_i_6_n_0;
  wire pre_byt_cnt1_i_7_n_0;
  wire pre_byt_cnt1_i_8_n_0;
  wire pre_byt_cnt1_i_9_n_0;
  wire [3:0]pre_byt_cnt1_reg_0;
  wire pre_byt_cnt1_reg_i_3_n_0;
  wire pre_byt_cnt1_reg_i_3_n_1;
  wire pre_byt_cnt1_reg_i_3_n_2;
  wire pre_byt_cnt1_reg_i_3_n_3;
  wire pre_byt_cnt1_reg_i_3_n_4;
  wire pre_byt_cnt1_reg_i_3_n_5;
  wire pre_byt_cnt1_reg_i_3_n_6;
  wire pre_byt_cnt1_reg_i_3_n_7;
  wire pre_byt_cnt1_reg_n_0;
  wire pre_byt_cnt2;
  wire pre_byt_cnt22167_in;
  wire pre_byt_cnt2_i_11_n_0;
  wire pre_byt_cnt2_i_12_n_0;
  wire pre_byt_cnt2_i_14_n_0;
  wire pre_byt_cnt2_i_16_n_0;
  wire pre_byt_cnt2_i_18_n_0;
  wire pre_byt_cnt2_i_1_n_0;
  wire pre_byt_cnt2_i_3_n_0;
  wire pre_byt_cnt2_i_4_n_0;
  wire pre_byt_cnt2_i_5_n_0;
  wire pre_byt_cnt2_i_6_n_0;
  wire pre_byt_cnt2_i_7_n_0;
  wire pre_byt_cnt2_i_8_n_0;
  wire pre_byt_cnt2_i_9_n_0;
  wire [2:0]pre_byt_cnt2_reg_0;
  wire [15:0]pre_byt_cnt2_reg_i_2_0;
  wire pre_byt_cnt2_reg_i_2_n_1;
  wire pre_byt_cnt2_reg_i_2_n_2;
  wire pre_byt_cnt2_reg_i_2_n_3;
  wire pre_byt_cnt2_reg_i_2_n_4;
  wire pre_byt_cnt2_reg_i_2_n_5;
  wire pre_byt_cnt2_reg_i_2_n_6;
  wire pre_byt_cnt2_reg_i_2_n_7;
  wire pre_byt_cnt2_reg_n_0;
  wire wc_err;
  wire wc_err0;
  wire wc_gt_pload;
  wire wc_gt_pload0;
  wire wr_en;
  wire [7:4]\NLW_LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_CO_UNCONNECTED ;
  wire [7:5]\NLW_LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_O_UNCONNECTED ;
  wire [7:7]\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_CO_UNCONNECTED ;
  wire [7:0]\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_O_UNCONNECTED ;
  wire [7:0]NLW_pre_byt_cnt1_reg_i_3_O_UNCONNECTED;
  wire [7:0]NLW_pre_byt_cnt2_reg_i_2_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[0].fe_hunt[0]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_3_n_0 ),
        .I5(\ERR_FRAME_SYNC[0].fe_hunt_reg_n_0_[0] ),
        .O(\ERR_FRAME_SYNC[0].fe_hunt[0]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[0].fe_hunt_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[0].fe_hunt[0]_i_1_n_0 ),
        .Q(\ERR_FRAME_SYNC[0].fe_hunt_reg_n_0_[0] ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[0].fs_hunt[0]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(\ERR_FRAME_SYNC[0].fs_hunt_reg_n_0_[0] ),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_3_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \ERR_FRAME_SYNC[0].fs_hunt[0]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .O(fs_opcode));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \ERR_FRAME_SYNC[0].fs_hunt[0]_i_3 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_3_n_0 ));
  FDRE \ERR_FRAME_SYNC[0].fs_hunt_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_1_n_0 ),
        .Q(\ERR_FRAME_SYNC[0].fs_hunt_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[10].fe_hunt[10]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_2_n_0 ),
        .I5(p_19_in157_in),
        .O(\ERR_FRAME_SYNC[10].fe_hunt[10]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[10].fe_hunt_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[10].fe_hunt[10]_i_1_n_0 ),
        .Q(p_19_in157_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[10].fs_hunt[10]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in112_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \ERR_FRAME_SYNC[10].fs_hunt[10]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[10].fs_hunt_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_1_n_0 ),
        .Q(p_0_in112_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[11].fe_hunt[11]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_2_n_0 ),
        .I5(p_21_in),
        .O(\ERR_FRAME_SYNC[11].fe_hunt[11]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[11].fe_hunt_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[11].fe_hunt[11]_i_1_n_0 ),
        .Q(p_21_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[11].fs_hunt[11]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in113_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \ERR_FRAME_SYNC[11].fs_hunt[11]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[11].fs_hunt_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_1_n_0 ),
        .Q(p_0_in113_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[12].fe_hunt[12]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_2_n_0 ),
        .I5(p_23_in158_in),
        .O(\ERR_FRAME_SYNC[12].fe_hunt[12]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[12].fe_hunt_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[12].fe_hunt[12]_i_1_n_0 ),
        .Q(p_23_in158_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[12].fs_hunt[12]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in114_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    \ERR_FRAME_SYNC[12].fs_hunt[12]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[12].fs_hunt_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_1_n_0 ),
        .Q(p_0_in114_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[13].fe_hunt[13]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_2_n_0 ),
        .I5(p_25_in),
        .O(\ERR_FRAME_SYNC[13].fe_hunt[13]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[13].fe_hunt_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[13].fe_hunt[13]_i_1_n_0 ),
        .Q(p_25_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[13].fs_hunt[13]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in115_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \ERR_FRAME_SYNC[13].fs_hunt[13]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[13].fs_hunt_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_1_n_0 ),
        .Q(p_0_in115_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[14].fe_hunt[14]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_2_n_0 ),
        .I5(p_27_in159_in),
        .O(\ERR_FRAME_SYNC[14].fe_hunt[14]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[14].fe_hunt_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[14].fe_hunt[14]_i_1_n_0 ),
        .Q(p_27_in159_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[14].fs_hunt[14]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in116_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \ERR_FRAME_SYNC[14].fs_hunt[14]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[14].fs_hunt_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_1_n_0 ),
        .Q(p_0_in116_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[15].fe_hunt[15]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_2_n_0 ),
        .I5(\ERR_FRAME_SYNC[15].fe_hunt_reg_n_0_[15] ),
        .O(\ERR_FRAME_SYNC[15].fe_hunt[15]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[15].fe_hunt_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[15].fe_hunt[15]_i_1_n_0 ),
        .Q(\ERR_FRAME_SYNC[15].fe_hunt_reg_n_0_[15] ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[15].fs_hunt[15]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in117_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \ERR_FRAME_SYNC[15].fs_hunt[15]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[15].fs_hunt_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_1_n_0 ),
        .Q(p_0_in117_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[1].fe_hunt[1]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_2_n_0 ),
        .I5(p_1_in151_in),
        .O(\ERR_FRAME_SYNC[1].fe_hunt[1]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[1].fe_hunt_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[1].fe_hunt[1]_i_1_n_0 ),
        .Q(p_1_in151_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[1].fs_hunt[1]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in103_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \ERR_FRAME_SYNC[1].fs_hunt[1]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[1].fs_hunt_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_1_n_0 ),
        .Q(p_0_in103_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[2].fe_hunt[2]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_2_n_0 ),
        .I5(p_3_in152_in),
        .O(\ERR_FRAME_SYNC[2].fe_hunt[2]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[2].fe_hunt_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[2].fe_hunt[2]_i_1_n_0 ),
        .Q(p_3_in152_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[2].fs_hunt[2]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in104_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    \ERR_FRAME_SYNC[2].fs_hunt[2]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[2].fs_hunt_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_1_n_0 ),
        .Q(p_0_in104_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[3].fe_hunt[3]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_2_n_0 ),
        .I5(p_5_in153_in),
        .O(\ERR_FRAME_SYNC[3].fe_hunt[3]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[3].fe_hunt_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[3].fe_hunt[3]_i_1_n_0 ),
        .Q(p_5_in153_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[3].fs_hunt[3]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in105_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \ERR_FRAME_SYNC[3].fs_hunt[3]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[3].fs_hunt_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_1_n_0 ),
        .Q(p_0_in105_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[4].fe_hunt[4]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_2_n_0 ),
        .I5(p_7_in154_in),
        .O(\ERR_FRAME_SYNC[4].fe_hunt[4]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[4].fe_hunt_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[4].fe_hunt[4]_i_1_n_0 ),
        .Q(p_7_in154_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[4].fs_hunt[4]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in106_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \ERR_FRAME_SYNC[4].fs_hunt[4]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[4].fs_hunt_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_1_n_0 ),
        .Q(p_0_in106_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[5].fe_hunt[5]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_2_n_0 ),
        .I5(p_9_in),
        .O(\ERR_FRAME_SYNC[5].fe_hunt[5]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[5].fe_hunt_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[5].fe_hunt[5]_i_1_n_0 ),
        .Q(p_9_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[5].fs_hunt[5]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in107_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \ERR_FRAME_SYNC[5].fs_hunt[5]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[5].fs_hunt_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_1_n_0 ),
        .Q(p_0_in107_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[6].fe_hunt[6]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_2_n_0 ),
        .I5(p_11_in155_in),
        .O(\ERR_FRAME_SYNC[6].fe_hunt[6]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[6].fe_hunt_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[6].fe_hunt[6]_i_1_n_0 ),
        .Q(p_11_in155_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[6].fs_hunt[6]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in108_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    \ERR_FRAME_SYNC[6].fs_hunt[6]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[6].fs_hunt_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_1_n_0 ),
        .Q(p_0_in108_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[7].fe_hunt[7]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_2_n_0 ),
        .I5(p_13_in),
        .O(\ERR_FRAME_SYNC[7].fe_hunt[7]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[7].fe_hunt_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[7].fe_hunt[7]_i_1_n_0 ),
        .Q(p_13_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[7].fs_hunt[7]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in109_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \ERR_FRAME_SYNC[7].fs_hunt[7]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[7].fs_hunt_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_1_n_0 ),
        .Q(p_0_in109_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[8].fe_hunt[8]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_2_n_0 ),
        .I5(p_15_in156_in),
        .O(\ERR_FRAME_SYNC[8].fe_hunt[8]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[8].fe_hunt_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[8].fe_hunt[8]_i_1_n_0 ),
        .Q(p_15_in156_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[8].fs_hunt[8]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in110_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    \ERR_FRAME_SYNC[8].fs_hunt[8]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(mem_wen_i),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[8].fs_hunt_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_1_n_0 ),
        .Q(p_0_in110_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFDFFFFF00020000)) 
    \ERR_FRAME_SYNC[9].fe_hunt[9]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_2_n_0 ),
        .I5(p_17_in),
        .O(\ERR_FRAME_SYNC[9].fe_hunt[9]_i_1_n_0 ));
  FDRE \ERR_FRAME_SYNC[9].fe_hunt_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[9].fe_hunt[9]_i_1_n_0 ),
        .Q(p_17_in),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7F777F7F7F7)) 
    \ERR_FRAME_SYNC[9].fs_hunt[9]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(p_0_in111_in),
        .I3(fs_opcode),
        .I4(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_2_n_0 ),
        .I5(fe_opcode),
        .O(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \ERR_FRAME_SYNC[9].fs_hunt[9]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_2_n_0 ));
  FDRE \ERR_FRAME_SYNC[9].fs_hunt_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_1_n_0 ),
        .Q(p_0_in111_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[0].errframesync[0]_i_2 
       (.I0(\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] ),
        .I1(\ERR_FRAME_SYNC[0].fs_hunt[0]_i_3_n_0 ),
        .I2(fe_opcode),
        .I3(\ERR_FRAME_SYNC[0].fs_hunt_reg_n_0_[0] ),
        .I4(\ERR_FRAME_SYNC[0].fe_hunt_reg_n_0_[0] ),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[10].errframesync[10]_i_2 
       (.I0(p_1_in13_in),
        .I1(\ERR_FRAME_SYNC[10].fs_hunt[10]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in112_in),
        .I4(p_19_in157_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[11].errframesync[11]_i_2 
       (.I0(p_1_in10_in),
        .I1(\ERR_FRAME_SYNC[11].fs_hunt[11]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in113_in),
        .I4(p_21_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[12].errframesync[12]_i_2 
       (.I0(p_1_in7_in),
        .I1(\ERR_FRAME_SYNC[12].fs_hunt[12]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in114_in),
        .I4(p_23_in158_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[13].errframesync[13]_i_2 
       (.I0(p_1_in4_in),
        .I1(\ERR_FRAME_SYNC[13].fs_hunt[13]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in115_in),
        .I4(p_25_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[14].errframesync[14]_i_2 
       (.I0(p_1_in1_in),
        .I1(\ERR_FRAME_SYNC[14].fs_hunt[14]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in116_in),
        .I4(p_27_in159_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[15].errframesync[15]_i_2 
       (.I0(p_1_in),
        .I1(\ERR_FRAME_SYNC[15].fs_hunt[15]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in117_in),
        .I4(\ERR_FRAME_SYNC[15].fe_hunt_reg_n_0_[15] ),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[1].errframesync[1]_i_2 
       (.I0(p_1_in40_in),
        .I1(\ERR_FRAME_SYNC[1].fs_hunt[1]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in103_in),
        .I4(p_1_in151_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[2].errframesync[2]_i_2 
       (.I0(p_1_in37_in),
        .I1(\ERR_FRAME_SYNC[2].fs_hunt[2]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in104_in),
        .I4(p_3_in152_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[3].errframesync[3]_i_2 
       (.I0(p_1_in34_in),
        .I1(\ERR_FRAME_SYNC[3].fs_hunt[3]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in105_in),
        .I4(p_5_in153_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[4].errframesync[4]_i_2 
       (.I0(p_1_in31_in),
        .I1(\ERR_FRAME_SYNC[4].fs_hunt[4]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in106_in),
        .I4(p_7_in154_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[5].errframesync[5]_i_2 
       (.I0(p_1_in28_in),
        .I1(\ERR_FRAME_SYNC[5].fs_hunt[5]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in107_in),
        .I4(p_9_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[6].errframesync[6]_i_2 
       (.I0(p_1_in25_in),
        .I1(\ERR_FRAME_SYNC[6].fs_hunt[6]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in108_in),
        .I4(p_11_in155_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[7].errframesync[7]_i_2 
       (.I0(p_1_in22_in),
        .I1(\ERR_FRAME_SYNC[7].fs_hunt[7]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in109_in),
        .I4(p_13_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[8].errframesync[8]_i_2 
       (.I0(p_1_in19_in),
        .I1(\ERR_FRAME_SYNC[8].fs_hunt[8]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in110_in),
        .I4(p_15_in156_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] ));
  LUT6 #(
    .INIT(64'hEEEEEAAAEAAAEAAA)) 
    \ERR_FRAME_SYNC_ALL[9].errframesync[9]_i_2 
       (.I0(p_1_in16_in),
        .I1(\ERR_FRAME_SYNC[9].fs_hunt[9]_i_2_n_0 ),
        .I2(fe_opcode),
        .I3(p_0_in111_in),
        .I4(p_17_in),
        .I5(fs_opcode),
        .O(\ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_1 
       (.I0(\ERR_FRAME_SYNC[0].fs_hunt_reg_n_0_[0] ),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_69_out));
  LUT4 #(
    .INIT(16'h0040)) 
    \FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .O(fe_opcode));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ));
  FDRE \FRAME_RCVD_GEN[0].frame_rcvd_i_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_69_out),
        .Q(\FRAME_RCVD_GEN[0].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_1 
       (.I0(p_0_in112_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_29_out));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ));
  FDRE \FRAME_RCVD_GEN[10].frame_rcvd_i_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_29_out),
        .Q(\FRAME_RCVD_GEN[10].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \FRAME_RCVD_GEN[11].frame_rcvd_i[11]_i_1 
       (.I0(p_0_in113_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_25_out));
  FDRE \FRAME_RCVD_GEN[11].frame_rcvd_i_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_25_out),
        .Q(\FRAME_RCVD_GEN[11].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \FRAME_RCVD_GEN[12].frame_rcvd_i[12]_i_1 
       (.I0(p_0_in114_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_21_out));
  FDRE \FRAME_RCVD_GEN[12].frame_rcvd_i_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_21_out),
        .Q(\FRAME_RCVD_GEN[12].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \FRAME_RCVD_GEN[13].frame_rcvd_i[13]_i_1 
       (.I0(p_0_in115_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_17_out));
  FDRE \FRAME_RCVD_GEN[13].frame_rcvd_i_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_17_out),
        .Q(\FRAME_RCVD_GEN[13].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \FRAME_RCVD_GEN[14].frame_rcvd_i[14]_i_1 
       (.I0(p_0_in116_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_13_out));
  FDRE \FRAME_RCVD_GEN[14].frame_rcvd_i_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_13_out),
        .Q(\FRAME_RCVD_GEN[14].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \FRAME_RCVD_GEN[15].frame_rcvd_i[15]_i_1 
       (.I0(p_0_in117_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[10].frame_rcvd_i[10]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_9_out));
  FDRE \FRAME_RCVD_GEN[15].frame_rcvd_i_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_9_out),
        .Q(\FRAME_RCVD_GEN[15].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \FRAME_RCVD_GEN[1].frame_rcvd_i[1]_i_1 
       (.I0(p_0_in103_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_65_out));
  FDRE \FRAME_RCVD_GEN[1].frame_rcvd_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_65_out),
        .Q(\FRAME_RCVD_GEN[1].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_1 
       (.I0(p_0_in104_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_61_out));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .O(\FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ));
  FDRE \FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_61_out),
        .Q(\FRAME_RCVD_GEN[2].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \FRAME_RCVD_GEN[3].frame_rcvd_i[3]_i_1 
       (.I0(p_0_in105_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_57_out));
  FDRE \FRAME_RCVD_GEN[3].frame_rcvd_i_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_57_out),
        .Q(\FRAME_RCVD_GEN[3].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \FRAME_RCVD_GEN[4].frame_rcvd_i[4]_i_1 
       (.I0(p_0_in106_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_53_out));
  FDRE \FRAME_RCVD_GEN[4].frame_rcvd_i_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_53_out),
        .Q(\FRAME_RCVD_GEN[4].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \FRAME_RCVD_GEN[5].frame_rcvd_i[5]_i_1 
       (.I0(p_0_in107_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[0].frame_rcvd_i[0]_i_3_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_49_out));
  FDRE \FRAME_RCVD_GEN[5].frame_rcvd_i_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_49_out),
        .Q(\FRAME_RCVD_GEN[5].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \FRAME_RCVD_GEN[6].frame_rcvd_i[6]_i_1 
       (.I0(p_0_in108_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_45_out));
  FDRE \FRAME_RCVD_GEN[6].frame_rcvd_i_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_45_out),
        .Q(\FRAME_RCVD_GEN[6].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \FRAME_RCVD_GEN[7].frame_rcvd_i[7]_i_1 
       (.I0(p_0_in109_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[2].frame_rcvd_i[2]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_41_out));
  FDRE \FRAME_RCVD_GEN[7].frame_rcvd_i_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_41_out),
        .Q(\FRAME_RCVD_GEN[7].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_1 
       (.I0(p_0_in110_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(mem_wen_i),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_37_out));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .O(\FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ));
  FDRE \FRAME_RCVD_GEN[8].frame_rcvd_i_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_37_out),
        .Q(\FRAME_RCVD_GEN[8].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    \FRAME_RCVD_GEN[9].frame_rcvd_i[9]_i_1 
       (.I0(p_0_in111_in),
        .I1(fe_opcode),
        .I2(\FRAME_RCVD_GEN[8].frame_rcvd_i[8]_i_2_n_0 ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .O(p_33_out));
  FDRE \FRAME_RCVD_GEN[9].frame_rcvd_i_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_33_out),
        .Q(\FRAME_RCVD_GEN[9].frame_rcvd_i_reg ),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h44455555)) 
    \FSM_sequential_cur_state[0]_i_5 
       (.I0(\FSM_sequential_cur_state_reg[0]_0 ),
        .I1(wc_gt_pload),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(data_done),
        .O(\FSM_sequential_cur_state_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \HSC2R_CDC[44].hsc2r_bus_cdc_i_1 
       (.I0(\FRAME_RCVD_GEN[2].frame_rcvd_i_reg ),
        .I1(\FRAME_RCVD_GEN[3].frame_rcvd_i_reg ),
        .I2(\FRAME_RCVD_GEN[0].frame_rcvd_i_reg ),
        .I3(\FRAME_RCVD_GEN[1].frame_rcvd_i_reg ),
        .I4(\HSC2R_CDC[44].hsc2r_bus_cdc_i_2_n_0 ),
        .I5(\HSC2R_CDC[44].hsc2r_bus_cdc_i_3_n_0 ),
        .O(\FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \HSC2R_CDC[44].hsc2r_bus_cdc_i_2 
       (.I0(\FRAME_RCVD_GEN[14].frame_rcvd_i_reg ),
        .I1(\FRAME_RCVD_GEN[15].frame_rcvd_i_reg ),
        .I2(\FRAME_RCVD_GEN[12].frame_rcvd_i_reg ),
        .I3(\FRAME_RCVD_GEN[13].frame_rcvd_i_reg ),
        .I4(\FRAME_RCVD_GEN[11].frame_rcvd_i_reg ),
        .I5(\FRAME_RCVD_GEN[10].frame_rcvd_i_reg ),
        .O(\HSC2R_CDC[44].hsc2r_bus_cdc_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \HSC2R_CDC[44].hsc2r_bus_cdc_i_3 
       (.I0(\FRAME_RCVD_GEN[8].frame_rcvd_i_reg ),
        .I1(\FRAME_RCVD_GEN[9].frame_rcvd_i_reg ),
        .I2(\FRAME_RCVD_GEN[6].frame_rcvd_i_reg ),
        .I3(\FRAME_RCVD_GEN[7].frame_rcvd_i_reg ),
        .I4(\FRAME_RCVD_GEN[5].frame_rcvd_i_reg ),
        .I5(\FRAME_RCVD_GEN[4].frame_rcvd_i_reg ),
        .O(\HSC2R_CDC[44].hsc2r_bus_cdc_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2 
       (.I0(\LINE_BUF_WR_64.str_fwd_reg_0 ),
        .I1(pkt_valid),
        .I2(data_wip_reg),
        .I3(data_done_0),
        .O(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_4 
       (.I0(out[0]),
        .O(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_4_n_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[10] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_8 ),
        .Q(out[7]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_15 ),
        .Q(out[8]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1 
       (.CI(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_0 ),
        .CI_TOP(1'b0),
        .CO({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_0 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_1 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_2 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_3 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_4 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_5 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_6 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_8 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_9 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_10 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_11 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_12 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_13 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_14 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_15 }),
        .S({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [18:16],out[12:8]}));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[12] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_14 ),
        .Q(out[9]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[13] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_13 ),
        .Q(out[10]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[14] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_12 ),
        .Q(out[11]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[15] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_11 ),
        .Q(out[12]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[16] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_10 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [16]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[17] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_9 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [17]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[18] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_8 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [18]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_15 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [19]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1 
       (.CI(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[11]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_0 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_1 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_2 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_3 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_4 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_5 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_6 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_8 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_9 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_10 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_11 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_12 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_13 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_14 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_15 }),
        .S(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [26:19]));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[20] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_14 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [20]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[21] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_13 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [21]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[22] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_12 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [22]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[23] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_11 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [23]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[24] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_10 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [24]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[25] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_9 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [25]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[26] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_8 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [26]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_15 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [27]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1 
       (.CI(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[19]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_CO_UNCONNECTED [7:4],\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_4 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_5 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_6 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_O_UNCONNECTED [7:5],\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_11 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_12 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_13 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_14 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [31:27]}));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[28] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_14 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [28]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[29] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_13 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [29]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[30] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_12 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [30]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[27]_i_1_n_11 ),
        .Q(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [31]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_15 ),
        .Q(out[0]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_0 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_1 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_2 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_3 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_4 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_5 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_6 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_8 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_9 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_10 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_11 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_12 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_13 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_14 ,\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_15 }),
        .S({out[7:1],\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_4_n_0 }));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[4] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_14 ),
        .Q(out[1]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[5] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_13 ),
        .Q(out[2]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[6] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_12 ),
        .Q(out[3]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[7] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_11 ),
        .Q(out[4]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[8] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_10 ),
        .Q(out[5]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[9] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .D(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[3]_i_3_n_9 ),
        .Q(out[6]),
        .R(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 ));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[0]),
        .Q(mem_data_l32_d[0]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[10]),
        .Q(mem_data_l32_d[10]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[11]),
        .Q(mem_data_l32_d[11]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[12]),
        .Q(mem_data_l32_d[12]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[13]),
        .Q(mem_data_l32_d[13]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[14]),
        .Q(mem_data_l32_d[14]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[15]),
        .Q(mem_data_l32_d[15]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[16] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[16]),
        .Q(mem_data_l32_d[16]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[17] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[17]),
        .Q(mem_data_l32_d[17]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[18] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[18]),
        .Q(mem_data_l32_d[18]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[19] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[19]),
        .Q(mem_data_l32_d[19]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[1]),
        .Q(mem_data_l32_d[1]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[20] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[20]),
        .Q(mem_data_l32_d[20]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[21] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[21]),
        .Q(mem_data_l32_d[21]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[22] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[22]),
        .Q(mem_data_l32_d[22]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[23] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[23]),
        .Q(mem_data_l32_d[23]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[24] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[24]),
        .Q(mem_data_l32_d[24]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[25] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[25]),
        .Q(mem_data_l32_d[25]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[26] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[26]),
        .Q(mem_data_l32_d[26]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[27] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[27]),
        .Q(mem_data_l32_d[27]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[28] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[28]),
        .Q(mem_data_l32_d[28]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[29] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[29]),
        .Q(mem_data_l32_d[29]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[2]),
        .Q(mem_data_l32_d[2]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[30] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[30]),
        .Q(mem_data_l32_d[30]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[31] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[31]),
        .Q(mem_data_l32_d[31]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[3]),
        .Q(mem_data_l32_d[3]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[4]),
        .Q(mem_data_l32_d[4]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[5]),
        .Q(mem_data_l32_d[5]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[6]),
        .Q(mem_data_l32_d[6]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[7]),
        .Q(mem_data_l32_d[7]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[8]),
        .Q(mem_data_l32_d[8]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_d_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_data_l32[9]),
        .Q(mem_data_l32_d[9]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[0] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[0]),
        .Q(mem_data_l32[0]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[10] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[10]),
        .Q(mem_data_l32[10]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[11] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[11]),
        .Q(mem_data_l32[11]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[12] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[12]),
        .Q(mem_data_l32[12]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[13] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[13]),
        .Q(mem_data_l32[13]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[14] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[14]),
        .Q(mem_data_l32[14]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[15] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[15]),
        .Q(mem_data_l32[15]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[16] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[16]),
        .Q(mem_data_l32[16]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[17] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[17]),
        .Q(mem_data_l32[17]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[18] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[18]),
        .Q(mem_data_l32[18]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[19] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[19]),
        .Q(mem_data_l32[19]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[1] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[1]),
        .Q(mem_data_l32[1]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[20] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[20]),
        .Q(mem_data_l32[20]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[21] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[21]),
        .Q(mem_data_l32[21]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[22] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[22]),
        .Q(mem_data_l32[22]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[23] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[23]),
        .Q(mem_data_l32[23]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[24] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[24]),
        .Q(mem_data_l32[24]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[25] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[25]),
        .Q(mem_data_l32[25]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[26] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[26]),
        .Q(mem_data_l32[26]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[27] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[27]),
        .Q(mem_data_l32[27]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[28] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[28]),
        .Q(mem_data_l32[28]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[29] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[29]),
        .Q(mem_data_l32[29]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[2] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[2]),
        .Q(mem_data_l32[2]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[30] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[30]),
        .Q(mem_data_l32[30]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[31] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[31]),
        .Q(mem_data_l32[31]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[3] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[3]),
        .Q(mem_data_l32[3]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[4] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[4]),
        .Q(mem_data_l32[4]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[5] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[5]),
        .Q(mem_data_l32[5]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[6] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[6]),
        .Q(mem_data_l32[6]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[7] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[7]),
        .Q(mem_data_l32[7]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[8] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[8]),
        .Q(mem_data_l32[8]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_data_l32_reg[9] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 ),
        .D(D[9]),
        .Q(mem_data_l32[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[0]_i_1 
       (.I0(mem_data_l32_d[0]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[0]),
        .I4(Q[0]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[10]_i_1 
       (.I0(mem_data_l32_d[10]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[10]),
        .I4(Q[10]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[11]_i_1 
       (.I0(mem_data_l32_d[11]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[11]),
        .I4(Q[11]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[12]_i_1 
       (.I0(mem_data_l32_d[12]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[12]),
        .I4(Q[12]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[13]_i_1 
       (.I0(mem_data_l32_d[13]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[13]),
        .I4(Q[13]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[14]_i_1 
       (.I0(mem_data_l32_d[14]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[14]),
        .I4(Q[14]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[15]_i_1 
       (.I0(mem_data_l32_d[15]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[15]),
        .I4(Q[15]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[16]_i_1 
       (.I0(mem_data_l32_d[16]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[16]),
        .I4(Q[16]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[17]_i_1 
       (.I0(mem_data_l32_d[17]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[17]),
        .I4(Q[17]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[18]_i_1 
       (.I0(mem_data_l32_d[18]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[18]),
        .I4(Q[18]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[19]_i_1 
       (.I0(mem_data_l32_d[19]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[19]),
        .I4(Q[19]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[1]_i_1 
       (.I0(mem_data_l32_d[1]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[1]),
        .I4(Q[1]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[20]_i_1 
       (.I0(mem_data_l32_d[20]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[20]),
        .I4(Q[20]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[21]_i_1 
       (.I0(mem_data_l32_d[21]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[21]),
        .I4(Q[21]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[22]_i_1 
       (.I0(mem_data_l32_d[22]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[22]),
        .I4(Q[22]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[23]_i_1 
       (.I0(mem_data_l32_d[23]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[23]),
        .I4(Q[23]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[24]_i_1 
       (.I0(mem_data_l32_d[24]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[24]),
        .I4(Q[24]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[25]_i_1 
       (.I0(mem_data_l32_d[25]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[25]),
        .I4(Q[25]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[25]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[26]_i_1 
       (.I0(mem_data_l32[26]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[26]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[26]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[27]_i_1 
       (.I0(mem_data_l32[27]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[27]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[27]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[28]_i_1 
       (.I0(mem_data_l32[28]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[28]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[28]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[29]_i_1 
       (.I0(mem_data_l32[29]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[29]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[29]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[2]_i_1 
       (.I0(mem_data_l32_d[2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[2]),
        .I4(Q[2]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[30]_i_1 
       (.I0(mem_data_l32[30]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[30]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[30]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAEAA)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_1 ),
        .I2(data_wip_reg),
        .I3(\LINE_BUF_WR_64.str_fwd_reg_0 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_10 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [25]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [24]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_11 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [23]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [22]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_12 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [21]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [20]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_13 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [19]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [18]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_2 
       (.I0(mem_data_l32[31]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I3(mem_data_l32_d[31]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_22 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [17]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [16]),
        .O(S[6]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_23 
       (.I0(out[12]),
        .I1(Q[23]),
        .I2(out[11]),
        .I3(Q[22]),
        .O(S[5]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_24 
       (.I0(out[10]),
        .I1(Q[21]),
        .I2(out[9]),
        .I3(Q[20]),
        .O(S[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_25 
       (.I0(out[8]),
        .I1(Q[19]),
        .I2(out[7]),
        .I3(Q[18]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_26 
       (.I0(out[6]),
        .I1(Q[17]),
        .I2(out[5]),
        .I3(Q[16]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_27 
       (.I0(out[4]),
        .I1(Q[15]),
        .I2(out[3]),
        .I3(Q[14]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_28 
       (.I0(out[2]),
        .I1(Q[13]),
        .I2(out[1]),
        .I3(Q[12]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_7 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [31]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [30]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_8 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [29]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [28]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_9 
       (.I0(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [27]),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg [26]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[3]_i_1 
       (.I0(mem_data_l32_d[3]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[3]),
        .I4(Q[3]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[4]_i_1 
       (.I0(mem_data_l32_d[4]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[4]),
        .I4(Q[4]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[5]_i_1 
       (.I0(mem_data_l32_d[5]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[5]),
        .I4(Q[5]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h22FF22F2)) 
    \LINE_BUF_WR_64.mem_wdata_i[65]_i_1 
       (.I0(end_mem_wr2),
        .I1(dest_out),
        .I2(crc_trig_d2),
        .I3(mem_wr_err1),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg[65]_0 ),
        .O(p_0_out__0));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT4 #(
    .INIT(16'h8F00)) 
    \LINE_BUF_WR_64.mem_wdata_i[65]_i_2 
       (.I0(data_done_0),
        .I1(wc_gt_pload),
        .I2(dest_out),
        .I3(end_mem_wr1),
        .O(mem_wr_err1));
  LUT6 #(
    .INIT(64'h8F0F8F00FFFFFFFF)) 
    \LINE_BUF_WR_64.mem_wdata_i[67]_i_1 
       (.I0(data_done_0),
        .I1(wc_gt_pload),
        .I2(dest_out),
        .I3(end_mem_wr1),
        .I4(end_mem_wr2),
        .I5(m_axis_aresetn),
        .O(mem_wdata_i));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[6]_i_1 
       (.I0(mem_data_l32_d[6]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[6]),
        .I4(Q[6]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[7]_i_1 
       (.I0(mem_data_l32_d[7]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[7]),
        .I4(Q[7]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[8]_i_1 
       (.I0(mem_data_l32_d[8]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[8]),
        .I4(Q[8]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \LINE_BUF_WR_64.mem_wdata_i[9]_i_1 
       (.I0(mem_data_l32_d[9]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 ),
        .I3(mem_data_l32[9]),
        .I4(Q[9]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 ),
        .O(\LINE_BUF_WR_64.mem_wdata_i[9]_i_1_n_0 ));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[0] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[0]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[0] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[10] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[10]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[10] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[11] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[11]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[11] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[12] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[12]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[12] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[13] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[13]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[13] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[14] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[14]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[14] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[15] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[15]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[15] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[16] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[16]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[16] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[17] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[17]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[17] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[18] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[18]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[18] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[19] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[19]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[19] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[1]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[1] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[20] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[20]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[20] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[21] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[21]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[21] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[22] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[22]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[22] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[23] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[23]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[23] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[24] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[24]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[25] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[25]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[26] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[26]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[26] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[27] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[27]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[27] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[28] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[28]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[28] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[29] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[29]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[29] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[2]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[2] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[30] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[30]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[30] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[31] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[31]_i_2_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[31] ),
        .R(SR));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4 
       (.CI(CO),
        .CI_TOP(1'b0),
        .CO({\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_CO_UNCONNECTED [7],\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_1 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_2 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_3 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_4 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_5 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_6 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_O_UNCONNECTED [7:0]),
        .S({1'b0,\LINE_BUF_WR_64.mem_wdata_i[31]_i_7_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_8_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_9_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_10_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_11_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_12_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_13_n_0 }));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[32] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[32] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[33] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[33] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[34] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[34] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[35] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[35] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[36] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[36] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[37] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[37] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[38] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[38] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[39] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[39] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[3] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[3]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[3] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[40] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[40] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[41] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[41] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[42] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[42] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[43] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[43] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[44] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[44] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[45] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[45] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[46] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[46] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[47] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[47] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[48] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[48] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[49] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[17]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[49] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[4] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[4]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[4] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[50] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[18]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[50] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[51] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[19]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[51] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[52] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[20]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[52] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[53] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[21]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[53] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[54] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[22]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[54] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[55] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[23]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[55] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[56] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[24]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[56] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[57] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[25]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[57] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[58] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[26]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[58] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[59] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[27]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[59] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[5] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[5]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[5] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[60] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[28]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[60] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[61] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[29]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[61] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[62] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[30]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[62] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[63] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(D[31]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[63] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[64] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ),
        .Q(p_0_in),
        .R(1'b0));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[65] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_out__0),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[66] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 [0]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .R(mem_wdata_i));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[67] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 [1]),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .R(mem_wdata_i));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[6] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[6]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[7] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[7]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[8] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[8]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[8] ),
        .R(SR));
  FDRE \LINE_BUF_WR_64.mem_wdata_i_reg[9] 
       (.C(m_axis_aclk),
        .CE(\LINE_BUF_WR_64.mem_wdata_i[31]_i_1_n_0 ),
        .D(\LINE_BUF_WR_64.mem_wdata_i[9]_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[9] ),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFFFDFFFDFD)) 
    \LINE_BUF_WR_64.mem_wen_i_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wen_i_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_2_n_0 ),
        .I2(\LINE_BUF_WR_64.mem_wen_i_reg_0 ),
        .I3(dest_out),
        .I4(end_mem_wr2),
        .I5(crc_trig_d2_reg_0),
        .O(\LINE_BUF_WR_64.mem_wen_i_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \LINE_BUF_WR_64.mem_wen_i_i_2 
       (.I0(\LINE_BUF_WR_64.str_fwd_reg_0 ),
        .I1(data_wip_reg),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_1 ),
        .O(\LINE_BUF_WR_64.mem_wen_i_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'hEEAEAEAE)) 
    \LINE_BUF_WR_64.mem_wen_i_i_4 
       (.I0(crc_trig_d2),
        .I1(end_mem_wr1),
        .I2(dest_out),
        .I3(wc_gt_pload),
        .I4(data_done_0),
        .O(crc_trig_d2_reg_0));
  FDRE \LINE_BUF_WR_64.mem_wen_i_reg 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wen_i_i_1_n_0 ),
        .Q(mem_wen_i),
        .R(SR));
  LUT6 #(
    .INIT(64'h0404040400000400)) 
    \LINE_BUF_WR_64.str_fwd_i_1 
       (.I0(crc_trig_d2_reg_0),
        .I1(\LINE_BUF_WR_64.str_fwd_i_2_n_0 ),
        .I2(\LINE_BUF_WR_64.str_fwd_reg_1 ),
        .I3(mem_data1),
        .I4(data_done_0),
        .I5(\LINE_BUF_WR_64.mem_wen_i_i_2_n_0 ),
        .O(\LINE_BUF_WR_64.str_fwd_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000009AAA8AAA)) 
    \LINE_BUF_WR_64.str_fwd_i_2 
       (.I0(\LINE_BUF_WR_64.str_fwd_reg_0 ),
        .I1(data_done_0),
        .I2(pkt_valid),
        .I3(data_wip_reg),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_4_n_1 ),
        .I5(mem_wr_err2),
        .O(\LINE_BUF_WR_64.str_fwd_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \LINE_BUF_WR_64.str_fwd_i_5 
       (.I0(end_mem_wr2),
        .I1(dest_out),
        .O(mem_wr_err2));
  FDRE \LINE_BUF_WR_64.str_fwd_reg 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.str_fwd_i_1_n_0 ),
        .Q(\LINE_BUF_WR_64.str_fwd_reg_0 ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[0].lp_count_en[0]_i_1 
       (.I0(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .I1(\LP_CNTS[0].lp_header_reg_n_0_[0] ),
        .O(p_138_out));
  FDRE \LP_CNTS[0].lp_count_en_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_138_out),
        .Q(lp_count_en[0]),
        .R(SR));
  LUT3 #(
    .INIT(8'h01)) 
    \LP_CNTS[0].lp_data[0]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .O(\LP_CNTS[0].lp_data[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[0].lp_data[0]_i_3 
       (.I0(mem_wen_i),
        .I1(\LP_CNTS[0].lp_header_reg_n_0_[0] ),
        .O(p_139_out));
  FDRE \LP_CNTS[0].lp_data_reg[0] 
       (.C(m_axis_aclk),
        .CE(\LP_CNTS[0].lp_data[0]_i_2_n_0 ),
        .D(p_139_out),
        .Q(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .R(lp_data));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \LP_CNTS[0].lp_header[0]_i_1 
       (.I0(p_143_out),
        .I1(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .I2(p_0_in130_in),
        .I3(p_0_in124_in),
        .I4(p_0_in118_in),
        .I5(\LP_CNTS[0].lp_header_reg_n_0_[0] ),
        .O(\LP_CNTS[0].lp_header[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \LP_CNTS[0].lp_header[0]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I5(p_142_in),
        .O(p_143_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFF0F0F070)) 
    \LP_CNTS[0].lp_header[0]_i_3 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[4] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[1] ),
        .I2(\LP_CNTS[0].lp_header[0]_i_4_n_0 ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[5] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[2] ),
        .I5(\LP_CNTS[0].lp_header[0]_i_5_n_0 ),
        .O(p_142_in));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \LP_CNTS[0].lp_header[0]_i_4 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(p_0_in),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .O(\LP_CNTS[0].lp_header[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000E000000000)) 
    \LP_CNTS[0].lp_header[0]_i_5 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[3] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[0] ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I4(p_0_in),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .O(\LP_CNTS[0].lp_header[0]_i_5_n_0 ));
  FDRE \LP_CNTS[0].lp_header_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LP_CNTS[0].lp_header[0]_i_1_n_0 ),
        .Q(\LP_CNTS[0].lp_header_reg_n_0_[0] ),
        .R(lp_data));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[1].lp_count_en[1]_i_1 
       (.I0(p_0_in130_in),
        .I1(p_1_in131_in),
        .O(p_132_out));
  FDRE \LP_CNTS[1].lp_count_en_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_132_out),
        .Q(lp_count_en[1]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[1].lp_data[1]_i_1 
       (.I0(mem_wen_i),
        .I1(p_1_in131_in),
        .O(p_133_out));
  FDRE \LP_CNTS[1].lp_data_reg[1] 
       (.C(m_axis_aclk),
        .CE(\LP_CNTS[0].lp_data[0]_i_2_n_0 ),
        .D(p_133_out),
        .Q(p_0_in130_in),
        .R(lp_data));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \LP_CNTS[1].lp_header[1]_i_1 
       (.I0(p_135_out),
        .I1(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .I2(p_0_in130_in),
        .I3(p_0_in124_in),
        .I4(p_0_in118_in),
        .I5(p_1_in131_in),
        .O(\LP_CNTS[1].lp_header[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \LP_CNTS[1].lp_header[1]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I5(p_142_in),
        .O(p_135_out));
  FDRE \LP_CNTS[1].lp_header_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LP_CNTS[1].lp_header[1]_i_1_n_0 ),
        .Q(p_1_in131_in),
        .R(lp_data));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[2].lp_count_en[2]_i_1 
       (.I0(p_0_in124_in),
        .I1(p_1_in125_in),
        .O(p_126_out));
  FDRE \LP_CNTS[2].lp_count_en_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_126_out),
        .Q(lp_count_en[2]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[2].lp_data[2]_i_1 
       (.I0(mem_wen_i),
        .I1(p_1_in125_in),
        .O(p_127_out));
  FDRE \LP_CNTS[2].lp_data_reg[2] 
       (.C(m_axis_aclk),
        .CE(\LP_CNTS[0].lp_data[0]_i_2_n_0 ),
        .D(p_127_out),
        .Q(p_0_in124_in),
        .R(lp_data));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \LP_CNTS[2].lp_header[2]_i_1 
       (.I0(p_129_out),
        .I1(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .I2(p_0_in130_in),
        .I3(p_0_in124_in),
        .I4(p_0_in118_in),
        .I5(p_1_in125_in),
        .O(\LP_CNTS[2].lp_header[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \LP_CNTS[2].lp_header[2]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I5(p_142_in),
        .O(p_129_out));
  FDRE \LP_CNTS[2].lp_header_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LP_CNTS[2].lp_header[2]_i_1_n_0 ),
        .Q(p_1_in125_in),
        .R(lp_data));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[3].lp_count_en[3]_i_1 
       (.I0(p_0_in118_in),
        .I1(p_1_in119_in),
        .O(p_120_out));
  FDRE \LP_CNTS[3].lp_count_en_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_120_out),
        .Q(lp_count_en[3]),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNTS[3].lp_data[3]_i_1 
       (.I0(mem_wen_i),
        .I1(p_1_in119_in),
        .O(p_121_out));
  FDRE \LP_CNTS[3].lp_data_reg[3] 
       (.C(m_axis_aclk),
        .CE(\LP_CNTS[0].lp_data[0]_i_2_n_0 ),
        .D(p_121_out),
        .Q(p_0_in118_in),
        .R(lp_data));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAAA)) 
    \LP_CNTS[3].lp_header[3]_i_1 
       (.I0(p_123_out),
        .I1(\LP_CNTS[0].lp_data_reg_n_0_[0] ),
        .I2(p_0_in130_in),
        .I3(p_0_in124_in),
        .I4(p_0_in118_in),
        .I5(p_1_in119_in),
        .O(\LP_CNTS[3].lp_header[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    \LP_CNTS[3].lp_header[3]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .I2(mem_wen_i),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .I5(p_142_in),
        .O(p_123_out));
  FDRE \LP_CNTS[3].lp_header_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LP_CNTS[3].lp_header[3]_i_1_n_0 ),
        .Q(p_1_in119_in),
        .R(lp_data));
  LUT4 #(
    .INIT(16'h008A)) 
    core_men_f_i_1
       (.I0(m_axis_aresetn),
        .I1(core_men_f),
        .I2(dest_out),
        .I3(data_done),
        .O(core_men_f_i_1_n_0));
  FDRE core_men_f_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(core_men_f_i_1_n_0),
        .Q(core_men_f),
        .R(1'b0));
  FDRE \crc_blk_sel_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_blk_sel_reg[0]_0 ),
        .Q(crc_blk_sel[0]),
        .R(1'b0));
  FDRE \crc_blk_sel_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_blk_sel_reg[1]_0 ),
        .Q(crc_blk_sel[1]),
        .R(1'b0));
  FDRE \crc_blk_sel_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_blk_sel_reg[2]_0 ),
        .Q(crc_blk_sel[2]),
        .R(1'b0));
  FDRE \crc_blk_sel_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_blk_sel_reg[3]_0 ),
        .Q(crc_blk_sel[3]),
        .R(1'b0));
  FDRE \crc_p_strb_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_strb_reg[1]_0 [0]),
        .Q(crc_p_strb[0]),
        .R(SR));
  FDRE \crc_p_strb_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_strb_reg[1]_0 [1]),
        .Q(crc_p_strb[1]),
        .R(SR));
  FDRE \crc_p_value_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [0]),
        .Q(crc_p_value[0]),
        .R(SR));
  FDRE \crc_p_value_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [10]),
        .Q(crc_p_value[10]),
        .R(SR));
  FDRE \crc_p_value_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [11]),
        .Q(crc_p_value[11]),
        .R(SR));
  FDRE \crc_p_value_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [12]),
        .Q(crc_p_value[12]),
        .R(SR));
  FDRE \crc_p_value_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [13]),
        .Q(crc_p_value[13]),
        .R(SR));
  FDRE \crc_p_value_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [14]),
        .Q(crc_p_value[14]),
        .R(SR));
  FDRE \crc_p_value_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [15]),
        .Q(crc_p_value[15]),
        .R(SR));
  FDRE \crc_p_value_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [1]),
        .Q(crc_p_value[1]),
        .R(SR));
  FDRE \crc_p_value_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [2]),
        .Q(crc_p_value[2]),
        .R(SR));
  FDRE \crc_p_value_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [3]),
        .Q(crc_p_value[3]),
        .R(SR));
  FDRE \crc_p_value_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [4]),
        .Q(crc_p_value[4]),
        .R(SR));
  FDRE \crc_p_value_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [5]),
        .Q(crc_p_value[5]),
        .R(SR));
  FDRE \crc_p_value_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [6]),
        .Q(crc_p_value[6]),
        .R(SR));
  FDRE \crc_p_value_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [7]),
        .Q(crc_p_value[7]),
        .R(SR));
  FDRE \crc_p_value_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [8]),
        .Q(crc_p_value[8]),
        .R(SR));
  FDRE \crc_p_value_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\crc_p_value_reg[15]_1 [9]),
        .Q(crc_p_value[9]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT2 #(
    .INIT(4'h2)) 
    crc_partial_i_2
       (.I0(data_wip_reg),
        .I1(data_done_0),
        .O(data_wip_reg_reg_0));
  FDRE crc_partial_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_partial0),
        .Q(crc_partial),
        .R(SR));
  FDRE crc_trig_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_trig_d10),
        .Q(crc_trig_d1),
        .R(SR));
  FDRE crc_trig_d2_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_trig_d1),
        .Q(crc_trig_d2),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    crc_trig_d3_i_1
       (.I0(crc_trig_d2),
        .I1(m_axis_aresetn),
        .I2(crc_trig_d3),
        .O(crc_trig_d3_i_1_n_0));
  FDRE crc_trig_d3_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(crc_trig_d3_i_1_n_0),
        .Q(crc_trig_d3),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[0]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[3]_0 [0]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [0]),
        .O(p_2_in__0[0]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[10]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[8]_0 [2]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [10]),
        .O(p_2_in__0[10]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \cur_byte_cnt[10]_i_2 
       (.I0(cur_byte_cnt[9]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[8]),
        .I3(cur_byte_cnt[10]),
        .O(\cur_byte_cnt_reg[8]_0 [2]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[11]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[8]_0 [3]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [11]),
        .O(p_2_in__0[11]));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'hDFFF2000)) 
    \cur_byte_cnt[11]_i_2 
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(cur_byte_cnt[10]),
        .I4(cur_byte_cnt[11]),
        .O(\cur_byte_cnt_reg[8]_0 [3]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[12]_i_1 
       (.I0(phecc_start_d1),
        .I1(p_0_in__0[12]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [12]),
        .O(p_2_in__0[12]));
  LUT6 #(
    .INIT(64'hFF7FFFFF00800000)) 
    \cur_byte_cnt[12]_i_2 
       (.I0(cur_byte_cnt[11]),
        .I1(cur_byte_cnt[10]),
        .I2(cur_byte_cnt[9]),
        .I3(\cur_byte_cnt[9]_i_2_n_0 ),
        .I4(cur_byte_cnt[8]),
        .I5(cur_byte_cnt[12]),
        .O(p_0_in__0[12]));
  LUT5 #(
    .INIT(32'h09FF0900)) 
    \cur_byte_cnt[13]_i_1 
       (.I0(\cur_byte_cnt[14]_i_2_n_0 ),
        .I1(cur_byte_cnt[13]),
        .I2(phecc_start_d1),
        .I3(dest_out),
        .I4(\cur_byte_cnt_reg[15]_0 [13]),
        .O(p_2_in__0[13]));
  LUT6 #(
    .INIT(64'h00D2FFFF00D20000)) 
    \cur_byte_cnt[14]_i_1 
       (.I0(cur_byte_cnt[13]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[14]),
        .I3(phecc_start_d1),
        .I4(dest_out),
        .I5(\cur_byte_cnt_reg[15]_0 [14]),
        .O(p_2_in__0[14]));
  LUT6 #(
    .INIT(64'hFF7FFFFFFFFFFFFF)) 
    \cur_byte_cnt[14]_i_2 
       (.I0(cur_byte_cnt[11]),
        .I1(cur_byte_cnt[10]),
        .I2(cur_byte_cnt[9]),
        .I3(\cur_byte_cnt[9]_i_2_n_0 ),
        .I4(cur_byte_cnt[8]),
        .I5(cur_byte_cnt[12]),
        .O(\cur_byte_cnt[14]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \cur_byte_cnt[15]_i_1 
       (.I0(data_done),
        .I1(m_axis_aresetn),
        .O(\cur_byte_cnt[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF8F)) 
    \cur_byte_cnt[15]_i_2 
       (.I0(pkt_valid),
        .I1(fsm_wip_reg),
        .I2(dest_out),
        .I3(phecc_start_d1),
        .O(\cur_byte_cnt[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[15]_i_3 
       (.I0(phecc_start_d1),
        .I1(p_0_in__0[15]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [15]),
        .O(p_2_in__0[15]));
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAAAAAA)) 
    \cur_byte_cnt[15]_i_4 
       (.I0(\cur_byte_cnt[15]_i_6_n_0 ),
        .I1(pkt_valid),
        .I2(pkt_valid_d1),
        .I3(diwc_corrected_zero),
        .I4(pre_byt_cnt1_reg_n_0),
        .I5(data_donei120_out),
        .O(data_done));
  LUT4 #(
    .INIT(16'hDF20)) 
    \cur_byte_cnt[15]_i_5 
       (.I0(cur_byte_cnt[14]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[13]),
        .I3(cur_byte_cnt[15]),
        .O(p_0_in__0[15]));
  LUT6 #(
    .INIT(64'hAAAEFFFEAAAEAAAE)) 
    \cur_byte_cnt[15]_i_6 
       (.I0(wc_gt_pload),
        .I1(mem_wen_i),
        .I2(data_wip_reg_i_2_0[1]),
        .I3(data_wip_reg_i_2_0[0]),
        .I4(diwc_corrected_zero),
        .I5(core_men_f),
        .O(\cur_byte_cnt[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[1]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[3]_0 [1]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [1]),
        .O(p_2_in__0[1]));
  LUT4 #(
    .INIT(16'h1F10)) 
    \cur_byte_cnt[2]_i_1 
       (.I0(\cur_byte_cnt_reg[3]_0 [2]),
        .I1(phecc_start_d1),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [2]),
        .O(p_2_in__0[2]));
  LUT5 #(
    .INIT(32'h14FF1400)) 
    \cur_byte_cnt[3]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(dest_out),
        .I4(\cur_byte_cnt_reg[15]_0 [3]),
        .O(p_2_in__0[3]));
  LUT6 #(
    .INIT(64'h1540FFFF15400000)) 
    \cur_byte_cnt[4]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[3]_0 [3]),
        .I2(\cur_byte_cnt_reg[3]_0 [2]),
        .I3(cur_byte_cnt[4]),
        .I4(dest_out),
        .I5(\cur_byte_cnt_reg[15]_0 [4]),
        .O(p_2_in__0[4]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[5]_i_1 
       (.I0(phecc_start_d1),
        .I1(p_0_in__0[5]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [5]),
        .O(p_2_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \cur_byte_cnt[5]_i_2 
       (.I0(cur_byte_cnt[4]),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(cur_byte_cnt[5]),
        .O(p_0_in__0[5]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[6]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[8]_0 [0]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [6]),
        .O(p_2_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \cur_byte_cnt[6]_i_2 
       (.I0(cur_byte_cnt[5]),
        .I1(\cur_byte_cnt_reg[3]_0 [3]),
        .I2(\cur_byte_cnt_reg[3]_0 [2]),
        .I3(cur_byte_cnt[4]),
        .I4(cur_byte_cnt[6]),
        .O(\cur_byte_cnt_reg[8]_0 [0]));
  LUT4 #(
    .INIT(16'h4F40)) 
    \cur_byte_cnt[7]_i_1 
       (.I0(phecc_start_d1),
        .I1(\cur_byte_cnt_reg[8]_0 [1]),
        .I2(dest_out),
        .I3(\cur_byte_cnt_reg[15]_0 [7]),
        .O(p_2_in__0[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \cur_byte_cnt[7]_i_2 
       (.I0(cur_byte_cnt[4]),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(cur_byte_cnt[5]),
        .I4(cur_byte_cnt[6]),
        .I5(cur_byte_cnt[7]),
        .O(\cur_byte_cnt_reg[8]_0 [1]));
  LUT5 #(
    .INIT(32'h09FF0900)) 
    \cur_byte_cnt[8]_i_1 
       (.I0(\cur_byte_cnt[9]_i_2_n_0 ),
        .I1(cur_byte_cnt[8]),
        .I2(phecc_start_d1),
        .I3(dest_out),
        .I4(\cur_byte_cnt_reg[15]_0 [8]),
        .O(p_2_in__0[8]));
  LUT6 #(
    .INIT(64'h00D2FFFF00D20000)) 
    \cur_byte_cnt[9]_i_1 
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(phecc_start_d1),
        .I4(dest_out),
        .I5(\cur_byte_cnt_reg[15]_0 [9]),
        .O(p_2_in__0[9]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \cur_byte_cnt[9]_i_2 
       (.I0(cur_byte_cnt[4]),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(cur_byte_cnt[5]),
        .I4(cur_byte_cnt[6]),
        .I5(cur_byte_cnt[7]),
        .O(\cur_byte_cnt[9]_i_2_n_0 ));
  FDRE \cur_byte_cnt_reg[0] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[0]),
        .Q(\cur_byte_cnt_reg[3]_0 [0]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[10] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[10]),
        .Q(cur_byte_cnt[10]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[11] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[11]),
        .Q(cur_byte_cnt[11]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[12] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[12]),
        .Q(cur_byte_cnt[12]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[13] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[13]),
        .Q(cur_byte_cnt[13]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[14] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[14]),
        .Q(cur_byte_cnt[14]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[15] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[15]),
        .Q(cur_byte_cnt[15]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[1] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[1]),
        .Q(\cur_byte_cnt_reg[3]_0 [1]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[2] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[2]),
        .Q(\cur_byte_cnt_reg[3]_0 [2]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[3] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[3]),
        .Q(\cur_byte_cnt_reg[3]_0 [3]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[4] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[4]),
        .Q(cur_byte_cnt[4]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[5] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[5]),
        .Q(cur_byte_cnt[5]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[6] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[6]),
        .Q(cur_byte_cnt[6]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[7] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[7]),
        .Q(cur_byte_cnt[7]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[8] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[8]),
        .Q(cur_byte_cnt[8]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  FDRE \cur_byte_cnt_reg[9] 
       (.C(m_axis_aclk),
        .CE(\cur_byte_cnt[15]_i_2_n_0 ),
        .D(p_2_in__0[9]),
        .Q(cur_byte_cnt[9]),
        .R(\cur_byte_cnt[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \data_p_strb[0]_i_1 
       (.I0(crc_p_strb[0]),
        .I1(crc_p_strb[1]),
        .O(\crc_p_strb_reg[0]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \data_p_strb[1]_i_1 
       (.I0(crc_partial),
        .I1(crc_start_d1),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    \data_p_strb[1]_i_2 
       (.I0(crc_p_strb[0]),
        .O(\crc_p_strb_reg[0]_0 [1]));
  LUT5 #(
    .INIT(32'h008A00AA)) 
    data_sdown_reg_i_1
       (.I0(m_axis_aresetn),
        .I1(data_sdown_reg_reg_0),
        .I2(data_sdown_reg_i_2_n_0),
        .I3(dest_out),
        .I4(end_mem_wr1),
        .O(data_sdown_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    data_sdown_reg_i_2
       (.I0(p_0_in),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I4(mem_wen_i),
        .O(data_sdown_reg_i_2_n_0));
  FDRE data_sdown_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(data_sdown_reg_i_1_n_0),
        .Q(data_sdown_reg_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAFEAAAAAAAAAAAA)) 
    data_wip_reg_i_2
       (.I0(\cur_byte_cnt[15]_i_6_n_0 ),
        .I1(pkt_valid),
        .I2(pkt_valid_d1),
        .I3(diwc_corrected_zero),
        .I4(pre_byt_cnt2_reg_n_0),
        .I5(data_donei120_out),
        .O(data_done_0));
  FDRE data_wip_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(data_wip),
        .Q(data_wip_reg),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    end_mem_wr1_i_1
       (.I0(end_mem_wr1_i_2_n_0),
        .I1(data_done_0),
        .O(end_mem_wr1_i_1_n_0));
  LUT6 #(
    .INIT(64'hA0A0A000A0A0A0A8)) 
    end_mem_wr1_i_2
       (.I0(m_axis_aresetn),
        .I1(data_wip_reg),
        .I2(end_mem_wr1),
        .I3(end_mem_wr1_i_3_n_0),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I5(p_0_in),
        .O(end_mem_wr1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    end_mem_wr1_i_3
       (.I0(mem_wen_i),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .O(end_mem_wr1_i_3_n_0));
  FDRE end_mem_wr1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(end_mem_wr1_i_1_n_0),
        .Q(end_mem_wr1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h8888888888888088)) 
    end_mem_wr2_i_1
       (.I0(m_axis_aresetn),
        .I1(end_mem_wr2_i_2_n_0),
        .I2(p_0_in),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I5(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .O(end_mem_wr2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF10005000)) 
    end_mem_wr2_i_2
       (.I0(p_0_in),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [0]),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [2]),
        .I3(mem_wen_i),
        .I4(\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 [1]),
        .I5(end_mem_wr2),
        .O(end_mem_wr2_i_2_n_0));
  FDRE end_mem_wr2_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(end_mem_wr2_i_1_n_0),
        .Q(end_mem_wr2),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[0]_i_1 
       (.I0(crc_p_value[0]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [0]),
        .O(\crc_p_value_reg[15]_0 [0]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[10]_i_1 
       (.I0(crc_p_value[10]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [10]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [2]),
        .O(\crc_p_value_reg[15]_0 [10]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[11]_i_1 
       (.I0(crc_p_value[11]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [11]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [3]),
        .O(\crc_p_value_reg[15]_0 [11]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[12]_i_1 
       (.I0(crc_p_value[12]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [12]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [4]),
        .O(\crc_p_value_reg[15]_0 [12]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[13]_i_1 
       (.I0(crc_p_value[13]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [13]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [5]),
        .O(\crc_p_value_reg[15]_0 [13]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[14]_i_1 
       (.I0(crc_p_value[14]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [14]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [6]),
        .O(\crc_p_value_reg[15]_0 [14]));
  LUT6 #(
    .INIT(64'h5000500044450000)) 
    \exp_crc_i[15]_i_1 
       (.I0(crc_start_d1),
        .I1(\exp_crc_i_reg[8] [0]),
        .I2(crc_p_strb[1]),
        .I3(crc_p_strb[0]),
        .I4(pkt_valid_d1),
        .I5(crc_partial),
        .O(crc_start_d1_reg[1]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[15]_i_2 
       (.I0(crc_p_value[15]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [15]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [7]),
        .O(\crc_p_value_reg[15]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \exp_crc_i[15]_i_3 
       (.I0(crc_p_strb[0]),
        .I1(crc_p_strb[1]),
        .O(\exp_crc_i[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[1]_i_1 
       (.I0(crc_p_value[1]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [1]),
        .O(\crc_p_value_reg[15]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[2]_i_1 
       (.I0(crc_p_value[2]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [2]),
        .O(\crc_p_value_reg[15]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[3]_i_1 
       (.I0(crc_p_value[3]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [3]),
        .O(\crc_p_value_reg[15]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[4]_i_1 
       (.I0(crc_p_value[4]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [4]),
        .O(\crc_p_value_reg[15]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[5]_i_1 
       (.I0(crc_p_value[5]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [5]),
        .O(\crc_p_value_reg[15]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[6]_i_1 
       (.I0(crc_p_value[6]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [6]),
        .O(\crc_p_value_reg[15]_0 [6]));
  LUT2 #(
    .INIT(4'h2)) 
    \exp_crc_i[7]_i_1 
       (.I0(\exp_crc_i[7]_i_3_n_0 ),
        .I1(crc_start_d1),
        .O(crc_start_d1_reg[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_i[7]_i_2 
       (.I0(crc_p_value[7]),
        .I1(crc_partial),
        .I2(\exp_crc_i_reg[15] [7]),
        .O(\crc_p_value_reg[15]_0 [7]));
  LUT6 #(
    .INIT(64'hE4E4A0A4A0A4A0A4)) 
    \exp_crc_i[7]_i_3 
       (.I0(crc_partial),
        .I1(pkt_valid_d1),
        .I2(crc_p_strb[0]),
        .I3(crc_p_strb[1]),
        .I4(\exp_crc_i_reg[8] [0]),
        .I5(\exp_crc_i_reg[8] [1]),
        .O(\exp_crc_i[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[8]_i_1 
       (.I0(crc_p_value[8]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [8]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [0]),
        .O(\crc_p_value_reg[15]_0 [8]));
  LUT6 #(
    .INIT(64'hBB88BB8BBB88B888)) 
    \exp_crc_i[9]_i_1 
       (.I0(crc_p_value[9]),
        .I1(crc_partial),
        .I2(\exp_crc_i[15]_i_3_n_0 ),
        .I3(\exp_crc_i_reg[15] [9]),
        .I4(\exp_crc_i_reg[8] [1]),
        .I5(\exp_crc_i_reg[15] [1]),
        .O(\crc_p_value_reg[15]_0 [9]));
  FDRE \exp_crc_r_reg[0] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [0]),
        .Q(exp_crc_r[0]),
        .R(SR));
  FDRE \exp_crc_r_reg[10] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [10]),
        .Q(exp_crc_r[10]),
        .R(SR));
  FDRE \exp_crc_r_reg[11] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [11]),
        .Q(exp_crc_r[11]),
        .R(SR));
  FDRE \exp_crc_r_reg[12] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [12]),
        .Q(exp_crc_r[12]),
        .R(SR));
  FDRE \exp_crc_r_reg[13] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [13]),
        .Q(exp_crc_r[13]),
        .R(SR));
  FDRE \exp_crc_r_reg[14] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [14]),
        .Q(exp_crc_r[14]),
        .R(SR));
  FDRE \exp_crc_r_reg[15] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [15]),
        .Q(exp_crc_r[15]),
        .R(SR));
  FDRE \exp_crc_r_reg[1] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [1]),
        .Q(exp_crc_r[1]),
        .R(SR));
  FDRE \exp_crc_r_reg[2] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [2]),
        .Q(exp_crc_r[2]),
        .R(SR));
  FDRE \exp_crc_r_reg[3] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [3]),
        .Q(exp_crc_r[3]),
        .R(SR));
  FDRE \exp_crc_r_reg[4] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [4]),
        .Q(exp_crc_r[4]),
        .R(SR));
  FDRE \exp_crc_r_reg[5] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [5]),
        .Q(exp_crc_r[5]),
        .R(SR));
  FDRE \exp_crc_r_reg[6] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [6]),
        .Q(exp_crc_r[6]),
        .R(SR));
  FDRE \exp_crc_r_reg[7] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [7]),
        .Q(exp_crc_r[7]),
        .R(SR));
  FDRE \exp_crc_r_reg[8] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [8]),
        .Q(exp_crc_r[8]),
        .R(SR));
  FDRE \exp_crc_r_reg[9] 
       (.C(m_axis_aclk),
        .CE(crc_trig_d1),
        .D(\exp_crc_r_reg[15]_0 [9]),
        .Q(exp_crc_r[9]),
        .R(SR));
  FDRE fsm_wip_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsm_wip_reg_reg_0),
        .Q(fsm_wip_reg),
        .R(SR));
  LUT4 #(
    .INIT(16'hFBAA)) 
    lbuf_blk_wen_i_i_1
       (.I0(lbuf_rst_code),
        .I1(lbuf_blk_wen_i_reg_0),
        .I2(full),
        .I3(lbuf_blk_wen_i),
        .O(lbuf_blk_wen_i_i_1_n_0));
  LUT5 #(
    .INIT(32'h08000000)) 
    lbuf_blk_wen_i_i_2
       (.I0(wr_en),
        .I1(din[65]),
        .I2(din[64]),
        .I3(din[67]),
        .I4(din[66]),
        .O(lbuf_rst_code));
  FDRE lbuf_blk_wen_i_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(lbuf_blk_wen_i_i_1_n_0),
        .Q(lbuf_blk_wen_i),
        .R(\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[0]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [0]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[0] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[10]_i_1 
       (.I0(exp_crc_r[2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[10] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[10]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[11]_i_1 
       (.I0(exp_crc_r[3]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[11] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[11]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[12]_i_1 
       (.I0(exp_crc_r[4]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[12] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[12]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[13]_i_1 
       (.I0(exp_crc_r[5]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[13] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[13]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[14]_i_1 
       (.I0(exp_crc_r[6]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[14] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[14]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[15]_i_1 
       (.I0(exp_crc_r[7]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[15] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[15]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[16]_i_1 
       (.I0(exp_crc_r[8]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[16] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[16]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[17]_i_1 
       (.I0(exp_crc_r[9]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[17] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[17]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[18]_i_1 
       (.I0(exp_crc_r[10]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[18] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[18]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[19]_i_1 
       (.I0(exp_crc_r[11]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[19] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[1]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [1]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[1] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[20]_i_1 
       (.I0(exp_crc_r[12]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[20] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[20]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[21]_i_1 
       (.I0(exp_crc_r[13]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[21] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[21]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[22]_i_1 
       (.I0(exp_crc_r[14]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[22] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[22]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[23]_i_1 
       (.I0(exp_crc_r[15]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[23] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[23]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[2]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [2]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[2] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[3]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [3]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[3] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[4]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [4]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[4] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[5]_i_1 
       (.I0(\mem_wdata_reg[5]_0 [5]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[5] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \mem_wdata[63]_i_1 
       (.I0(crc_trig_d3),
        .I1(m_axis_aresetn),
        .O(\mem_wdata[63]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8808080888088808)) 
    \mem_wdata[64]_i_1 
       (.I0(m_axis_aresetn),
        .I1(p_0_in),
        .I2(almost_full),
        .I3(lbuf_blk_wen_i),
        .I4(full),
        .I5(lbuf_blk_wen_i_reg_0),
        .O(\mem_wdata[64]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[8]_i_1 
       (.I0(exp_crc_r[0]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[8] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[8]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hA0C0)) 
    \mem_wdata[9]_i_1 
       (.I0(exp_crc_r[1]),
        .I1(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[9] ),
        .I2(m_axis_aresetn),
        .I3(crc_trig_d3),
        .O(\mem_wdata[9]_i_1_n_0 ));
  FDRE \mem_wdata_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[0]_i_1_n_0 ),
        .Q(din[0]),
        .R(1'b0));
  FDRE \mem_wdata_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[10]_i_1_n_0 ),
        .Q(din[10]),
        .R(1'b0));
  FDRE \mem_wdata_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[11]_i_1_n_0 ),
        .Q(din[11]),
        .R(1'b0));
  FDRE \mem_wdata_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[12]_i_1_n_0 ),
        .Q(din[12]),
        .R(1'b0));
  FDRE \mem_wdata_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[13]_i_1_n_0 ),
        .Q(din[13]),
        .R(1'b0));
  FDRE \mem_wdata_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[14]_i_1_n_0 ),
        .Q(din[14]),
        .R(1'b0));
  FDRE \mem_wdata_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[15]_i_1_n_0 ),
        .Q(din[15]),
        .R(1'b0));
  FDRE \mem_wdata_reg[16] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[16]_i_1_n_0 ),
        .Q(din[16]),
        .R(1'b0));
  FDRE \mem_wdata_reg[17] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[17]_i_1_n_0 ),
        .Q(din[17]),
        .R(1'b0));
  FDRE \mem_wdata_reg[18] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[18]_i_1_n_0 ),
        .Q(din[18]),
        .R(1'b0));
  FDRE \mem_wdata_reg[19] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[19]_i_1_n_0 ),
        .Q(din[19]),
        .R(1'b0));
  FDRE \mem_wdata_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[1]_i_1_n_0 ),
        .Q(din[1]),
        .R(1'b0));
  FDRE \mem_wdata_reg[20] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[20]_i_1_n_0 ),
        .Q(din[20]),
        .R(1'b0));
  FDRE \mem_wdata_reg[21] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[21]_i_1_n_0 ),
        .Q(din[21]),
        .R(1'b0));
  FDRE \mem_wdata_reg[22] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[22]_i_1_n_0 ),
        .Q(din[22]),
        .R(1'b0));
  FDRE \mem_wdata_reg[23] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[23]_i_1_n_0 ),
        .Q(din[23]),
        .R(1'b0));
  FDRE \mem_wdata_reg[24] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[24] ),
        .Q(din[24]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[25] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[25] ),
        .Q(din[25]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[26] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[26] ),
        .Q(din[26]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[27] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[27] ),
        .Q(din[27]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[28] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[28] ),
        .Q(din[28]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[29] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[29] ),
        .Q(din[29]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[2]_i_1_n_0 ),
        .Q(din[2]),
        .R(1'b0));
  FDRE \mem_wdata_reg[30] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[30] ),
        .Q(din[30]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[31] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[31] ),
        .Q(din[31]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[32] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[32] ),
        .Q(din[32]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[33] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[33] ),
        .Q(din[33]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[34] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[34] ),
        .Q(din[34]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[35] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[35] ),
        .Q(din[35]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[36] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[36] ),
        .Q(din[36]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[37] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[37] ),
        .Q(din[37]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[38] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[38] ),
        .Q(din[38]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[39] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[39] ),
        .Q(din[39]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[3]_i_1_n_0 ),
        .Q(din[3]),
        .R(1'b0));
  FDRE \mem_wdata_reg[40] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[40] ),
        .Q(din[40]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[41] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[41] ),
        .Q(din[41]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[42] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[42] ),
        .Q(din[42]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[43] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[43] ),
        .Q(din[43]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[44] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[44] ),
        .Q(din[44]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[45] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[45] ),
        .Q(din[45]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[46] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[46] ),
        .Q(din[46]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[47] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[47] ),
        .Q(din[47]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[48] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[48] ),
        .Q(din[48]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[49] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[49] ),
        .Q(din[49]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[4]_i_1_n_0 ),
        .Q(din[4]),
        .R(1'b0));
  FDRE \mem_wdata_reg[50] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[50] ),
        .Q(din[50]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[51] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[51] ),
        .Q(din[51]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[52] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[52] ),
        .Q(din[52]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[53] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[53] ),
        .Q(din[53]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[54] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[54] ),
        .Q(din[54]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[55] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[55] ),
        .Q(din[55]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[56] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[56] ),
        .Q(din[56]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[57] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[57] ),
        .Q(din[57]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[58] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[58] ),
        .Q(din[58]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[59] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[59] ),
        .Q(din[59]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[5]_i_1_n_0 ),
        .Q(din[5]),
        .R(1'b0));
  FDRE \mem_wdata_reg[60] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[60] ),
        .Q(din[60]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[61] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[61] ),
        .Q(din[61]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[62] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[62] ),
        .Q(din[62]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[63] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[63] ),
        .Q(din[63]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[64] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[64]_i_1_n_0 ),
        .Q(din[64]),
        .R(1'b0));
  FDRE \mem_wdata_reg[65] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata_reg[67]_0 [0]),
        .Q(din[65]),
        .R(1'b0));
  FDRE \mem_wdata_reg[66] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata_reg[67]_0 [1]),
        .Q(din[66]),
        .R(1'b0));
  FDRE \mem_wdata_reg[67] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata_reg[67]_0 [2]),
        .Q(din[67]),
        .R(1'b0));
  FDRE \mem_wdata_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[6] ),
        .Q(din[6]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_BUF_WR_64.mem_wdata_i_reg_n_0_[7] ),
        .Q(din[7]),
        .R(\mem_wdata[63]_i_1_n_0 ));
  FDRE \mem_wdata_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[8]_i_1_n_0 ),
        .Q(din[8]),
        .R(1'b0));
  FDRE \mem_wdata_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mem_wdata[9]_i_1_n_0 ),
        .Q(din[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h3100)) 
    mem_wen_i_1
       (.I0(lbuf_blk_wen_i),
        .I1(full),
        .I2(lbuf_blk_wen_i_reg_0),
        .I3(mem_wen_i),
        .O(mem_wen0));
  FDRE mem_wen_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(mem_wen0),
        .Q(wr_en),
        .R(SR));
  FDRE phecc_start_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(phecc_start_d1_reg_0),
        .Q(phecc_start_d1),
        .R(SR));
  FDRE pkt_valid_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pkt_valid),
        .Q(pkt_valid_d1),
        .R(SR));
  LUT4 #(
    .INIT(16'hFFF7)) 
    pre_byt_cnt1_i_1
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .I2(phecc_start_d1),
        .I3(data_done),
        .O(pre_byt_cnt2));
  LUT4 #(
    .INIT(16'h0627)) 
    pre_byt_cnt1_i_10
       (.I0(\cur_byte_cnt_reg[3]_0 [3]),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(\cur_byte_cnt_reg[15]_0 [3]),
        .I3(\cur_byte_cnt_reg[15]_0 [2]),
        .O(pre_byt_cnt1_i_10_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    pre_byt_cnt1_i_11
       (.I0(\cur_byte_cnt_reg[3]_0 [1]),
        .I1(\cur_byte_cnt_reg[15]_0 [1]),
        .I2(\cur_byte_cnt_reg[3]_0 [0]),
        .I3(\cur_byte_cnt_reg[15]_0 [0]),
        .O(pre_byt_cnt1_i_11_n_0));
  LUT6 #(
    .INIT(64'hD20000D22D00002D)) 
    pre_byt_cnt1_i_12
       (.I0(cur_byte_cnt[13]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[14]),
        .I3(\cur_byte_cnt_reg[15]_0 [15]),
        .I4(p_0_in__0[15]),
        .I5(\cur_byte_cnt_reg[15]_0 [14]),
        .O(pre_byt_cnt1_i_12_n_0));
  LUT5 #(
    .INIT(32'h96000096)) 
    pre_byt_cnt1_i_13
       (.I0(\cur_byte_cnt[14]_i_2_n_0 ),
        .I1(cur_byte_cnt[13]),
        .I2(\cur_byte_cnt_reg[15]_0 [13]),
        .I3(p_0_in__0[12]),
        .I4(\cur_byte_cnt_reg[15]_0 [12]),
        .O(pre_byt_cnt1_i_13_n_0));
  LUT5 #(
    .INIT(32'h90094224)) 
    pre_byt_cnt1_i_15
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(\cur_byte_cnt_reg[15]_0 [9]),
        .I4(\cur_byte_cnt_reg[15]_0 [8]),
        .O(pre_byt_cnt1_i_15_n_0));
  LUT6 #(
    .INIT(64'h0999900060000999)) 
    pre_byt_cnt1_i_17
       (.I0(\cur_byte_cnt_reg[15]_0 [5]),
        .I1(cur_byte_cnt[5]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(\cur_byte_cnt_reg[3]_0 [2]),
        .I4(cur_byte_cnt[4]),
        .I5(\cur_byte_cnt_reg[15]_0 [4]),
        .O(pre_byt_cnt1_i_17_n_0));
  LUT4 #(
    .INIT(16'hFF80)) 
    pre_byt_cnt1_i_2
       (.I0(pre_byt_cnt1_reg_i_3_n_0),
        .I1(fsm_wip_reg),
        .I2(pkt_valid),
        .I3(pre_byt_cnt1_reg_n_0),
        .O(pre_byt_cnt1_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000FF00D200FFD2)) 
    pre_byt_cnt1_i_4
       (.I0(cur_byte_cnt[13]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[14]),
        .I3(p_0_in__0[15]),
        .I4(\cur_byte_cnt_reg[15]_0 [15]),
        .I5(\cur_byte_cnt_reg[15]_0 [14]),
        .O(pre_byt_cnt1_i_4_n_0));
  LUT5 #(
    .INIT(32'h09099F09)) 
    pre_byt_cnt1_i_5
       (.I0(\cur_byte_cnt[14]_i_2_n_0 ),
        .I1(cur_byte_cnt[13]),
        .I2(\cur_byte_cnt_reg[15]_0 [13]),
        .I3(p_0_in__0[12]),
        .I4(\cur_byte_cnt_reg[15]_0 [12]),
        .O(pre_byt_cnt1_i_5_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    pre_byt_cnt1_i_6
       (.I0(\cur_byte_cnt_reg[8]_0 [3]),
        .I1(\cur_byte_cnt_reg[15]_0 [11]),
        .I2(\cur_byte_cnt_reg[8]_0 [2]),
        .I3(\cur_byte_cnt_reg[15]_0 [10]),
        .O(pre_byt_cnt1_i_6_n_0));
  LUT5 #(
    .INIT(32'h00D290DB)) 
    pre_byt_cnt1_i_7
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(\cur_byte_cnt_reg[15]_0 [9]),
        .I4(\cur_byte_cnt_reg[15]_0 [8]),
        .O(pre_byt_cnt1_i_7_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    pre_byt_cnt1_i_8
       (.I0(\cur_byte_cnt_reg[8]_0 [1]),
        .I1(\cur_byte_cnt_reg[15]_0 [7]),
        .I2(\cur_byte_cnt_reg[8]_0 [0]),
        .I3(\cur_byte_cnt_reg[15]_0 [6]),
        .O(pre_byt_cnt1_i_8_n_0));
  LUT6 #(
    .INIT(64'h00006AAA2A807FEA)) 
    pre_byt_cnt1_i_9
       (.I0(cur_byte_cnt[5]),
        .I1(\cur_byte_cnt_reg[3]_0 [3]),
        .I2(\cur_byte_cnt_reg[3]_0 [2]),
        .I3(cur_byte_cnt[4]),
        .I4(\cur_byte_cnt_reg[15]_0 [5]),
        .I5(\cur_byte_cnt_reg[15]_0 [4]),
        .O(pre_byt_cnt1_i_9_n_0));
  FDRE pre_byt_cnt1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pre_byt_cnt1_i_2_n_0),
        .Q(pre_byt_cnt1_reg_n_0),
        .R(pre_byt_cnt2));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 pre_byt_cnt1_reg_i_3
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({pre_byt_cnt1_reg_i_3_n_0,pre_byt_cnt1_reg_i_3_n_1,pre_byt_cnt1_reg_i_3_n_2,pre_byt_cnt1_reg_i_3_n_3,pre_byt_cnt1_reg_i_3_n_4,pre_byt_cnt1_reg_i_3_n_5,pre_byt_cnt1_reg_i_3_n_6,pre_byt_cnt1_reg_i_3_n_7}),
        .DI({pre_byt_cnt1_i_4_n_0,pre_byt_cnt1_i_5_n_0,pre_byt_cnt1_i_6_n_0,pre_byt_cnt1_i_7_n_0,pre_byt_cnt1_i_8_n_0,pre_byt_cnt1_i_9_n_0,pre_byt_cnt1_i_10_n_0,pre_byt_cnt1_i_11_n_0}),
        .O(NLW_pre_byt_cnt1_reg_i_3_O_UNCONNECTED[7:0]),
        .S({pre_byt_cnt1_i_12_n_0,pre_byt_cnt1_i_13_n_0,pre_byt_cnt1_reg_0[3],pre_byt_cnt1_i_15_n_0,pre_byt_cnt1_reg_0[2],pre_byt_cnt1_i_17_n_0,pre_byt_cnt1_reg_0[1:0]}));
  LUT5 #(
    .INIT(32'hFFFF8880)) 
    pre_byt_cnt2_i_1
       (.I0(pkt_valid),
        .I1(fsm_wip_reg),
        .I2(pre_byt_cnt22167_in),
        .I3(diwc_corrected_lte4),
        .I4(pre_byt_cnt2_reg_n_0),
        .O(pre_byt_cnt2_i_1_n_0));
  LUT6 #(
    .INIT(64'hD20000D22D00002D)) 
    pre_byt_cnt2_i_11
       (.I0(cur_byte_cnt[13]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[14]),
        .I3(pre_byt_cnt2_reg_i_2_0[15]),
        .I4(p_0_in__0[15]),
        .I5(pre_byt_cnt2_reg_i_2_0[14]),
        .O(pre_byt_cnt2_i_11_n_0));
  LUT5 #(
    .INIT(32'h96000096)) 
    pre_byt_cnt2_i_12
       (.I0(\cur_byte_cnt[14]_i_2_n_0 ),
        .I1(cur_byte_cnt[13]),
        .I2(pre_byt_cnt2_reg_i_2_0[13]),
        .I3(p_0_in__0[12]),
        .I4(pre_byt_cnt2_reg_i_2_0[12]),
        .O(pre_byt_cnt2_i_12_n_0));
  LUT5 #(
    .INIT(32'h90094224)) 
    pre_byt_cnt2_i_14
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(pre_byt_cnt2_reg_i_2_0[9]),
        .I4(pre_byt_cnt2_reg_i_2_0[8]),
        .O(pre_byt_cnt2_i_14_n_0));
  LUT6 #(
    .INIT(64'h0999900060000999)) 
    pre_byt_cnt2_i_16
       (.I0(pre_byt_cnt2_reg_i_2_0[5]),
        .I1(cur_byte_cnt[5]),
        .I2(\cur_byte_cnt_reg[3]_0 [3]),
        .I3(\cur_byte_cnt_reg[3]_0 [2]),
        .I4(cur_byte_cnt[4]),
        .I5(pre_byt_cnt2_reg_i_2_0[4]),
        .O(pre_byt_cnt2_i_16_n_0));
  LUT4 #(
    .INIT(16'h8421)) 
    pre_byt_cnt2_i_18
       (.I0(\cur_byte_cnt_reg[3]_0 [1]),
        .I1(\cur_byte_cnt_reg[3]_0 [0]),
        .I2(pre_byt_cnt2_reg_i_2_0[1]),
        .I3(pre_byt_cnt2_reg_i_2_0[0]),
        .O(pre_byt_cnt2_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000FF00D200FFD2)) 
    pre_byt_cnt2_i_3
       (.I0(cur_byte_cnt[13]),
        .I1(\cur_byte_cnt[14]_i_2_n_0 ),
        .I2(cur_byte_cnt[14]),
        .I3(p_0_in__0[15]),
        .I4(pre_byt_cnt2_reg_i_2_0[15]),
        .I5(pre_byt_cnt2_reg_i_2_0[14]),
        .O(pre_byt_cnt2_i_3_n_0));
  LUT5 #(
    .INIT(32'h09099F09)) 
    pre_byt_cnt2_i_4
       (.I0(\cur_byte_cnt[14]_i_2_n_0 ),
        .I1(cur_byte_cnt[13]),
        .I2(pre_byt_cnt2_reg_i_2_0[13]),
        .I3(p_0_in__0[12]),
        .I4(pre_byt_cnt2_reg_i_2_0[12]),
        .O(pre_byt_cnt2_i_4_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    pre_byt_cnt2_i_5
       (.I0(\cur_byte_cnt_reg[8]_0 [3]),
        .I1(pre_byt_cnt2_reg_i_2_0[11]),
        .I2(\cur_byte_cnt_reg[8]_0 [2]),
        .I3(pre_byt_cnt2_reg_i_2_0[10]),
        .O(pre_byt_cnt2_i_5_n_0));
  LUT5 #(
    .INIT(32'h00D290DB)) 
    pre_byt_cnt2_i_6
       (.I0(cur_byte_cnt[8]),
        .I1(\cur_byte_cnt[9]_i_2_n_0 ),
        .I2(cur_byte_cnt[9]),
        .I3(pre_byt_cnt2_reg_i_2_0[9]),
        .I4(pre_byt_cnt2_reg_i_2_0[8]),
        .O(pre_byt_cnt2_i_6_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    pre_byt_cnt2_i_7
       (.I0(\cur_byte_cnt_reg[8]_0 [1]),
        .I1(pre_byt_cnt2_reg_i_2_0[7]),
        .I2(\cur_byte_cnt_reg[8]_0 [0]),
        .I3(pre_byt_cnt2_reg_i_2_0[6]),
        .O(pre_byt_cnt2_i_7_n_0));
  LUT6 #(
    .INIT(64'h00006AAA2A807FEA)) 
    pre_byt_cnt2_i_8
       (.I0(cur_byte_cnt[5]),
        .I1(\cur_byte_cnt_reg[3]_0 [3]),
        .I2(\cur_byte_cnt_reg[3]_0 [2]),
        .I3(cur_byte_cnt[4]),
        .I4(pre_byt_cnt2_reg_i_2_0[5]),
        .I5(pre_byt_cnt2_reg_i_2_0[4]),
        .O(pre_byt_cnt2_i_8_n_0));
  LUT4 #(
    .INIT(16'h0627)) 
    pre_byt_cnt2_i_9
       (.I0(\cur_byte_cnt_reg[3]_0 [3]),
        .I1(\cur_byte_cnt_reg[3]_0 [2]),
        .I2(pre_byt_cnt2_reg_i_2_0[3]),
        .I3(pre_byt_cnt2_reg_i_2_0[2]),
        .O(pre_byt_cnt2_i_9_n_0));
  FDRE pre_byt_cnt2_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pre_byt_cnt2_i_1_n_0),
        .Q(pre_byt_cnt2_reg_n_0),
        .R(pre_byt_cnt2));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 pre_byt_cnt2_reg_i_2
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({pre_byt_cnt22167_in,pre_byt_cnt2_reg_i_2_n_1,pre_byt_cnt2_reg_i_2_n_2,pre_byt_cnt2_reg_i_2_n_3,pre_byt_cnt2_reg_i_2_n_4,pre_byt_cnt2_reg_i_2_n_5,pre_byt_cnt2_reg_i_2_n_6,pre_byt_cnt2_reg_i_2_n_7}),
        .DI({pre_byt_cnt2_i_3_n_0,pre_byt_cnt2_i_4_n_0,pre_byt_cnt2_i_5_n_0,pre_byt_cnt2_i_6_n_0,pre_byt_cnt2_i_7_n_0,pre_byt_cnt2_i_8_n_0,pre_byt_cnt2_i_9_n_0,DI}),
        .O(NLW_pre_byt_cnt2_reg_i_2_O_UNCONNECTED[7:0]),
        .S({pre_byt_cnt2_i_11_n_0,pre_byt_cnt2_i_12_n_0,pre_byt_cnt2_reg_0[2],pre_byt_cnt2_i_14_n_0,pre_byt_cnt2_reg_0[1],pre_byt_cnt2_i_16_n_0,pre_byt_cnt2_reg_0[0],pre_byt_cnt2_i_18_n_0}));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT2 #(
    .INIT(4'h8)) 
    wc_err_i_1
       (.I0(wc_gt_pload),
        .I1(data_done),
        .O(wc_err0));
  FDRE wc_err_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(wc_err0),
        .Q(wc_err),
        .R(SR));
  LUT4 #(
    .INIT(16'h4000)) 
    wc_gt_pload_i_1
       (.I0(pre_byt_cnt1_reg_n_0),
        .I1(dout),
        .I2(fsm_wip_reg),
        .I3(pkt_valid_d1),
        .O(wc_gt_pload0));
  FDRE wc_gt_pload_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(wc_gt_pload0),
        .Q(wc_gt_pload),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_gen_spkt_fifo" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_gen_spkt_fifo
   (\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    D,
    interrupt,
    \gen_rd_b.doutb_reg_reg[25] ,
    m_axis_aclk,
    wr_en,
    \gen_rd_b.doutb_reg_reg[15] ,
    s_axi_aclk,
    s_axi_wdata,
    \isr_i_reg[43] ,
    \isr_i_reg[43]_0 ,
    interrupt_0,
    Q,
    vcx_err,
    interrupt_1,
    interrupt_2,
    \s_axi_rdata_reg[14] ,
    \s_axi_rdata_reg[0] ,
    \s_axi_rdata_reg[14]_0 ,
    \s_axi_rdata_reg[14]_1 ,
    \s_axi_rdata_reg[15] ,
    \s_axi_rdata_reg[15]_0 ,
    \s_axi_rdata_reg[15]_1 ,
    \s_axi_rdata_reg[16] ,
    \s_axi_rdata_reg[16]_0 ,
    \s_axi_rdata_reg[16]_1 ,
    \s_axi_rdata_reg[10] ,
    \s_axi_rdata_reg[10]_0 ,
    \s_axi_rdata_reg[10]_1 ,
    \s_axi_rdata_reg[11] ,
    \s_axi_rdata_reg[11]_0 ,
    \s_axi_rdata_reg[11]_1 ,
    \s_axi_rdata_reg[17] ,
    \s_axi_rdata_reg[17]_0 ,
    \s_axi_rdata_reg[17]_1 ,
    interrupt_3,
    interrupt_4,
    interrupt_5,
    interrupt_6,
    interrupt_7,
    \s_axi_rdata_reg[0]_0 ,
    \s_axi_rdata_reg[0]_1 ,
    \s_axi_rdata_reg[0]_2 ,
    \s_axi_rdata_reg[0]_3 ,
    \s_axi_rdata_reg[1] ,
    \s_axi_rdata_reg[1]_0 ,
    \s_axi_rdata_reg[1]_1 ,
    \s_axi_rdata_reg[2] ,
    \s_axi_rdata_reg[2]_0 ,
    \s_axi_rdata_reg[2]_1 ,
    \s_axi_rdata_reg[3] ,
    \s_axi_rdata_reg[3]_0 ,
    \s_axi_rdata_reg[3]_1 ,
    \s_axi_rdata_reg[4] ,
    \s_axi_rdata_reg[4]_0 ,
    \s_axi_rdata_reg[5] ,
    \s_axi_rdata_reg[5]_0 ,
    \s_axi_rdata_reg[6] ,
    \s_axi_rdata_reg[6]_0 ,
    \s_axi_rdata_reg[6]_1 ,
    \s_axi_rdata_reg[7] ,
    \s_axi_rdata_reg[7]_0 ,
    \s_axi_rdata_reg[7]_1 ,
    \s_axi_rdata_reg[15]_2 ,
    \s_axi_rdata_reg[3]_2 ,
    \s_axi_rdata_reg[23] ,
    \s_axi_rdata[1]_i_4_0 ,
    \s_axi_rdata[15]_i_2_0 ,
    \s_axi_rdata_reg[1]_2 ,
    \s_axi_rdata_reg[1]_3 ,
    \s_axi_rdata_reg[2]_2 ,
    \s_axi_rdata_reg[2]_3 ,
    \s_axi_rdata[2]_i_5_0 ,
    \s_axi_rdata[3]_i_6_0 ,
    \s_axi_rdata_reg[4]_1 ,
    \s_axi_rdata_reg[4]_2 ,
    \s_axi_rdata_reg[4]_3 ,
    \s_axi_rdata_reg[5]_1 ,
    \s_axi_rdata_reg[5]_2 ,
    \s_axi_rdata_reg[6]_2 ,
    \s_axi_rdata_reg[6]_3 ,
    \s_axi_rdata_reg[6]_4 ,
    \s_axi_rdata_reg[23]_0 ,
    \s_axi_rdata[13]_i_2_0 ,
    \s_axi_rdata_reg[7]_2 ,
    \s_axi_rdata_reg[7]_3 ,
    \s_axi_rdata_reg[8] ,
    \s_axi_rdata_reg[8]_0 ,
    \s_axi_rdata_reg[8]_1 ,
    \s_axi_rdata_reg[8]_2 ,
    \s_axi_rdata_reg[8]_3 ,
    \s_axi_rdata_reg[9] ,
    \s_axi_rdata_reg[9]_0 ,
    \s_axi_rdata_reg[9]_1 ,
    \s_axi_rdata_reg[9]_2 ,
    \s_axi_rdata_reg[9]_3 ,
    \s_axi_rdata_reg[10]_2 ,
    \s_axi_rdata_reg[11]_2 ,
    \s_axi_rdata_reg[12] ,
    \s_axi_rdata_reg[12]_0 ,
    \s_axi_rdata_reg[12]_1 ,
    \s_axi_rdata_reg[12]_2 ,
    \s_axi_rdata_reg[12]_3 ,
    \s_axi_rdata_reg[13] ,
    \s_axi_rdata_reg[13]_0 ,
    \s_axi_rdata_reg[13]_1 ,
    \s_axi_rdata_reg[13]_2 ,
    \s_axi_rdata_reg[13]_3 ,
    \s_axi_rdata_reg[14]_2 ,
    \s_axi_rdata_reg[15]_3 ,
    \s_axi_rdata_reg[24] ,
    lp_count_all,
    \s_axi_rdata_reg[24]_0 ,
    \s_axi_rdata_reg[16]_2 ,
    \s_axi_rdata_reg[18] ,
    \s_axi_rdata_reg[18]_0 ,
    \s_axi_rdata_reg[18]_1 ,
    \s_axi_rdata_reg[19] ,
    \s_axi_rdata_reg[19]_0 ,
    \s_axi_rdata_reg[20] ,
    \s_axi_rdata_reg[20]_0 ,
    \s_axi_rdata_reg[20]_1 ,
    \s_axi_rdata_reg[21] ,
    \s_axi_rdata_reg[21]_0 ,
    \s_axi_rdata_reg[21]_1 ,
    \s_axi_rdata_reg[22] ,
    \s_axi_rdata_reg[22]_0 ,
    \s_axi_rdata_reg[22]_1 ,
    \s_axi_rdata_reg[23]_1 ,
    \s_axi_rdata_reg[23]_2 ,
    \s_axi_rdata_reg[19]_1 ,
    \s_axi_rdata_reg[19]_2 ,
    \s_axi_rdata_reg[19]_3 ,
    s_axi_arvalid,
    wr_req,
    reset_released,
    rd_req,
    s_axi_araddr,
    \s_axi_rdata_reg[23]_3 ,
    \s_axi_rdata_reg[24]_1 ,
    \s_axi_rdata_reg[25] ,
    \s_axi_rdata_reg[2]_4 ,
    \s_axi_rdata_reg[2]_5 ,
    \s_axi_rdata[2]_i_4_0 ,
    \s_axi_rdata[2]_i_4_1 ,
    m_axis_aresetn,
    dest_out);
  output \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  output [0:0]D;
  output interrupt;
  output [25:0]\gen_rd_b.doutb_reg_reg[25] ;
  input m_axis_aclk;
  input wr_en;
  input [25:0]\gen_rd_b.doutb_reg_reg[15] ;
  input s_axi_aclk;
  input [0:0]s_axi_wdata;
  input \isr_i_reg[43] ;
  input [0:0]\isr_i_reg[43]_0 ;
  input interrupt_0;
  input [1:0]Q;
  input vcx_err;
  input interrupt_1;
  input interrupt_2;
  input \s_axi_rdata_reg[14] ;
  input [5:0]\s_axi_rdata_reg[0] ;
  input \s_axi_rdata_reg[14]_0 ;
  input \s_axi_rdata_reg[14]_1 ;
  input \s_axi_rdata_reg[15] ;
  input \s_axi_rdata_reg[15]_0 ;
  input \s_axi_rdata_reg[15]_1 ;
  input \s_axi_rdata_reg[16] ;
  input \s_axi_rdata_reg[16]_0 ;
  input \s_axi_rdata_reg[16]_1 ;
  input \s_axi_rdata_reg[10] ;
  input \s_axi_rdata_reg[10]_0 ;
  input \s_axi_rdata_reg[10]_1 ;
  input \s_axi_rdata_reg[11] ;
  input \s_axi_rdata_reg[11]_0 ;
  input \s_axi_rdata_reg[11]_1 ;
  input \s_axi_rdata_reg[17] ;
  input \s_axi_rdata_reg[17]_0 ;
  input \s_axi_rdata_reg[17]_1 ;
  input interrupt_3;
  input interrupt_4;
  input interrupt_5;
  input interrupt_6;
  input interrupt_7;
  input \s_axi_rdata_reg[0]_0 ;
  input \s_axi_rdata_reg[0]_1 ;
  input \s_axi_rdata_reg[0]_2 ;
  input \s_axi_rdata_reg[0]_3 ;
  input \s_axi_rdata_reg[1] ;
  input \s_axi_rdata_reg[1]_0 ;
  input \s_axi_rdata_reg[1]_1 ;
  input \s_axi_rdata_reg[2] ;
  input \s_axi_rdata_reg[2]_0 ;
  input \s_axi_rdata_reg[2]_1 ;
  input \s_axi_rdata_reg[3] ;
  input \s_axi_rdata_reg[3]_0 ;
  input \s_axi_rdata_reg[3]_1 ;
  input \s_axi_rdata_reg[4] ;
  input \s_axi_rdata_reg[4]_0 ;
  input \s_axi_rdata_reg[5] ;
  input \s_axi_rdata_reg[5]_0 ;
  input \s_axi_rdata_reg[6] ;
  input \s_axi_rdata_reg[6]_0 ;
  input \s_axi_rdata_reg[6]_1 ;
  input \s_axi_rdata_reg[7] ;
  input \s_axi_rdata_reg[7]_0 ;
  input \s_axi_rdata_reg[7]_1 ;
  input [14:0]\s_axi_rdata_reg[15]_2 ;
  input [2:0]\s_axi_rdata_reg[3]_2 ;
  input [19:0]\s_axi_rdata_reg[23] ;
  input [1:0]\s_axi_rdata[1]_i_4_0 ;
  input [15:0]\s_axi_rdata[15]_i_2_0 ;
  input \s_axi_rdata_reg[1]_2 ;
  input \s_axi_rdata_reg[1]_3 ;
  input \s_axi_rdata_reg[2]_2 ;
  input \s_axi_rdata_reg[2]_3 ;
  input \s_axi_rdata[2]_i_5_0 ;
  input \s_axi_rdata[3]_i_6_0 ;
  input \s_axi_rdata_reg[4]_1 ;
  input \s_axi_rdata_reg[4]_2 ;
  input \s_axi_rdata_reg[4]_3 ;
  input \s_axi_rdata_reg[5]_1 ;
  input \s_axi_rdata_reg[5]_2 ;
  input \s_axi_rdata_reg[6]_2 ;
  input \s_axi_rdata_reg[6]_3 ;
  input \s_axi_rdata_reg[6]_4 ;
  input \s_axi_rdata_reg[23]_0 ;
  input \s_axi_rdata[13]_i_2_0 ;
  input \s_axi_rdata_reg[7]_2 ;
  input \s_axi_rdata_reg[7]_3 ;
  input \s_axi_rdata_reg[8] ;
  input \s_axi_rdata_reg[8]_0 ;
  input \s_axi_rdata_reg[8]_1 ;
  input \s_axi_rdata_reg[8]_2 ;
  input \s_axi_rdata_reg[8]_3 ;
  input \s_axi_rdata_reg[9] ;
  input \s_axi_rdata_reg[9]_0 ;
  input \s_axi_rdata_reg[9]_1 ;
  input \s_axi_rdata_reg[9]_2 ;
  input \s_axi_rdata_reg[9]_3 ;
  input \s_axi_rdata_reg[10]_2 ;
  input \s_axi_rdata_reg[11]_2 ;
  input \s_axi_rdata_reg[12] ;
  input \s_axi_rdata_reg[12]_0 ;
  input \s_axi_rdata_reg[12]_1 ;
  input \s_axi_rdata_reg[12]_2 ;
  input \s_axi_rdata_reg[12]_3 ;
  input \s_axi_rdata_reg[13] ;
  input \s_axi_rdata_reg[13]_0 ;
  input \s_axi_rdata_reg[13]_1 ;
  input \s_axi_rdata_reg[13]_2 ;
  input \s_axi_rdata_reg[13]_3 ;
  input \s_axi_rdata_reg[14]_2 ;
  input \s_axi_rdata_reg[15]_3 ;
  input \s_axi_rdata_reg[24] ;
  input [9:0]lp_count_all;
  input \s_axi_rdata_reg[24]_0 ;
  input \s_axi_rdata_reg[16]_2 ;
  input \s_axi_rdata_reg[18] ;
  input \s_axi_rdata_reg[18]_0 ;
  input \s_axi_rdata_reg[18]_1 ;
  input \s_axi_rdata_reg[19] ;
  input \s_axi_rdata_reg[19]_0 ;
  input \s_axi_rdata_reg[20] ;
  input \s_axi_rdata_reg[20]_0 ;
  input \s_axi_rdata_reg[20]_1 ;
  input \s_axi_rdata_reg[21] ;
  input \s_axi_rdata_reg[21]_0 ;
  input \s_axi_rdata_reg[21]_1 ;
  input \s_axi_rdata_reg[22] ;
  input \s_axi_rdata_reg[22]_0 ;
  input \s_axi_rdata_reg[22]_1 ;
  input \s_axi_rdata_reg[23]_1 ;
  input \s_axi_rdata_reg[23]_2 ;
  input [0:0]\s_axi_rdata_reg[19]_1 ;
  input \s_axi_rdata_reg[19]_2 ;
  input \s_axi_rdata_reg[19]_3 ;
  input s_axi_arvalid;
  input wr_req;
  input reset_released;
  input rd_req;
  input [5:0]s_axi_araddr;
  input \s_axi_rdata_reg[23]_3 ;
  input \s_axi_rdata_reg[24]_1 ;
  input \s_axi_rdata_reg[25] ;
  input [0:0]\s_axi_rdata_reg[2]_4 ;
  input [0:0]\s_axi_rdata_reg[2]_5 ;
  input [0:0]\s_axi_rdata[2]_i_4_0 ;
  input [0:0]\s_axi_rdata[2]_i_4_1 ;
  input m_axis_aresetn;
  input dest_out;

  wire [0:0]D;
  wire [1:0]Q;
  wire dest_out;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire [25:0]\gen_rd_b.doutb_reg_reg[15] ;
  wire [25:0]\gen_rd_b.doutb_reg_reg[25] ;
  wire generic_pkt_i_4_n_0;
  wire interrupt;
  wire interrupt_0;
  wire interrupt_1;
  wire interrupt_2;
  wire interrupt_3;
  wire interrupt_4;
  wire interrupt_5;
  wire interrupt_6;
  wire interrupt_7;
  wire interrupt_INST_0_i_21_n_0;
  wire interrupt_INST_0_i_3_n_0;
  wire \isr_i_reg[43] ;
  wire [0:0]\isr_i_reg[43]_0 ;
  wire [9:0]lp_count_all;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire rd_req;
  wire reset_released;
  wire rstn_o;
  wire s_axi_aclk;
  wire [5:0]s_axi_araddr;
  wire s_axi_arvalid;
  wire \s_axi_rdata[0]_i_17_n_0 ;
  wire \s_axi_rdata[0]_i_5_n_0 ;
  wire \s_axi_rdata[10]_i_2_n_0 ;
  wire \s_axi_rdata[10]_i_6_n_0 ;
  wire \s_axi_rdata[11]_i_2_n_0 ;
  wire \s_axi_rdata[11]_i_6_n_0 ;
  wire \s_axi_rdata[12]_i_2_n_0 ;
  wire \s_axi_rdata[12]_i_7_n_0 ;
  wire \s_axi_rdata[13]_i_2_0 ;
  wire \s_axi_rdata[13]_i_2_n_0 ;
  wire \s_axi_rdata[13]_i_7_n_0 ;
  wire \s_axi_rdata[14]_i_2_n_0 ;
  wire \s_axi_rdata[14]_i_6_n_0 ;
  wire [15:0]\s_axi_rdata[15]_i_2_0 ;
  wire \s_axi_rdata[15]_i_2_n_0 ;
  wire \s_axi_rdata[15]_i_6_n_0 ;
  wire \s_axi_rdata[16]_i_5_n_0 ;
  wire \s_axi_rdata[17]_i_5_n_0 ;
  wire \s_axi_rdata[18]_i_5_n_0 ;
  wire \s_axi_rdata[19]_i_4_n_0 ;
  wire \s_axi_rdata[19]_i_5_n_0 ;
  wire \s_axi_rdata[1]_i_11_n_0 ;
  wire [1:0]\s_axi_rdata[1]_i_4_0 ;
  wire \s_axi_rdata[1]_i_4_n_0 ;
  wire \s_axi_rdata[20]_i_5_n_0 ;
  wire \s_axi_rdata[21]_i_5_n_0 ;
  wire \s_axi_rdata[22]_i_5_n_0 ;
  wire \s_axi_rdata[23]_i_3_n_0 ;
  wire \s_axi_rdata[2]_i_13_n_0 ;
  wire \s_axi_rdata[2]_i_14_n_0 ;
  wire [0:0]\s_axi_rdata[2]_i_4_0 ;
  wire [0:0]\s_axi_rdata[2]_i_4_1 ;
  wire \s_axi_rdata[2]_i_4_n_0 ;
  wire \s_axi_rdata[2]_i_5_0 ;
  wire \s_axi_rdata[2]_i_5_n_0 ;
  wire \s_axi_rdata[3]_i_17_n_0 ;
  wire \s_axi_rdata[3]_i_6_0 ;
  wire \s_axi_rdata[3]_i_6_n_0 ;
  wire \s_axi_rdata[4]_i_13_n_0 ;
  wire \s_axi_rdata[4]_i_4_n_0 ;
  wire \s_axi_rdata[5]_i_13_n_0 ;
  wire \s_axi_rdata[5]_i_4_n_0 ;
  wire \s_axi_rdata[6]_i_2_n_0 ;
  wire \s_axi_rdata[6]_i_7_n_0 ;
  wire \s_axi_rdata[7]_i_2_n_0 ;
  wire \s_axi_rdata[7]_i_7_n_0 ;
  wire \s_axi_rdata[8]_i_2_n_0 ;
  wire \s_axi_rdata[8]_i_7_n_0 ;
  wire \s_axi_rdata[9]_i_2_n_0 ;
  wire \s_axi_rdata[9]_i_7_n_0 ;
  wire [5:0]\s_axi_rdata_reg[0] ;
  wire \s_axi_rdata_reg[0]_0 ;
  wire \s_axi_rdata_reg[0]_1 ;
  wire \s_axi_rdata_reg[0]_2 ;
  wire \s_axi_rdata_reg[0]_3 ;
  wire \s_axi_rdata_reg[10] ;
  wire \s_axi_rdata_reg[10]_0 ;
  wire \s_axi_rdata_reg[10]_1 ;
  wire \s_axi_rdata_reg[10]_2 ;
  wire \s_axi_rdata_reg[11] ;
  wire \s_axi_rdata_reg[11]_0 ;
  wire \s_axi_rdata_reg[11]_1 ;
  wire \s_axi_rdata_reg[11]_2 ;
  wire \s_axi_rdata_reg[12] ;
  wire \s_axi_rdata_reg[12]_0 ;
  wire \s_axi_rdata_reg[12]_1 ;
  wire \s_axi_rdata_reg[12]_2 ;
  wire \s_axi_rdata_reg[12]_3 ;
  wire \s_axi_rdata_reg[13] ;
  wire \s_axi_rdata_reg[13]_0 ;
  wire \s_axi_rdata_reg[13]_1 ;
  wire \s_axi_rdata_reg[13]_2 ;
  wire \s_axi_rdata_reg[13]_3 ;
  wire \s_axi_rdata_reg[14] ;
  wire \s_axi_rdata_reg[14]_0 ;
  wire \s_axi_rdata_reg[14]_1 ;
  wire \s_axi_rdata_reg[14]_2 ;
  wire \s_axi_rdata_reg[15] ;
  wire \s_axi_rdata_reg[15]_0 ;
  wire \s_axi_rdata_reg[15]_1 ;
  wire [14:0]\s_axi_rdata_reg[15]_2 ;
  wire \s_axi_rdata_reg[15]_3 ;
  wire \s_axi_rdata_reg[16] ;
  wire \s_axi_rdata_reg[16]_0 ;
  wire \s_axi_rdata_reg[16]_1 ;
  wire \s_axi_rdata_reg[16]_2 ;
  wire \s_axi_rdata_reg[17] ;
  wire \s_axi_rdata_reg[17]_0 ;
  wire \s_axi_rdata_reg[17]_1 ;
  wire \s_axi_rdata_reg[18] ;
  wire \s_axi_rdata_reg[18]_0 ;
  wire \s_axi_rdata_reg[18]_1 ;
  wire \s_axi_rdata_reg[19] ;
  wire \s_axi_rdata_reg[19]_0 ;
  wire [0:0]\s_axi_rdata_reg[19]_1 ;
  wire \s_axi_rdata_reg[19]_2 ;
  wire \s_axi_rdata_reg[19]_3 ;
  wire \s_axi_rdata_reg[1] ;
  wire \s_axi_rdata_reg[1]_0 ;
  wire \s_axi_rdata_reg[1]_1 ;
  wire \s_axi_rdata_reg[1]_2 ;
  wire \s_axi_rdata_reg[1]_3 ;
  wire \s_axi_rdata_reg[20] ;
  wire \s_axi_rdata_reg[20]_0 ;
  wire \s_axi_rdata_reg[20]_1 ;
  wire \s_axi_rdata_reg[21] ;
  wire \s_axi_rdata_reg[21]_0 ;
  wire \s_axi_rdata_reg[21]_1 ;
  wire \s_axi_rdata_reg[22] ;
  wire \s_axi_rdata_reg[22]_0 ;
  wire \s_axi_rdata_reg[22]_1 ;
  wire [19:0]\s_axi_rdata_reg[23] ;
  wire \s_axi_rdata_reg[23]_0 ;
  wire \s_axi_rdata_reg[23]_1 ;
  wire \s_axi_rdata_reg[23]_2 ;
  wire \s_axi_rdata_reg[23]_3 ;
  wire \s_axi_rdata_reg[24] ;
  wire \s_axi_rdata_reg[24]_0 ;
  wire \s_axi_rdata_reg[24]_1 ;
  wire \s_axi_rdata_reg[25] ;
  wire \s_axi_rdata_reg[2] ;
  wire \s_axi_rdata_reg[2]_0 ;
  wire \s_axi_rdata_reg[2]_1 ;
  wire \s_axi_rdata_reg[2]_2 ;
  wire \s_axi_rdata_reg[2]_3 ;
  wire [0:0]\s_axi_rdata_reg[2]_4 ;
  wire [0:0]\s_axi_rdata_reg[2]_5 ;
  wire \s_axi_rdata_reg[3] ;
  wire \s_axi_rdata_reg[3]_0 ;
  wire \s_axi_rdata_reg[3]_1 ;
  wire [2:0]\s_axi_rdata_reg[3]_2 ;
  wire \s_axi_rdata_reg[4] ;
  wire \s_axi_rdata_reg[4]_0 ;
  wire \s_axi_rdata_reg[4]_1 ;
  wire \s_axi_rdata_reg[4]_2 ;
  wire \s_axi_rdata_reg[4]_3 ;
  wire \s_axi_rdata_reg[5] ;
  wire \s_axi_rdata_reg[5]_0 ;
  wire \s_axi_rdata_reg[5]_1 ;
  wire \s_axi_rdata_reg[5]_2 ;
  wire \s_axi_rdata_reg[6] ;
  wire \s_axi_rdata_reg[6]_0 ;
  wire \s_axi_rdata_reg[6]_1 ;
  wire \s_axi_rdata_reg[6]_2 ;
  wire \s_axi_rdata_reg[6]_3 ;
  wire \s_axi_rdata_reg[6]_4 ;
  wire \s_axi_rdata_reg[7] ;
  wire \s_axi_rdata_reg[7]_0 ;
  wire \s_axi_rdata_reg[7]_1 ;
  wire \s_axi_rdata_reg[7]_2 ;
  wire \s_axi_rdata_reg[7]_3 ;
  wire \s_axi_rdata_reg[8] ;
  wire \s_axi_rdata_reg[8]_0 ;
  wire \s_axi_rdata_reg[8]_1 ;
  wire \s_axi_rdata_reg[8]_2 ;
  wire \s_axi_rdata_reg[8]_3 ;
  wire \s_axi_rdata_reg[9] ;
  wire \s_axi_rdata_reg[9]_0 ;
  wire \s_axi_rdata_reg[9]_1 ;
  wire \s_axi_rdata_reg[9]_2 ;
  wire \s_axi_rdata_reg[9]_3 ;
  wire [0:0]s_axi_wdata;
  wire spkt_fifo_empty;
  wire [25:0]spkt_fifo_rdata;
  wire spkt_fifo_ren;
  wire spkt_fifo_rst;
  wire vcx_err;
  wire wr_en;
  wire wr_req;
  wire xpm_arst_03_i_1_n_0;
  wire NLW_generic_pkt_almost_empty_UNCONNECTED;
  wire NLW_generic_pkt_almost_full_UNCONNECTED;
  wire NLW_generic_pkt_data_valid_UNCONNECTED;
  wire NLW_generic_pkt_dbiterr_UNCONNECTED;
  wire NLW_generic_pkt_overflow_UNCONNECTED;
  wire NLW_generic_pkt_prog_empty_UNCONNECTED;
  wire NLW_generic_pkt_prog_full_UNCONNECTED;
  wire NLW_generic_pkt_rd_rst_busy_UNCONNECTED;
  wire NLW_generic_pkt_sbiterr_UNCONNECTED;
  wire NLW_generic_pkt_underflow_UNCONNECTED;
  wire NLW_generic_pkt_wr_ack_UNCONNECTED;
  wire NLW_generic_pkt_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_generic_pkt_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_generic_pkt_wr_data_count_UNCONNECTED;

  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_SYNC_STAGES = "2" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "29" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "0" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "26" *) 
  (* READ_MODE = "std" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "26" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_fifo_async generic_pkt
       (.almost_empty(NLW_generic_pkt_almost_empty_UNCONNECTED),
        .almost_full(NLW_generic_pkt_almost_full_UNCONNECTED),
        .data_valid(NLW_generic_pkt_data_valid_UNCONNECTED),
        .dbiterr(NLW_generic_pkt_dbiterr_UNCONNECTED),
        .din(\gen_rd_b.doutb_reg_reg[15] ),
        .dout(spkt_fifo_rdata),
        .empty(spkt_fifo_empty),
        .full(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_generic_pkt_overflow_UNCONNECTED),
        .prog_empty(NLW_generic_pkt_prog_empty_UNCONNECTED),
        .prog_full(NLW_generic_pkt_prog_full_UNCONNECTED),
        .rd_clk(s_axi_aclk),
        .rd_data_count(NLW_generic_pkt_rd_data_count_UNCONNECTED[4:0]),
        .rd_en(spkt_fifo_ren),
        .rd_rst_busy(NLW_generic_pkt_rd_rst_busy_UNCONNECTED),
        .rst(spkt_fifo_rst),
        .sbiterr(NLW_generic_pkt_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_generic_pkt_underflow_UNCONNECTED),
        .wr_ack(NLW_generic_pkt_wr_ack_UNCONNECTED),
        .wr_clk(m_axis_aclk),
        .wr_data_count(NLW_generic_pkt_wr_data_count_UNCONNECTED[4:0]),
        .wr_en(wr_en),
        .wr_rst_busy(NLW_generic_pkt_wr_rst_busy_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    generic_pkt_i_1
       (.I0(rstn_o),
        .O(spkt_fifo_rst));
  LUT5 #(
    .INIT(32'h00000800)) 
    generic_pkt_i_3
       (.I0(generic_pkt_i_4_n_0),
        .I1(s_axi_arvalid),
        .I2(wr_req),
        .I3(reset_released),
        .I4(rd_req),
        .O(spkt_fifo_ren));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    generic_pkt_i_4
       (.I0(s_axi_araddr[2]),
        .I1(s_axi_araddr[3]),
        .I2(s_axi_araddr[0]),
        .I3(s_axi_araddr[1]),
        .I4(s_axi_araddr[5]),
        .I5(s_axi_araddr[4]),
        .O(generic_pkt_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFEA00000000)) 
    interrupt_INST_0
       (.I0(interrupt_0),
        .I1(Q[1]),
        .I2(vcx_err),
        .I3(interrupt_INST_0_i_3_n_0),
        .I4(interrupt_1),
        .I5(interrupt_2),
        .O(interrupt));
  LUT4 #(
    .INIT(16'h4500)) 
    interrupt_INST_0_i_21
       (.I0(\s_axi_rdata_reg[19]_1 ),
        .I1(\isr_i_reg[43]_0 ),
        .I2(spkt_fifo_empty),
        .I3(Q[0]),
        .O(interrupt_INST_0_i_21_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    interrupt_INST_0_i_3
       (.I0(interrupt_3),
        .I1(interrupt_4),
        .I2(interrupt_5),
        .I3(interrupt_6),
        .I4(interrupt_7),
        .I5(interrupt_INST_0_i_21_n_0),
        .O(interrupt_INST_0_i_3_n_0));
  LUT4 #(
    .INIT(16'h7F0F)) 
    \isr_i[43]_i_1 
       (.I0(s_axi_wdata),
        .I1(\isr_i_reg[43] ),
        .I2(spkt_fifo_empty),
        .I3(\isr_i_reg[43]_0 ),
        .O(D));
  LUT6 #(
    .INIT(64'hBBBBBBB8BBB8BBB8)) 
    \s_axi_rdata[0]_i_1 
       (.I0(\s_axi_rdata_reg[0]_0 ),
        .I1(\s_axi_rdata_reg[0] [4]),
        .I2(\s_axi_rdata_reg[0]_1 ),
        .I3(\s_axi_rdata_reg[0]_2 ),
        .I4(\s_axi_rdata[0]_i_5_n_0 ),
        .I5(\s_axi_rdata_reg[0]_3 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [0]));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[0]_i_17 
       (.I0(\s_axi_rdata_reg[23] [0]),
        .I1(\s_axi_rdata[1]_i_4_0 [0]),
        .I2(\s_axi_rdata_reg[0] [5]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(spkt_fifo_rdata[0]),
        .I5(\s_axi_rdata[15]_i_2_0 [0]),
        .O(\s_axi_rdata[0]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hF000CC00AAAAAAAA)) 
    \s_axi_rdata[0]_i_5 
       (.I0(\s_axi_rdata[0]_i_17_n_0 ),
        .I1(\s_axi_rdata_reg[15]_2 [0]),
        .I2(\s_axi_rdata_reg[3]_2 [0]),
        .I3(\s_axi_rdata_reg[0] [5]),
        .I4(\s_axi_rdata_reg[0] [0]),
        .I5(\s_axi_rdata_reg[0] [1]),
        .O(\s_axi_rdata[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[10]_i_1 
       (.I0(\s_axi_rdata[10]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[10] ),
        .I2(\s_axi_rdata_reg[0] [2]),
        .I3(\s_axi_rdata_reg[0] [4]),
        .I4(\s_axi_rdata_reg[10]_0 ),
        .I5(\s_axi_rdata_reg[10]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [10]));
  LUT6 #(
    .INIT(64'hFFFFFFFFC8404040)) 
    \s_axi_rdata[10]_i_2 
       (.I0(\s_axi_rdata_reg[0] [1]),
        .I1(\s_axi_rdata_reg[0] [3]),
        .I2(\s_axi_rdata[10]_i_6_n_0 ),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [9]),
        .I5(\s_axi_rdata_reg[10]_2 ),
        .O(\s_axi_rdata[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00CCF0AA)) 
    \s_axi_rdata[10]_i_6 
       (.I0(spkt_fifo_rdata[10]),
        .I1(\s_axi_rdata[15]_i_2_0 [10]),
        .I2(\s_axi_rdata_reg[23] [6]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[11]_i_1 
       (.I0(\s_axi_rdata[11]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[11] ),
        .I2(\s_axi_rdata_reg[0] [2]),
        .I3(\s_axi_rdata_reg[0] [4]),
        .I4(\s_axi_rdata_reg[11]_0 ),
        .I5(\s_axi_rdata_reg[11]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [11]));
  LUT6 #(
    .INIT(64'hFFFFFFFFC8404040)) 
    \s_axi_rdata[11]_i_2 
       (.I0(\s_axi_rdata_reg[0] [1]),
        .I1(\s_axi_rdata_reg[0] [3]),
        .I2(\s_axi_rdata[11]_i_6_n_0 ),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [10]),
        .I5(\s_axi_rdata_reg[11]_2 ),
        .O(\s_axi_rdata[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00CCF0AA)) 
    \s_axi_rdata[11]_i_6 
       (.I0(spkt_fifo_rdata[11]),
        .I1(\s_axi_rdata[15]_i_2_0 [11]),
        .I2(\s_axi_rdata_reg[23] [7]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[12]_i_1 
       (.I0(\s_axi_rdata[12]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[12] ),
        .I4(\s_axi_rdata_reg[12]_0 ),
        .I5(\s_axi_rdata_reg[12]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [12]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[12]_i_2 
       (.I0(\s_axi_rdata_reg[12]_2 ),
        .I1(\s_axi_rdata[12]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [11]),
        .I4(\s_axi_rdata_reg[12]_3 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[12]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [8]),
        .I4(\s_axi_rdata[15]_i_2_0 [12]),
        .I5(spkt_fifo_rdata[12]),
        .O(\s_axi_rdata[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[13]_i_1 
       (.I0(\s_axi_rdata[13]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[13] ),
        .I4(\s_axi_rdata_reg[13]_0 ),
        .I5(\s_axi_rdata_reg[13]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [13]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[13]_i_2 
       (.I0(\s_axi_rdata_reg[13]_2 ),
        .I1(\s_axi_rdata[13]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [12]),
        .I4(\s_axi_rdata_reg[13]_3 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[13]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [9]),
        .I4(\s_axi_rdata[15]_i_2_0 [13]),
        .I5(spkt_fifo_rdata[13]),
        .O(\s_axi_rdata[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[14]_i_1 
       (.I0(\s_axi_rdata[14]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[14] ),
        .I2(\s_axi_rdata_reg[0] [2]),
        .I3(\s_axi_rdata_reg[0] [4]),
        .I4(\s_axi_rdata_reg[14]_0 ),
        .I5(\s_axi_rdata_reg[14]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [14]));
  LUT6 #(
    .INIT(64'hFFFFFFFFC8404040)) 
    \s_axi_rdata[14]_i_2 
       (.I0(\s_axi_rdata_reg[0] [1]),
        .I1(\s_axi_rdata_reg[0] [3]),
        .I2(\s_axi_rdata[14]_i_6_n_0 ),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [13]),
        .I5(\s_axi_rdata_reg[14]_2 ),
        .O(\s_axi_rdata[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00CCF0AA)) 
    \s_axi_rdata[14]_i_6 
       (.I0(spkt_fifo_rdata[14]),
        .I1(\s_axi_rdata[15]_i_2_0 [14]),
        .I2(\s_axi_rdata_reg[23] [10]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[15]_i_1 
       (.I0(\s_axi_rdata[15]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[15] ),
        .I2(\s_axi_rdata_reg[0] [2]),
        .I3(\s_axi_rdata_reg[0] [4]),
        .I4(\s_axi_rdata_reg[15]_0 ),
        .I5(\s_axi_rdata_reg[15]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [15]));
  LUT6 #(
    .INIT(64'hFFFFFFFFC8404040)) 
    \s_axi_rdata[15]_i_2 
       (.I0(\s_axi_rdata_reg[0] [1]),
        .I1(\s_axi_rdata_reg[0] [3]),
        .I2(\s_axi_rdata[15]_i_6_n_0 ),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [14]),
        .I5(\s_axi_rdata_reg[15]_3 ),
        .O(\s_axi_rdata[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00CCF0AA)) 
    \s_axi_rdata[15]_i_6 
       (.I0(spkt_fifo_rdata[15]),
        .I1(\s_axi_rdata[15]_i_2_0 [15]),
        .I2(\s_axi_rdata_reg[23] [11]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[16]_i_1 
       (.I0(\s_axi_rdata_reg[16] ),
        .I1(\s_axi_rdata_reg[16]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[16]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[16]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [16]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[16]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[0]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[16]),
        .I4(\s_axi_rdata_reg[23] [12]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[17]_i_1 
       (.I0(\s_axi_rdata_reg[17] ),
        .I1(\s_axi_rdata_reg[17]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[17]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[17]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [17]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[17]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[1]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[17]),
        .I4(\s_axi_rdata_reg[23] [13]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[18]_i_1 
       (.I0(\s_axi_rdata_reg[18] ),
        .I1(\s_axi_rdata_reg[18]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[18]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[18]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [18]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[18]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[2]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[18]),
        .I4(\s_axi_rdata_reg[23] [14]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[19]_i_1 
       (.I0(\s_axi_rdata_reg[19] ),
        .I1(\s_axi_rdata_reg[19]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata[19]_i_4_n_0 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[19]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [19]));
  LUT6 #(
    .INIT(64'hFFFF0D000D000D00)) 
    \s_axi_rdata[19]_i_4 
       (.I0(spkt_fifo_empty),
        .I1(\isr_i_reg[43]_0 ),
        .I2(\s_axi_rdata_reg[19]_1 ),
        .I3(\s_axi_rdata_reg[19]_2 ),
        .I4(Q[0]),
        .I5(\s_axi_rdata_reg[19]_3 ),
        .O(\s_axi_rdata[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[19]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[3]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[19]),
        .I4(\s_axi_rdata_reg[23] [15]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFE540000FE54)) 
    \s_axi_rdata[1]_i_1 
       (.I0(\s_axi_rdata_reg[0] [2]),
        .I1(\s_axi_rdata_reg[1] ),
        .I2(\s_axi_rdata_reg[1]_0 ),
        .I3(\s_axi_rdata[1]_i_4_n_0 ),
        .I4(\s_axi_rdata_reg[0] [4]),
        .I5(\s_axi_rdata_reg[1]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [1]));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[1]_i_11 
       (.I0(\s_axi_rdata_reg[23] [1]),
        .I1(\s_axi_rdata[1]_i_4_0 [1]),
        .I2(\s_axi_rdata_reg[0] [5]),
        .I3(\s_axi_rdata_reg[0] [0]),
        .I4(spkt_fifo_rdata[1]),
        .I5(\s_axi_rdata[15]_i_2_0 [1]),
        .O(\s_axi_rdata[1]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hF0AACCAA)) 
    \s_axi_rdata[1]_i_4 
       (.I0(\s_axi_rdata_reg[1]_2 ),
        .I1(\s_axi_rdata[1]_i_11_n_0 ),
        .I2(\s_axi_rdata_reg[1]_3 ),
        .I3(\s_axi_rdata_reg[0] [3]),
        .I4(\s_axi_rdata_reg[0] [1]),
        .O(\s_axi_rdata[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[20]_i_1 
       (.I0(\s_axi_rdata_reg[20] ),
        .I1(\s_axi_rdata_reg[20]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[20]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[20]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [20]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[20]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[4]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[20]),
        .I4(\s_axi_rdata_reg[23] [16]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[21]_i_1 
       (.I0(\s_axi_rdata_reg[21] ),
        .I1(\s_axi_rdata_reg[21]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[21]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[21]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [21]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[21]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[5]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[21]),
        .I4(\s_axi_rdata_reg[23] [17]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[22]_i_1 
       (.I0(\s_axi_rdata_reg[22] ),
        .I1(\s_axi_rdata_reg[22]_0 ),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[22]_1 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata[22]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [22]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[22]_i_5 
       (.I0(\s_axi_rdata_reg[24] ),
        .I1(lp_count_all[6]),
        .I2(\s_axi_rdata_reg[24]_0 ),
        .I3(spkt_fifo_rdata[22]),
        .I4(\s_axi_rdata_reg[23] [18]),
        .I5(\s_axi_rdata_reg[16]_2 ),
        .O(\s_axi_rdata[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFEEEEEEEAAAAAAAA)) 
    \s_axi_rdata[23]_i_1 
       (.I0(\s_axi_rdata_reg[23]_1 ),
        .I1(\s_axi_rdata[23]_i_3_n_0 ),
        .I2(\s_axi_rdata_reg[23] [19]),
        .I3(\s_axi_rdata_reg[23]_2 ),
        .I4(\s_axi_rdata_reg[0] [3]),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [23]));
  LUT6 #(
    .INIT(64'hFFFF008000800080)) 
    \s_axi_rdata[23]_i_3 
       (.I0(spkt_fifo_rdata[23]),
        .I1(\s_axi_rdata_reg[0] [3]),
        .I2(\s_axi_rdata_reg[23]_3 ),
        .I3(\s_axi_rdata_reg[0] [1]),
        .I4(lp_count_all[7]),
        .I5(\s_axi_rdata_reg[24] ),
        .O(\s_axi_rdata[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAA808080)) 
    \s_axi_rdata[24]_i_1 
       (.I0(\s_axi_rdata_reg[23]_0 ),
        .I1(\s_axi_rdata_reg[24] ),
        .I2(lp_count_all[8]),
        .I3(spkt_fifo_rdata[24]),
        .I4(\s_axi_rdata_reg[24]_0 ),
        .I5(\s_axi_rdata_reg[24]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [24]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAA808080)) 
    \s_axi_rdata[25]_i_1 
       (.I0(\s_axi_rdata_reg[23]_0 ),
        .I1(\s_axi_rdata_reg[24] ),
        .I2(lp_count_all[9]),
        .I3(spkt_fifo_rdata[25]),
        .I4(\s_axi_rdata_reg[24]_0 ),
        .I5(\s_axi_rdata_reg[25] ),
        .O(\gen_rd_b.doutb_reg_reg[25] [25]));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBB8B8B8)) 
    \s_axi_rdata[2]_i_1 
       (.I0(\s_axi_rdata_reg[2] ),
        .I1(\s_axi_rdata_reg[0] [4]),
        .I2(\s_axi_rdata_reg[2]_0 ),
        .I3(\s_axi_rdata_reg[2]_1 ),
        .I4(\s_axi_rdata[2]_i_4_n_0 ),
        .I5(\s_axi_rdata[2]_i_5_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [2]));
  LUT6 #(
    .INIT(64'hFF00F0F000001111)) 
    \s_axi_rdata[2]_i_13 
       (.I0(\s_axi_rdata_reg[19]_1 ),
        .I1(spkt_fifo_empty),
        .I2(\s_axi_rdata[2]_i_4_0 ),
        .I3(\s_axi_rdata[2]_i_4_1 ),
        .I4(\s_axi_rdata_reg[0] [0]),
        .I5(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF0A0C)) 
    \s_axi_rdata[2]_i_14 
       (.I0(\s_axi_rdata[15]_i_2_0 [2]),
        .I1(spkt_fifo_rdata[2]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[0] [5]),
        .I4(\s_axi_rdata[2]_i_5_0 ),
        .I5(\s_axi_rdata_reg[0] [1]),
        .O(\s_axi_rdata[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[2]_i_4 
       (.I0(\s_axi_rdata_reg[2]_4 ),
        .I1(\s_axi_rdata_reg[2]_5 ),
        .I2(\s_axi_rdata[2]_i_13_n_0 ),
        .I3(\s_axi_rdata_reg[0] [1]),
        .I4(\s_axi_rdata_reg[0] [0]),
        .I5(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[2]_i_5 
       (.I0(\s_axi_rdata_reg[0]_3 ),
        .I1(\s_axi_rdata_reg[2]_2 ),
        .I2(\s_axi_rdata_reg[3]_2 [1]),
        .I3(\s_axi_rdata_reg[15]_2 [1]),
        .I4(\s_axi_rdata_reg[2]_3 ),
        .I5(\s_axi_rdata[2]_i_14_n_0 ),
        .O(\s_axi_rdata[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBBBBB8B8B8)) 
    \s_axi_rdata[3]_i_1 
       (.I0(\s_axi_rdata_reg[3] ),
        .I1(\s_axi_rdata_reg[0] [4]),
        .I2(\s_axi_rdata_reg[3]_0 ),
        .I3(\s_axi_rdata_reg[2]_1 ),
        .I4(\s_axi_rdata_reg[3]_1 ),
        .I5(\s_axi_rdata[3]_i_6_n_0 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [3]));
  LUT6 #(
    .INIT(64'h00000000FFFF0A0C)) 
    \s_axi_rdata[3]_i_17 
       (.I0(\s_axi_rdata[15]_i_2_0 [3]),
        .I1(spkt_fifo_rdata[3]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[0] [5]),
        .I4(\s_axi_rdata[3]_i_6_0 ),
        .I5(\s_axi_rdata_reg[0] [1]),
        .O(\s_axi_rdata[3]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[3]_i_6 
       (.I0(\s_axi_rdata_reg[0]_3 ),
        .I1(\s_axi_rdata_reg[2]_2 ),
        .I2(\s_axi_rdata_reg[3]_2 [2]),
        .I3(\s_axi_rdata_reg[15]_2 [2]),
        .I4(\s_axi_rdata_reg[2]_3 ),
        .I5(\s_axi_rdata[3]_i_17_n_0 ),
        .O(\s_axi_rdata[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8B8B8B8B8B8B8)) 
    \s_axi_rdata[4]_i_1 
       (.I0(\s_axi_rdata_reg[4] ),
        .I1(\s_axi_rdata_reg[0] [4]),
        .I2(\s_axi_rdata_reg[4]_0 ),
        .I3(\s_axi_rdata[4]_i_4_n_0 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata_reg[0] [3]),
        .O(\gen_rd_b.doutb_reg_reg[25] [4]));
  LUT4 #(
    .INIT(16'h0A0C)) 
    \s_axi_rdata[4]_i_13 
       (.I0(\s_axi_rdata[15]_i_2_0 [4]),
        .I1(spkt_fifo_rdata[4]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFE0E0E0E)) 
    \s_axi_rdata[4]_i_4 
       (.I0(\s_axi_rdata[4]_i_13_n_0 ),
        .I1(\s_axi_rdata_reg[4]_1 ),
        .I2(\s_axi_rdata_reg[0] [1]),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [3]),
        .I5(\s_axi_rdata_reg[4]_3 ),
        .O(\s_axi_rdata[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBB8B8B8B8B8B8B8)) 
    \s_axi_rdata[5]_i_1 
       (.I0(\s_axi_rdata_reg[5] ),
        .I1(\s_axi_rdata_reg[0] [4]),
        .I2(\s_axi_rdata_reg[5]_0 ),
        .I3(\s_axi_rdata[5]_i_4_n_0 ),
        .I4(\s_axi_rdata_reg[0] [2]),
        .I5(\s_axi_rdata_reg[0] [3]),
        .O(\gen_rd_b.doutb_reg_reg[25] [5]));
  LUT4 #(
    .INIT(16'h0A0C)) 
    \s_axi_rdata[5]_i_13 
       (.I0(\s_axi_rdata[15]_i_2_0 [5]),
        .I1(spkt_fifo_rdata[5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[0] [5]),
        .O(\s_axi_rdata[5]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFE0E0E0E)) 
    \s_axi_rdata[5]_i_4 
       (.I0(\s_axi_rdata[5]_i_13_n_0 ),
        .I1(\s_axi_rdata_reg[5]_1 ),
        .I2(\s_axi_rdata_reg[0] [1]),
        .I3(\s_axi_rdata_reg[4]_2 ),
        .I4(\s_axi_rdata_reg[15]_2 [4]),
        .I5(\s_axi_rdata_reg[5]_2 ),
        .O(\s_axi_rdata[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[6]_i_1 
       (.I0(\s_axi_rdata[6]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[6] ),
        .I4(\s_axi_rdata_reg[6]_0 ),
        .I5(\s_axi_rdata_reg[6]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [6]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[6]_i_2 
       (.I0(\s_axi_rdata_reg[6]_2 ),
        .I1(\s_axi_rdata[6]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [5]),
        .I4(\s_axi_rdata_reg[6]_4 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[6]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [2]),
        .I4(\s_axi_rdata[15]_i_2_0 [6]),
        .I5(spkt_fifo_rdata[6]),
        .O(\s_axi_rdata[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[7]_i_1 
       (.I0(\s_axi_rdata[7]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[7] ),
        .I4(\s_axi_rdata_reg[7]_0 ),
        .I5(\s_axi_rdata_reg[7]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [7]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[7]_i_2 
       (.I0(\s_axi_rdata_reg[7]_2 ),
        .I1(\s_axi_rdata[7]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [6]),
        .I4(\s_axi_rdata_reg[7]_3 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[7]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [3]),
        .I4(\s_axi_rdata[15]_i_2_0 [7]),
        .I5(spkt_fifo_rdata[7]),
        .O(\s_axi_rdata[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[8]_i_1 
       (.I0(\s_axi_rdata[8]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[8] ),
        .I4(\s_axi_rdata_reg[8]_0 ),
        .I5(\s_axi_rdata_reg[8]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [8]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[8]_i_2 
       (.I0(\s_axi_rdata_reg[8]_2 ),
        .I1(\s_axi_rdata[8]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [7]),
        .I4(\s_axi_rdata_reg[8]_3 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[8]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [4]),
        .I4(\s_axi_rdata[15]_i_2_0 [8]),
        .I5(spkt_fifo_rdata[8]),
        .O(\s_axi_rdata[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hBBBBBBBAABABABAA)) 
    \s_axi_rdata[9]_i_1 
       (.I0(\s_axi_rdata[9]_i_2_n_0 ),
        .I1(\s_axi_rdata_reg[0] [2]),
        .I2(\s_axi_rdata_reg[0] [4]),
        .I3(\s_axi_rdata_reg[9] ),
        .I4(\s_axi_rdata_reg[9]_0 ),
        .I5(\s_axi_rdata_reg[9]_1 ),
        .O(\gen_rd_b.doutb_reg_reg[25] [9]));
  LUT6 #(
    .INIT(64'hFFFFFEEEAAAAAAAA)) 
    \s_axi_rdata[9]_i_2 
       (.I0(\s_axi_rdata_reg[9]_2 ),
        .I1(\s_axi_rdata[9]_i_7_n_0 ),
        .I2(\s_axi_rdata_reg[6]_3 ),
        .I3(\s_axi_rdata_reg[15]_2 [8]),
        .I4(\s_axi_rdata_reg[9]_3 ),
        .I5(\s_axi_rdata_reg[23]_0 ),
        .O(\s_axi_rdata[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2A0A220228082000)) 
    \s_axi_rdata[9]_i_7 
       (.I0(\s_axi_rdata[13]_i_2_0 ),
        .I1(\s_axi_rdata_reg[0] [5]),
        .I2(\s_axi_rdata_reg[0] [0]),
        .I3(\s_axi_rdata_reg[23] [5]),
        .I4(\s_axi_rdata[15]_i_2_0 [9]),
        .I5(spkt_fifo_rdata[9]),
        .O(\s_axi_rdata[9]_i_7_n_0 ));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_async_rst__1 xpm_arst_03
       (.dest_arst(rstn_o),
        .dest_clk(m_axis_aclk),
        .src_arst(xpm_arst_03_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    xpm_arst_03_i_1
       (.I0(m_axis_aresetn),
        .I1(dest_out),
        .O(xpm_arst_03_i_1_n_0));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_isr_cdc" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_isr_cdc
   (dest_out,
    dest_pulse,
    lx_info_all,
    \syncstages_ff_reg[2] ,
    p_0_in39_in,
    p_0_in34_in,
    p_0_in33_in,
    p_0_in30_in,
    p_0_in29_in,
    p_0_in28_in,
    p_0_in27_in,
    p_0_in8_in,
    p_0_in7_in,
    p_0_in6_in,
    p_0_in5_in,
    isr_55,
    \isr_i_reg[46]_0 ,
    \isr_i_reg[55]_0 ,
    \ier_reg[3] ,
    vcx_err,
    m_axis_aclk,
    src_in,
    s_axi_aclk,
    Q,
    wc_err,
    SR,
    SS,
    dl0_errcontrol,
    dl0_erresc,
    dl0_stopstate,
    dl0_rxulpmesc,
    dl1_errcontrol,
    dl1_erresc,
    dl1_stopstate,
    dl1_rxulpmesc,
    dl2_errcontrol,
    dl2_erresc,
    dl2_stopstate,
    dl2_rxulpmesc,
    dl3_errcontrol,
    dl3_erresc,
    dl3_stopstate,
    dl3_rxulpmesc,
    cl_rxulpsclknot,
    cl_stopstate,
    \src_hsdata_ff_reg[0] ,
    \src_hsdata_ff_reg[0]_0 ,
    \s_axi_rdata_reg[23] ,
    D,
    s_axi_wdata,
    wr2_isr1,
    wr2_isr2,
    m_axis_aresetn,
    dout,
    \HSC2R_CDC[35].hsc2r_send_reg[35]_0 ,
    pkt_valid,
    \HSC2R_CDC[30].hsc2r_send_reg[30]_0 ,
    \HSC2R_CDC[0].hsc2r_send_reg[0]_0 ,
    \HSC2R_CDC[2].hsc2r_send_reg[2]_0 ,
    \HSC2R_CDC[4].hsc2r_send_reg[4]_0 ,
    \HSC2R_CDC[6].hsc2r_send_reg[6]_0 ,
    \HSC2R_CDC[8].hsc2r_send_reg[8]_0 ,
    \HSC2R_CDC[10].hsc2r_send_reg[10]_0 ,
    \HSC2R_CDC[12].hsc2r_send_reg[12]_0 ,
    \HSC2R_CDC[14].hsc2r_send_reg[14]_0 ,
    \HSC2R_CDC[16].hsc2r_send_reg[16]_0 ,
    \HSC2R_CDC[18].hsc2r_send_reg[18]_0 ,
    \HSC2R_CDC[20].hsc2r_send_reg[20]_0 ,
    \HSC2R_CDC[22].hsc2r_send_reg[22]_0 ,
    \HSC2R_CDC[24].hsc2r_send_reg[24]_0 ,
    \HSC2R_CDC[26].hsc2r_send_reg[26]_0 ,
    \HSC2R_CDC[28].hsc2r_send_reg[28]_0 ,
    p_0_in,
    diwc_valid,
    \HSC2R_CDC[32].hsc2r_send_reg[32]_0 ,
    crc_done,
    crc_status,
    phecc_done,
    interrupt_INST_0_i_3,
    \isr_i_reg[0]_0 ,
    E);
  output [1:0]dest_out;
  output dest_pulse;
  output [7:0]lx_info_all;
  output \syncstages_ff_reg[2] ;
  output p_0_in39_in;
  output p_0_in34_in;
  output p_0_in33_in;
  output p_0_in30_in;
  output p_0_in29_in;
  output p_0_in28_in;
  output p_0_in27_in;
  output p_0_in8_in;
  output p_0_in7_in;
  output p_0_in6_in;
  output p_0_in5_in;
  output isr_55;
  output [36:0]\isr_i_reg[46]_0 ;
  output [16:0]\isr_i_reg[55]_0 ;
  output \ier_reg[3] ;
  output vcx_err;
  input m_axis_aclk;
  input [1:0]src_in;
  input s_axi_aclk;
  input [1:0]Q;
  input wc_err;
  input [0:0]SR;
  input [0:0]SS;
  input dl0_errcontrol;
  input dl0_erresc;
  input dl0_stopstate;
  input dl0_rxulpmesc;
  input dl1_errcontrol;
  input dl1_erresc;
  input dl1_stopstate;
  input dl1_rxulpmesc;
  input dl2_errcontrol;
  input dl2_erresc;
  input dl2_stopstate;
  input dl2_rxulpmesc;
  input dl3_errcontrol;
  input dl3_erresc;
  input dl3_stopstate;
  input dl3_rxulpmesc;
  input cl_rxulpsclknot;
  input cl_stopstate;
  input [39:0]\src_hsdata_ff_reg[0] ;
  input [0:0]\src_hsdata_ff_reg[0]_0 ;
  input [0:0]\s_axi_rdata_reg[23] ;
  input [1:0]D;
  input [24:0]s_axi_wdata;
  input wr2_isr1;
  input wr2_isr2;
  input m_axis_aresetn;
  input [4:0]dout;
  input \HSC2R_CDC[35].hsc2r_send_reg[35]_0 ;
  input pkt_valid;
  input [15:0]\HSC2R_CDC[30].hsc2r_send_reg[30]_0 ;
  input \HSC2R_CDC[0].hsc2r_send_reg[0]_0 ;
  input \HSC2R_CDC[2].hsc2r_send_reg[2]_0 ;
  input \HSC2R_CDC[4].hsc2r_send_reg[4]_0 ;
  input \HSC2R_CDC[6].hsc2r_send_reg[6]_0 ;
  input \HSC2R_CDC[8].hsc2r_send_reg[8]_0 ;
  input \HSC2R_CDC[10].hsc2r_send_reg[10]_0 ;
  input \HSC2R_CDC[12].hsc2r_send_reg[12]_0 ;
  input \HSC2R_CDC[14].hsc2r_send_reg[14]_0 ;
  input \HSC2R_CDC[16].hsc2r_send_reg[16]_0 ;
  input \HSC2R_CDC[18].hsc2r_send_reg[18]_0 ;
  input \HSC2R_CDC[20].hsc2r_send_reg[20]_0 ;
  input \HSC2R_CDC[22].hsc2r_send_reg[22]_0 ;
  input \HSC2R_CDC[24].hsc2r_send_reg[24]_0 ;
  input \HSC2R_CDC[26].hsc2r_send_reg[26]_0 ;
  input \HSC2R_CDC[28].hsc2r_send_reg[28]_0 ;
  input p_0_in;
  input diwc_valid;
  input \HSC2R_CDC[32].hsc2r_send_reg[32]_0 ;
  input crc_done;
  input crc_status;
  input phecc_done;
  input [2:0]interrupt_INST_0_i_3;
  input [0:0]\isr_i_reg[0]_0 ;
  input [1:0]E;

  wire [1:0]D;
  wire [1:0]E;
  wire \HSC2R_CDC[0].hsc2r_send[0]_i_1_n_0 ;
  wire \HSC2R_CDC[0].hsc2r_send_reg[0]_0 ;
  wire \HSC2R_CDC[10].hsc2r_send[10]_i_1_n_0 ;
  wire \HSC2R_CDC[10].hsc2r_send_reg[10]_0 ;
  wire \HSC2R_CDC[11].hsc2r_send[11]_i_1_n_0 ;
  wire \HSC2R_CDC[12].hsc2r_send[12]_i_1_n_0 ;
  wire \HSC2R_CDC[12].hsc2r_send_reg[12]_0 ;
  wire \HSC2R_CDC[13].hsc2r_send[13]_i_1_n_0 ;
  wire \HSC2R_CDC[14].hsc2r_send[14]_i_1_n_0 ;
  wire \HSC2R_CDC[14].hsc2r_send_reg[14]_0 ;
  wire \HSC2R_CDC[15].hsc2r_send[15]_i_1_n_0 ;
  wire \HSC2R_CDC[16].hsc2r_send[16]_i_1_n_0 ;
  wire \HSC2R_CDC[16].hsc2r_send_reg[16]_0 ;
  wire \HSC2R_CDC[17].hsc2r_send[17]_i_1_n_0 ;
  wire \HSC2R_CDC[18].hsc2r_send[18]_i_1_n_0 ;
  wire \HSC2R_CDC[18].hsc2r_send_reg[18]_0 ;
  wire \HSC2R_CDC[19].hsc2r_send[19]_i_1_n_0 ;
  wire \HSC2R_CDC[1].hsc2r_send[1]_i_1_n_0 ;
  wire \HSC2R_CDC[20].hsc2r_send[20]_i_1_n_0 ;
  wire \HSC2R_CDC[20].hsc2r_send_reg[20]_0 ;
  wire \HSC2R_CDC[21].hsc2r_send[21]_i_1_n_0 ;
  wire \HSC2R_CDC[22].hsc2r_send[22]_i_1_n_0 ;
  wire \HSC2R_CDC[22].hsc2r_send_reg[22]_0 ;
  wire \HSC2R_CDC[23].hsc2r_send[23]_i_1_n_0 ;
  wire \HSC2R_CDC[24].hsc2r_send[24]_i_1_n_0 ;
  wire \HSC2R_CDC[24].hsc2r_send_reg[24]_0 ;
  wire \HSC2R_CDC[25].hsc2r_send[25]_i_1_n_0 ;
  wire \HSC2R_CDC[26].hsc2r_send[26]_i_1_n_0 ;
  wire \HSC2R_CDC[26].hsc2r_send_reg[26]_0 ;
  wire \HSC2R_CDC[27].hsc2r_send[27]_i_1_n_0 ;
  wire \HSC2R_CDC[28].hsc2r_send[28]_i_1_n_0 ;
  wire \HSC2R_CDC[28].hsc2r_send_reg[28]_0 ;
  wire \HSC2R_CDC[29].hsc2r_send[29]_i_1_n_0 ;
  wire \HSC2R_CDC[2].hsc2r_send[2]_i_1_n_0 ;
  wire \HSC2R_CDC[2].hsc2r_send_reg[2]_0 ;
  wire \HSC2R_CDC[30].hsc2r_send[30]_i_1_n_0 ;
  wire [15:0]\HSC2R_CDC[30].hsc2r_send_reg[30]_0 ;
  wire \HSC2R_CDC[31].hsc2r_send[31]_i_1_n_0 ;
  wire \HSC2R_CDC[32].hsc2r_send[32]_i_1_n_0 ;
  wire \HSC2R_CDC[32].hsc2r_send_reg[32]_0 ;
  wire \HSC2R_CDC[33].hsc2r_send[33]_i_1_n_0 ;
  wire \HSC2R_CDC[34].hsc2r_send[34]_i_1_n_0 ;
  wire \HSC2R_CDC[35].hsc2r_send[35]_i_1_n_0 ;
  wire \HSC2R_CDC[35].hsc2r_send_reg[35]_0 ;
  wire \HSC2R_CDC[36].hsc2r_send[36]_i_1_n_0 ;
  wire \HSC2R_CDC[37].hsc2r_send[37]_i_1_n_0 ;
  wire \HSC2R_CDC[38].hsc2r_send[38]_i_1_n_0 ;
  wire \HSC2R_CDC[39].hsc2r_send[39]_i_1_n_0 ;
  wire \HSC2R_CDC[3].hsc2r_send[3]_i_1_n_0 ;
  wire \HSC2R_CDC[44].hsc2r_send[44]_i_1_n_0 ;
  wire \HSC2R_CDC[4].hsc2r_send[4]_i_1_n_0 ;
  wire \HSC2R_CDC[4].hsc2r_send_reg[4]_0 ;
  wire \HSC2R_CDC[5].hsc2r_send[5]_i_1_n_0 ;
  wire \HSC2R_CDC[6].hsc2r_send[6]_i_1_n_0 ;
  wire \HSC2R_CDC[6].hsc2r_send_reg[6]_0 ;
  wire \HSC2R_CDC[7].hsc2r_send[7]_i_1_n_0 ;
  wire \HSC2R_CDC[8].hsc2r_send[8]_i_1_n_0 ;
  wire \HSC2R_CDC[8].hsc2r_send_reg[8]_0 ;
  wire \HSC2R_CDC[9].hsc2r_send[9]_i_1_n_0 ;
  wire \PPI_CL_ASYNC[0].xpm_single_cl_sb_n_0 ;
  wire \PPI_DL_ASYNC[10].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[11].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[12].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[13].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[15].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[16].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[17].xpm_single_dl_sb_n_0 ;
  wire \PPI_DL_ASYNC[18].xpm_single_dl_sb_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [0:0]SS;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire crc_done;
  wire crc_status;
  wire [1:0]dest_out;
  wire dest_pulse;
  wire diwc_valid;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_rxulpmesc;
  wire dl0_stopstate;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_rxulpmesc;
  wire dl1_stopstate;
  wire dl2_errcontrol;
  wire dl2_erresc;
  wire dl2_rxulpmesc;
  wire dl2_stopstate;
  wire dl3_errcontrol;
  wire dl3_erresc;
  wire dl3_rxulpmesc;
  wire dl3_stopstate;
  wire [4:0]dout;
  wire ecc_rcv;
  wire ecc_send;
  wire ecc_send_i_1_n_0;
  wire ecc_vld;
  wire ecc_vld_i;
  wire [1:0]ecc_vld_out;
  wire \ecc_vld_out[0]_i_1_n_0 ;
  wire \ecc_vld_out[1]_i_1_n_0 ;
  wire [1:0]ecc_vld_out_i;
  wire hsc2r_rcv_0;
  wire hsc2r_rcv_1;
  wire hsc2r_rcv_10;
  wire hsc2r_rcv_11;
  wire hsc2r_rcv_12;
  wire hsc2r_rcv_13;
  wire hsc2r_rcv_14;
  wire hsc2r_rcv_15;
  wire hsc2r_rcv_16;
  wire hsc2r_rcv_17;
  wire hsc2r_rcv_18;
  wire hsc2r_rcv_19;
  wire hsc2r_rcv_2;
  wire hsc2r_rcv_20;
  wire hsc2r_rcv_21;
  wire hsc2r_rcv_22;
  wire hsc2r_rcv_23;
  wire hsc2r_rcv_24;
  wire hsc2r_rcv_25;
  wire hsc2r_rcv_26;
  wire hsc2r_rcv_27;
  wire hsc2r_rcv_28;
  wire hsc2r_rcv_29;
  wire hsc2r_rcv_3;
  wire hsc2r_rcv_30;
  wire hsc2r_rcv_31;
  wire hsc2r_rcv_32;
  wire hsc2r_rcv_33;
  wire hsc2r_rcv_34;
  wire hsc2r_rcv_35;
  wire hsc2r_rcv_36;
  wire hsc2r_rcv_37;
  wire hsc2r_rcv_38;
  wire hsc2r_rcv_39;
  wire hsc2r_rcv_4;
  wire hsc2r_rcv_40;
  wire hsc2r_rcv_41;
  wire hsc2r_rcv_42;
  wire hsc2r_rcv_43;
  wire hsc2r_rcv_44;
  wire hsc2r_rcv_5;
  wire hsc2r_rcv_6;
  wire hsc2r_rcv_7;
  wire hsc2r_rcv_8;
  wire hsc2r_rcv_9;
  wire [44:0]hsc2r_send;
  wire hsc2r_vld_i_0;
  wire hsc2r_vld_i_1;
  wire hsc2r_vld_i_10;
  wire hsc2r_vld_i_11;
  wire hsc2r_vld_i_12;
  wire hsc2r_vld_i_13;
  wire hsc2r_vld_i_14;
  wire hsc2r_vld_i_15;
  wire hsc2r_vld_i_16;
  wire hsc2r_vld_i_17;
  wire hsc2r_vld_i_18;
  wire hsc2r_vld_i_19;
  wire hsc2r_vld_i_2;
  wire hsc2r_vld_i_20;
  wire hsc2r_vld_i_21;
  wire hsc2r_vld_i_22;
  wire hsc2r_vld_i_23;
  wire hsc2r_vld_i_24;
  wire hsc2r_vld_i_25;
  wire hsc2r_vld_i_26;
  wire hsc2r_vld_i_27;
  wire hsc2r_vld_i_28;
  wire hsc2r_vld_i_29;
  wire hsc2r_vld_i_3;
  wire hsc2r_vld_i_30;
  wire hsc2r_vld_i_31;
  wire hsc2r_vld_i_32;
  wire hsc2r_vld_i_33;
  wire hsc2r_vld_i_36;
  wire hsc2r_vld_i_37;
  wire hsc2r_vld_i_4;
  wire hsc2r_vld_i_44;
  wire hsc2r_vld_i_5;
  wire hsc2r_vld_i_6;
  wire hsc2r_vld_i_7;
  wire hsc2r_vld_i_8;
  wire hsc2r_vld_i_9;
  wire \ier_reg[3] ;
  wire interrupt_INST_0_i_10_n_0;
  wire interrupt_INST_0_i_11_n_0;
  wire interrupt_INST_0_i_14_n_0;
  wire interrupt_INST_0_i_15_n_0;
  wire [2:0]interrupt_INST_0_i_3;
  wire interrupt_INST_0_i_37_n_0;
  wire interrupt_INST_0_i_38_n_0;
  wire isr_0;
  wire isr_55;
  wire [0:0]\isr_i_reg[0]_0 ;
  wire [36:0]\isr_i_reg[46]_0 ;
  wire [16:0]\isr_i_reg[55]_0 ;
  wire \isr_i_reg_n_0_[0] ;
  wire \isr_i_reg_n_0_[2] ;
  wire \isr_i_reg_n_0_[3] ;
  wire \isr_i_reg_n_0_[4] ;
  wire \isr_i_reg_n_0_[5] ;
  wire [33:10]isr_o;
  wire [7:0]lx_info_all;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire p_0_in;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in12_in;
  wire p_0_in13_in;
  wire p_0_in14_in;
  wire p_0_in15_in;
  wire p_0_in16_in;
  wire p_0_in17_in;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire p_0_in22_in;
  wire p_0_in23_in;
  wire p_0_in24_in;
  wire p_0_in25_in;
  wire p_0_in26_in;
  wire p_0_in27_in;
  wire p_0_in28_in;
  wire p_0_in29_in;
  wire p_0_in30_in;
  wire p_0_in31_in;
  wire p_0_in32_in;
  wire p_0_in33_in;
  wire p_0_in34_in;
  wire p_0_in35_in;
  wire p_0_in36_in;
  wire p_0_in37_in;
  wire p_0_in38_in;
  wire p_0_in39_in;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire p_0_in7_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire [23:0]p_0_in_0;
  wire [55:0]p_1_in;
  wire [9:2]p_3_in;
  wire phecc_done;
  wire pkt_valid;
  wire ppi_dl_sb_14;
  wire ppi_dl_sb_19;
  wire ppi_dl_sb_4;
  wire ppi_dl_sb_9;
  wire s_axi_aclk;
  wire [0:0]\s_axi_rdata_reg[23] ;
  wire [24:0]s_axi_wdata;
  wire [39:0]\src_hsdata_ff_reg[0] ;
  wire [0:0]\src_hsdata_ff_reg[0]_0 ;
  wire [1:0]src_in;
  wire \syncstages_ff_reg[2] ;
  wire vcx_err;
  wire wc_err;
  wire wr2_isr1;
  wire wr2_isr2;
  wire [0:0]\NLW_HSC2R_CDC[0].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[10].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[11].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[12].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[13].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[14].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[15].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[16].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[17].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[18].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[19].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[1].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[20].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[21].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[22].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[23].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[24].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[25].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[26].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[27].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[28].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[29].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[2].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[30].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[31].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[32].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[33].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[34].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[34].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[35].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[35].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[36].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[37].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[38].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[38].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[39].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[39].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[3].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[40].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[40].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[41].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[41].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[42].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[42].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire \NLW_HSC2R_CDC[43].hsc2r_bus_cdc_dest_req_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[43].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[44].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[4].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[5].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[6].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[7].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[8].hsc2r_bus_cdc_dest_out_UNCONNECTED ;
  wire [0:0]\NLW_HSC2R_CDC[9].hsc2r_bus_cdc_dest_out_UNCONNECTED ;

  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__1 \HSC2R_CDC[0].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[0].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_0),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [0]),
        .src_rcv(hsc2r_rcv_0),
        .src_send(hsc2r_send[0]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[0].hsc2r_send[0]_i_1 
       (.I0(hsc2r_send[0]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [0]),
        .I2(\HSC2R_CDC[0].hsc2r_send_reg[0]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_0),
        .O(\HSC2R_CDC[0].hsc2r_send[0]_i_1_n_0 ));
  FDRE \HSC2R_CDC[0].hsc2r_send_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[0].hsc2r_send[0]_i_1_n_0 ),
        .Q(hsc2r_send[0]),
        .R(1'b0));
  FDRE \HSC2R_CDC[0].hsc2r_vld_out_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_0),
        .Q(isr_0),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__11 \HSC2R_CDC[10].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[10].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_10),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [10]),
        .src_rcv(hsc2r_rcv_10),
        .src_send(hsc2r_send[10]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[10].hsc2r_send[10]_i_1 
       (.I0(hsc2r_send[10]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [5]),
        .I2(\HSC2R_CDC[10].hsc2r_send_reg[10]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_10),
        .O(\HSC2R_CDC[10].hsc2r_send[10]_i_1_n_0 ));
  FDRE \HSC2R_CDC[10].hsc2r_send_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[10].hsc2r_send[10]_i_1_n_0 ),
        .Q(hsc2r_send[10]),
        .R(1'b0));
  FDRE \HSC2R_CDC[10].hsc2r_vld_out_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_10),
        .Q(p_0_in30_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__12 \HSC2R_CDC[11].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[11].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_11),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [11]),
        .src_rcv(hsc2r_rcv_11),
        .src_send(hsc2r_send[11]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[11].hsc2r_send[11]_i_1 
       (.I0(hsc2r_send[11]),
        .I1(\src_hsdata_ff_reg[0] [11]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_11),
        .O(\HSC2R_CDC[11].hsc2r_send[11]_i_1_n_0 ));
  FDRE \HSC2R_CDC[11].hsc2r_send_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[11].hsc2r_send[11]_i_1_n_0 ),
        .Q(hsc2r_send[11]),
        .R(1'b0));
  FDRE \HSC2R_CDC[11].hsc2r_vld_out_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_11),
        .Q(p_0_in29_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__13 \HSC2R_CDC[12].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[12].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_12),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [12]),
        .src_rcv(hsc2r_rcv_12),
        .src_send(hsc2r_send[12]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[12].hsc2r_send[12]_i_1 
       (.I0(hsc2r_send[12]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [6]),
        .I2(\HSC2R_CDC[12].hsc2r_send_reg[12]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_12),
        .O(\HSC2R_CDC[12].hsc2r_send[12]_i_1_n_0 ));
  FDRE \HSC2R_CDC[12].hsc2r_send_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[12].hsc2r_send[12]_i_1_n_0 ),
        .Q(hsc2r_send[12]),
        .R(1'b0));
  FDRE \HSC2R_CDC[12].hsc2r_vld_out_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_12),
        .Q(p_0_in28_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__14 \HSC2R_CDC[13].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[13].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_13),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [13]),
        .src_rcv(hsc2r_rcv_13),
        .src_send(hsc2r_send[13]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[13].hsc2r_send[13]_i_1 
       (.I0(hsc2r_send[13]),
        .I1(\src_hsdata_ff_reg[0] [13]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_13),
        .O(\HSC2R_CDC[13].hsc2r_send[13]_i_1_n_0 ));
  FDRE \HSC2R_CDC[13].hsc2r_send_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[13].hsc2r_send[13]_i_1_n_0 ),
        .Q(hsc2r_send[13]),
        .R(1'b0));
  FDRE \HSC2R_CDC[13].hsc2r_vld_out_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_13),
        .Q(p_0_in27_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__15 \HSC2R_CDC[14].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[14].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_14),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [14]),
        .src_rcv(hsc2r_rcv_14),
        .src_send(hsc2r_send[14]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[14].hsc2r_send[14]_i_1 
       (.I0(hsc2r_send[14]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [7]),
        .I2(\HSC2R_CDC[14].hsc2r_send_reg[14]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_14),
        .O(\HSC2R_CDC[14].hsc2r_send[14]_i_1_n_0 ));
  FDRE \HSC2R_CDC[14].hsc2r_send_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[14].hsc2r_send[14]_i_1_n_0 ),
        .Q(hsc2r_send[14]),
        .R(1'b0));
  FDRE \HSC2R_CDC[14].hsc2r_vld_out_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_14),
        .Q(p_0_in26_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__16 \HSC2R_CDC[15].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[15].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_15),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [15]),
        .src_rcv(hsc2r_rcv_15),
        .src_send(hsc2r_send[15]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[15].hsc2r_send[15]_i_1 
       (.I0(hsc2r_send[15]),
        .I1(\src_hsdata_ff_reg[0] [15]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_15),
        .O(\HSC2R_CDC[15].hsc2r_send[15]_i_1_n_0 ));
  FDRE \HSC2R_CDC[15].hsc2r_send_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[15].hsc2r_send[15]_i_1_n_0 ),
        .Q(hsc2r_send[15]),
        .R(1'b0));
  FDRE \HSC2R_CDC[15].hsc2r_vld_out_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_15),
        .Q(p_0_in25_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__17 \HSC2R_CDC[16].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[16].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_16),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [16]),
        .src_rcv(hsc2r_rcv_16),
        .src_send(hsc2r_send[16]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[16].hsc2r_send[16]_i_1 
       (.I0(hsc2r_send[16]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [8]),
        .I2(\HSC2R_CDC[16].hsc2r_send_reg[16]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_16),
        .O(\HSC2R_CDC[16].hsc2r_send[16]_i_1_n_0 ));
  FDRE \HSC2R_CDC[16].hsc2r_send_reg[16] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[16].hsc2r_send[16]_i_1_n_0 ),
        .Q(hsc2r_send[16]),
        .R(1'b0));
  FDRE \HSC2R_CDC[16].hsc2r_vld_out_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_16),
        .Q(p_0_in24_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__18 \HSC2R_CDC[17].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[17].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_17),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [17]),
        .src_rcv(hsc2r_rcv_17),
        .src_send(hsc2r_send[17]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[17].hsc2r_send[17]_i_1 
       (.I0(hsc2r_send[17]),
        .I1(\src_hsdata_ff_reg[0] [17]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_17),
        .O(\HSC2R_CDC[17].hsc2r_send[17]_i_1_n_0 ));
  FDRE \HSC2R_CDC[17].hsc2r_send_reg[17] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[17].hsc2r_send[17]_i_1_n_0 ),
        .Q(hsc2r_send[17]),
        .R(1'b0));
  FDRE \HSC2R_CDC[17].hsc2r_vld_out_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_17),
        .Q(p_0_in23_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__19 \HSC2R_CDC[18].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[18].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_18),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [18]),
        .src_rcv(hsc2r_rcv_18),
        .src_send(hsc2r_send[18]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[18].hsc2r_send[18]_i_1 
       (.I0(hsc2r_send[18]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [9]),
        .I2(\HSC2R_CDC[18].hsc2r_send_reg[18]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_18),
        .O(\HSC2R_CDC[18].hsc2r_send[18]_i_1_n_0 ));
  FDRE \HSC2R_CDC[18].hsc2r_send_reg[18] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[18].hsc2r_send[18]_i_1_n_0 ),
        .Q(hsc2r_send[18]),
        .R(1'b0));
  FDRE \HSC2R_CDC[18].hsc2r_vld_out_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_18),
        .Q(p_0_in22_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__20 \HSC2R_CDC[19].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[19].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_19),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [19]),
        .src_rcv(hsc2r_rcv_19),
        .src_send(hsc2r_send[19]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[19].hsc2r_send[19]_i_1 
       (.I0(hsc2r_send[19]),
        .I1(\src_hsdata_ff_reg[0] [19]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_19),
        .O(\HSC2R_CDC[19].hsc2r_send[19]_i_1_n_0 ));
  FDRE \HSC2R_CDC[19].hsc2r_send_reg[19] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[19].hsc2r_send[19]_i_1_n_0 ),
        .Q(hsc2r_send[19]),
        .R(1'b0));
  FDRE \HSC2R_CDC[19].hsc2r_vld_out_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_19),
        .Q(p_0_in21_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__2 \HSC2R_CDC[1].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[1].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_1),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [1]),
        .src_rcv(hsc2r_rcv_1),
        .src_send(hsc2r_send[1]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[1].hsc2r_send[1]_i_1 
       (.I0(hsc2r_send[1]),
        .I1(\src_hsdata_ff_reg[0] [1]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_1),
        .O(\HSC2R_CDC[1].hsc2r_send[1]_i_1_n_0 ));
  FDRE \HSC2R_CDC[1].hsc2r_send_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[1].hsc2r_send[1]_i_1_n_0 ),
        .Q(hsc2r_send[1]),
        .R(1'b0));
  FDRE \HSC2R_CDC[1].hsc2r_vld_out_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_1),
        .Q(p_0_in39_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__21 \HSC2R_CDC[20].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[20].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_20),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [20]),
        .src_rcv(hsc2r_rcv_20),
        .src_send(hsc2r_send[20]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[20].hsc2r_send[20]_i_1 
       (.I0(hsc2r_send[20]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [10]),
        .I2(\HSC2R_CDC[20].hsc2r_send_reg[20]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_20),
        .O(\HSC2R_CDC[20].hsc2r_send[20]_i_1_n_0 ));
  FDRE \HSC2R_CDC[20].hsc2r_send_reg[20] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[20].hsc2r_send[20]_i_1_n_0 ),
        .Q(hsc2r_send[20]),
        .R(1'b0));
  FDRE \HSC2R_CDC[20].hsc2r_vld_out_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_20),
        .Q(p_0_in20_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__22 \HSC2R_CDC[21].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[21].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_21),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [21]),
        .src_rcv(hsc2r_rcv_21),
        .src_send(hsc2r_send[21]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[21].hsc2r_send[21]_i_1 
       (.I0(hsc2r_send[21]),
        .I1(\src_hsdata_ff_reg[0] [21]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_21),
        .O(\HSC2R_CDC[21].hsc2r_send[21]_i_1_n_0 ));
  FDRE \HSC2R_CDC[21].hsc2r_send_reg[21] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[21].hsc2r_send[21]_i_1_n_0 ),
        .Q(hsc2r_send[21]),
        .R(1'b0));
  FDRE \HSC2R_CDC[21].hsc2r_vld_out_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_21),
        .Q(p_0_in19_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__23 \HSC2R_CDC[22].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[22].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_22),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [22]),
        .src_rcv(hsc2r_rcv_22),
        .src_send(hsc2r_send[22]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[22].hsc2r_send[22]_i_1 
       (.I0(hsc2r_send[22]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [11]),
        .I2(\HSC2R_CDC[22].hsc2r_send_reg[22]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_22),
        .O(\HSC2R_CDC[22].hsc2r_send[22]_i_1_n_0 ));
  FDRE \HSC2R_CDC[22].hsc2r_send_reg[22] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[22].hsc2r_send[22]_i_1_n_0 ),
        .Q(hsc2r_send[22]),
        .R(1'b0));
  FDRE \HSC2R_CDC[22].hsc2r_vld_out_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_22),
        .Q(p_0_in18_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__24 \HSC2R_CDC[23].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[23].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_23),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [23]),
        .src_rcv(hsc2r_rcv_23),
        .src_send(hsc2r_send[23]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[23].hsc2r_send[23]_i_1 
       (.I0(hsc2r_send[23]),
        .I1(\src_hsdata_ff_reg[0] [23]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_23),
        .O(\HSC2R_CDC[23].hsc2r_send[23]_i_1_n_0 ));
  FDRE \HSC2R_CDC[23].hsc2r_send_reg[23] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[23].hsc2r_send[23]_i_1_n_0 ),
        .Q(hsc2r_send[23]),
        .R(1'b0));
  FDRE \HSC2R_CDC[23].hsc2r_vld_out_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_23),
        .Q(p_0_in17_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__25 \HSC2R_CDC[24].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[24].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_24),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [24]),
        .src_rcv(hsc2r_rcv_24),
        .src_send(hsc2r_send[24]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[24].hsc2r_send[24]_i_1 
       (.I0(hsc2r_send[24]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [12]),
        .I2(\HSC2R_CDC[24].hsc2r_send_reg[24]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_24),
        .O(\HSC2R_CDC[24].hsc2r_send[24]_i_1_n_0 ));
  FDRE \HSC2R_CDC[24].hsc2r_send_reg[24] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[24].hsc2r_send[24]_i_1_n_0 ),
        .Q(hsc2r_send[24]),
        .R(1'b0));
  FDRE \HSC2R_CDC[24].hsc2r_vld_out_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_24),
        .Q(p_0_in16_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__26 \HSC2R_CDC[25].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[25].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_25),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [25]),
        .src_rcv(hsc2r_rcv_25),
        .src_send(hsc2r_send[25]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[25].hsc2r_send[25]_i_1 
       (.I0(hsc2r_send[25]),
        .I1(\src_hsdata_ff_reg[0] [25]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_25),
        .O(\HSC2R_CDC[25].hsc2r_send[25]_i_1_n_0 ));
  FDRE \HSC2R_CDC[25].hsc2r_send_reg[25] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[25].hsc2r_send[25]_i_1_n_0 ),
        .Q(hsc2r_send[25]),
        .R(1'b0));
  FDRE \HSC2R_CDC[25].hsc2r_vld_out_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_25),
        .Q(p_0_in15_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__27 \HSC2R_CDC[26].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[26].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_26),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [26]),
        .src_rcv(hsc2r_rcv_26),
        .src_send(hsc2r_send[26]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[26].hsc2r_send[26]_i_1 
       (.I0(hsc2r_send[26]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [13]),
        .I2(\HSC2R_CDC[26].hsc2r_send_reg[26]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_26),
        .O(\HSC2R_CDC[26].hsc2r_send[26]_i_1_n_0 ));
  FDRE \HSC2R_CDC[26].hsc2r_send_reg[26] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[26].hsc2r_send[26]_i_1_n_0 ),
        .Q(hsc2r_send[26]),
        .R(1'b0));
  FDRE \HSC2R_CDC[26].hsc2r_vld_out_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_26),
        .Q(p_0_in14_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__28 \HSC2R_CDC[27].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[27].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_27),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [27]),
        .src_rcv(hsc2r_rcv_27),
        .src_send(hsc2r_send[27]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[27].hsc2r_send[27]_i_1 
       (.I0(hsc2r_send[27]),
        .I1(\src_hsdata_ff_reg[0] [27]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_27),
        .O(\HSC2R_CDC[27].hsc2r_send[27]_i_1_n_0 ));
  FDRE \HSC2R_CDC[27].hsc2r_send_reg[27] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[27].hsc2r_send[27]_i_1_n_0 ),
        .Q(hsc2r_send[27]),
        .R(1'b0));
  FDRE \HSC2R_CDC[27].hsc2r_vld_out_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_27),
        .Q(p_0_in13_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__29 \HSC2R_CDC[28].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[28].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_28),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [28]),
        .src_rcv(hsc2r_rcv_28),
        .src_send(hsc2r_send[28]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[28].hsc2r_send[28]_i_1 
       (.I0(hsc2r_send[28]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [14]),
        .I2(\HSC2R_CDC[28].hsc2r_send_reg[28]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_28),
        .O(\HSC2R_CDC[28].hsc2r_send[28]_i_1_n_0 ));
  FDRE \HSC2R_CDC[28].hsc2r_send_reg[28] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[28].hsc2r_send[28]_i_1_n_0 ),
        .Q(hsc2r_send[28]),
        .R(1'b0));
  FDRE \HSC2R_CDC[28].hsc2r_vld_out_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_28),
        .Q(p_0_in12_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__30 \HSC2R_CDC[29].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[29].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_29),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [29]),
        .src_rcv(hsc2r_rcv_29),
        .src_send(hsc2r_send[29]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[29].hsc2r_send[29]_i_1 
       (.I0(hsc2r_send[29]),
        .I1(\src_hsdata_ff_reg[0] [29]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_29),
        .O(\HSC2R_CDC[29].hsc2r_send[29]_i_1_n_0 ));
  FDRE \HSC2R_CDC[29].hsc2r_send_reg[29] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[29].hsc2r_send[29]_i_1_n_0 ),
        .Q(hsc2r_send[29]),
        .R(1'b0));
  FDRE \HSC2R_CDC[29].hsc2r_vld_out_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_29),
        .Q(p_0_in11_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__3 \HSC2R_CDC[2].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[2].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_2),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [2]),
        .src_rcv(hsc2r_rcv_2),
        .src_send(hsc2r_send[2]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[2].hsc2r_send[2]_i_1 
       (.I0(hsc2r_send[2]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [1]),
        .I2(\HSC2R_CDC[2].hsc2r_send_reg[2]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_2),
        .O(\HSC2R_CDC[2].hsc2r_send[2]_i_1_n_0 ));
  FDRE \HSC2R_CDC[2].hsc2r_send_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[2].hsc2r_send[2]_i_1_n_0 ),
        .Q(hsc2r_send[2]),
        .R(1'b0));
  FDRE \HSC2R_CDC[2].hsc2r_vld_out_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_2),
        .Q(p_0_in38_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__31 \HSC2R_CDC[30].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[30].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_30),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [30]),
        .src_rcv(hsc2r_rcv_30),
        .src_send(hsc2r_send[30]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[30].hsc2r_send[30]_i_1 
       (.I0(hsc2r_send[30]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [15]),
        .I2(p_0_in),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_30),
        .O(\HSC2R_CDC[30].hsc2r_send[30]_i_1_n_0 ));
  FDRE \HSC2R_CDC[30].hsc2r_send_reg[30] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[30].hsc2r_send[30]_i_1_n_0 ),
        .Q(hsc2r_send[30]),
        .R(1'b0));
  FDRE \HSC2R_CDC[30].hsc2r_vld_out_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_30),
        .Q(p_0_in10_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__32 \HSC2R_CDC[31].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[31].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_31),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [31]),
        .src_rcv(hsc2r_rcv_31),
        .src_send(hsc2r_send[31]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[31].hsc2r_send[31]_i_1 
       (.I0(hsc2r_send[31]),
        .I1(\src_hsdata_ff_reg[0] [31]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_31),
        .O(\HSC2R_CDC[31].hsc2r_send[31]_i_1_n_0 ));
  FDRE \HSC2R_CDC[31].hsc2r_send_reg[31] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[31].hsc2r_send[31]_i_1_n_0 ),
        .Q(hsc2r_send[31]),
        .R(1'b0));
  FDRE \HSC2R_CDC[31].hsc2r_vld_out_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_31),
        .Q(p_0_in9_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__33 \HSC2R_CDC[32].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[32].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_32),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [32]),
        .src_rcv(hsc2r_rcv_32),
        .src_send(hsc2r_send[32]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[32].hsc2r_send[32]_i_1 
       (.I0(hsc2r_send[32]),
        .I1(diwc_valid),
        .I2(\HSC2R_CDC[32].hsc2r_send_reg[32]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_32),
        .O(\HSC2R_CDC[32].hsc2r_send[32]_i_1_n_0 ));
  FDRE \HSC2R_CDC[32].hsc2r_send_reg[32] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[32].hsc2r_send[32]_i_1_n_0 ),
        .Q(hsc2r_send[32]),
        .R(1'b0));
  FDRE \HSC2R_CDC[32].hsc2r_vld_out_reg[32] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_32),
        .Q(p_0_in8_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__34 \HSC2R_CDC[33].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[33].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_33),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [33]),
        .src_rcv(hsc2r_rcv_33),
        .src_send(hsc2r_send[33]));
  LUT5 #(
    .INIT(32'h0000EA00)) 
    \HSC2R_CDC[33].hsc2r_send[33]_i_1 
       (.I0(hsc2r_send[33]),
        .I1(crc_done),
        .I2(crc_status),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_33),
        .O(\HSC2R_CDC[33].hsc2r_send[33]_i_1_n_0 ));
  FDRE \HSC2R_CDC[33].hsc2r_send_reg[33] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[33].hsc2r_send[33]_i_1_n_0 ),
        .Q(hsc2r_send[33]),
        .R(1'b0));
  FDRE \HSC2R_CDC[33].hsc2r_vld_out_reg[33] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_33),
        .Q(p_0_in7_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__35 \HSC2R_CDC[34].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[34].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[34].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [34]),
        .src_rcv(hsc2r_rcv_34),
        .src_send(hsc2r_send[34]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[34].hsc2r_send[34]_i_1 
       (.I0(hsc2r_send[34]),
        .I1(\src_hsdata_ff_reg[0] [34]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_34),
        .O(\HSC2R_CDC[34].hsc2r_send[34]_i_1_n_0 ));
  FDRE \HSC2R_CDC[34].hsc2r_send_reg[34] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[34].hsc2r_send[34]_i_1_n_0 ),
        .Q(hsc2r_send[34]),
        .R(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__36 \HSC2R_CDC[35].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[35].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[35].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [35]),
        .src_rcv(hsc2r_rcv_35),
        .src_send(hsc2r_send[35]));
  LUT6 #(
    .INIT(64'h00000000AFAE0000)) 
    \HSC2R_CDC[35].hsc2r_send[35]_i_1 
       (.I0(hsc2r_send[35]),
        .I1(dout[1]),
        .I2(\HSC2R_CDC[35].hsc2r_send_reg[35]_0 ),
        .I3(dout[3]),
        .I4(m_axis_aresetn),
        .I5(hsc2r_rcv_35),
        .O(\HSC2R_CDC[35].hsc2r_send[35]_i_1_n_0 ));
  FDRE \HSC2R_CDC[35].hsc2r_send_reg[35] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[35].hsc2r_send[35]_i_1_n_0 ),
        .Q(hsc2r_send[35]),
        .R(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__37 \HSC2R_CDC[36].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[36].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_36),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [36]),
        .src_rcv(hsc2r_rcv_36),
        .src_send(hsc2r_send[36]));
  LUT6 #(
    .INIT(64'h00000000EAAA0000)) 
    \HSC2R_CDC[36].hsc2r_send[36]_i_1 
       (.I0(hsc2r_send[36]),
        .I1(dout[0]),
        .I2(dout[4]),
        .I3(pkt_valid),
        .I4(m_axis_aresetn),
        .I5(hsc2r_rcv_36),
        .O(\HSC2R_CDC[36].hsc2r_send[36]_i_1_n_0 ));
  FDRE \HSC2R_CDC[36].hsc2r_send_reg[36] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[36].hsc2r_send[36]_i_1_n_0 ),
        .Q(hsc2r_send[36]),
        .R(1'b0));
  FDRE \HSC2R_CDC[36].hsc2r_vld_out_reg[36] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_36),
        .Q(p_0_in6_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__38 \HSC2R_CDC[37].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[37].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_37),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [37]),
        .src_rcv(hsc2r_rcv_37),
        .src_send(hsc2r_send[37]));
  LUT6 #(
    .INIT(64'h00000000EAAA0000)) 
    \HSC2R_CDC[37].hsc2r_send[37]_i_1 
       (.I0(hsc2r_send[37]),
        .I1(dout[1]),
        .I2(dout[4]),
        .I3(pkt_valid),
        .I4(m_axis_aresetn),
        .I5(hsc2r_rcv_37),
        .O(\HSC2R_CDC[37].hsc2r_send[37]_i_1_n_0 ));
  FDRE \HSC2R_CDC[37].hsc2r_send_reg[37] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[37].hsc2r_send[37]_i_1_n_0 ),
        .Q(hsc2r_send[37]),
        .R(1'b0));
  FDRE \HSC2R_CDC[37].hsc2r_vld_out_reg[37] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_37),
        .Q(p_0_in5_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__39 \HSC2R_CDC[38].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[38].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[38].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [38]),
        .src_rcv(hsc2r_rcv_38),
        .src_send(hsc2r_send[38]));
  LUT6 #(
    .INIT(64'h00000000EAAA0000)) 
    \HSC2R_CDC[38].hsc2r_send[38]_i_1 
       (.I0(hsc2r_send[38]),
        .I1(pkt_valid),
        .I2(dout[4]),
        .I3(dout[2]),
        .I4(m_axis_aresetn),
        .I5(hsc2r_rcv_38),
        .O(\HSC2R_CDC[38].hsc2r_send[38]_i_1_n_0 ));
  FDRE \HSC2R_CDC[38].hsc2r_send_reg[38] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[38].hsc2r_send[38]_i_1_n_0 ),
        .Q(hsc2r_send[38]),
        .R(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__40 \HSC2R_CDC[39].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[39].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[39].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [39]),
        .src_rcv(hsc2r_rcv_39),
        .src_send(hsc2r_send[39]));
  LUT6 #(
    .INIT(64'h00000000EAAA0000)) 
    \HSC2R_CDC[39].hsc2r_send[39]_i_1 
       (.I0(hsc2r_send[39]),
        .I1(pkt_valid),
        .I2(dout[4]),
        .I3(dout[3]),
        .I4(m_axis_aresetn),
        .I5(hsc2r_rcv_39),
        .O(\HSC2R_CDC[39].hsc2r_send[39]_i_1_n_0 ));
  FDRE \HSC2R_CDC[39].hsc2r_send_reg[39] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[39].hsc2r_send[39]_i_1_n_0 ),
        .Q(hsc2r_send[39]),
        .R(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__4 \HSC2R_CDC[3].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[3].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_3),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [3]),
        .src_rcv(hsc2r_rcv_3),
        .src_send(hsc2r_send[3]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[3].hsc2r_send[3]_i_1 
       (.I0(hsc2r_send[3]),
        .I1(\src_hsdata_ff_reg[0] [3]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_3),
        .O(\HSC2R_CDC[3].hsc2r_send[3]_i_1_n_0 ));
  FDRE \HSC2R_CDC[3].hsc2r_send_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[3].hsc2r_send[3]_i_1_n_0 ),
        .Q(hsc2r_send[3]),
        .R(1'b0));
  FDRE \HSC2R_CDC[3].hsc2r_vld_out_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_3),
        .Q(p_0_in37_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__41 \HSC2R_CDC[40].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[40].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[40].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0),
        .src_rcv(hsc2r_rcv_40),
        .src_send(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__42 \HSC2R_CDC[41].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[41].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[41].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0),
        .src_rcv(hsc2r_rcv_41),
        .src_send(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__43 \HSC2R_CDC[42].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[42].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[42].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0),
        .src_rcv(hsc2r_rcv_42),
        .src_send(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__44 \HSC2R_CDC[43].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[43].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(\NLW_HSC2R_CDC[43].hsc2r_bus_cdc_dest_req_UNCONNECTED ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0),
        .src_rcv(hsc2r_rcv_43),
        .src_send(1'b0));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake \HSC2R_CDC[44].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[44].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_44),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0]_0 ),
        .src_rcv(hsc2r_rcv_44),
        .src_send(hsc2r_send[44]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[44].hsc2r_send[44]_i_1 
       (.I0(hsc2r_send[44]),
        .I1(\src_hsdata_ff_reg[0]_0 ),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_44),
        .O(\HSC2R_CDC[44].hsc2r_send[44]_i_1_n_0 ));
  FDRE \HSC2R_CDC[44].hsc2r_send_reg[44] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[44].hsc2r_send[44]_i_1_n_0 ),
        .Q(hsc2r_send[44]),
        .R(1'b0));
  FDRE \HSC2R_CDC[44].hsc2r_vld_out_reg[44] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_44),
        .Q(isr_55),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__5 \HSC2R_CDC[4].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[4].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_4),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [4]),
        .src_rcv(hsc2r_rcv_4),
        .src_send(hsc2r_send[4]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[4].hsc2r_send[4]_i_1 
       (.I0(hsc2r_send[4]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [2]),
        .I2(\HSC2R_CDC[4].hsc2r_send_reg[4]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_4),
        .O(\HSC2R_CDC[4].hsc2r_send[4]_i_1_n_0 ));
  FDRE \HSC2R_CDC[4].hsc2r_send_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[4].hsc2r_send[4]_i_1_n_0 ),
        .Q(hsc2r_send[4]),
        .R(1'b0));
  FDRE \HSC2R_CDC[4].hsc2r_vld_out_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_4),
        .Q(p_0_in36_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__6 \HSC2R_CDC[5].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[5].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_5),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [5]),
        .src_rcv(hsc2r_rcv_5),
        .src_send(hsc2r_send[5]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[5].hsc2r_send[5]_i_1 
       (.I0(hsc2r_send[5]),
        .I1(\src_hsdata_ff_reg[0] [5]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_5),
        .O(\HSC2R_CDC[5].hsc2r_send[5]_i_1_n_0 ));
  FDRE \HSC2R_CDC[5].hsc2r_send_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[5].hsc2r_send[5]_i_1_n_0 ),
        .Q(hsc2r_send[5]),
        .R(1'b0));
  FDRE \HSC2R_CDC[5].hsc2r_vld_out_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_5),
        .Q(p_0_in35_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__7 \HSC2R_CDC[6].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[6].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_6),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [6]),
        .src_rcv(hsc2r_rcv_6),
        .src_send(hsc2r_send[6]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[6].hsc2r_send[6]_i_1 
       (.I0(hsc2r_send[6]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [3]),
        .I2(\HSC2R_CDC[6].hsc2r_send_reg[6]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_6),
        .O(\HSC2R_CDC[6].hsc2r_send[6]_i_1_n_0 ));
  FDRE \HSC2R_CDC[6].hsc2r_send_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[6].hsc2r_send[6]_i_1_n_0 ),
        .Q(hsc2r_send[6]),
        .R(1'b0));
  FDRE \HSC2R_CDC[6].hsc2r_vld_out_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_6),
        .Q(p_0_in34_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__8 \HSC2R_CDC[7].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[7].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_7),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [7]),
        .src_rcv(hsc2r_rcv_7),
        .src_send(hsc2r_send[7]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[7].hsc2r_send[7]_i_1 
       (.I0(hsc2r_send[7]),
        .I1(\src_hsdata_ff_reg[0] [7]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_7),
        .O(\HSC2R_CDC[7].hsc2r_send[7]_i_1_n_0 ));
  FDRE \HSC2R_CDC[7].hsc2r_send_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[7].hsc2r_send[7]_i_1_n_0 ),
        .Q(hsc2r_send[7]),
        .R(1'b0));
  FDRE \HSC2R_CDC[7].hsc2r_vld_out_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_7),
        .Q(p_0_in33_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__9 \HSC2R_CDC[8].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[8].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_8),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [8]),
        .src_rcv(hsc2r_rcv_8),
        .src_send(hsc2r_send[8]));
  LUT5 #(
    .INIT(32'h0000AE00)) 
    \HSC2R_CDC[8].hsc2r_send[8]_i_1 
       (.I0(hsc2r_send[8]),
        .I1(\HSC2R_CDC[30].hsc2r_send_reg[30]_0 [4]),
        .I2(\HSC2R_CDC[8].hsc2r_send_reg[8]_0 ),
        .I3(m_axis_aresetn),
        .I4(hsc2r_rcv_8),
        .O(\HSC2R_CDC[8].hsc2r_send[8]_i_1_n_0 ));
  FDRE \HSC2R_CDC[8].hsc2r_send_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[8].hsc2r_send[8]_i_1_n_0 ),
        .Q(hsc2r_send[8]),
        .R(1'b0));
  FDRE \HSC2R_CDC[8].hsc2r_vld_out_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_8),
        .Q(p_0_in32_in),
        .R(SS));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "1" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__xdcDup__10 \HSC2R_CDC[9].hsc2r_bus_cdc 
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(\NLW_HSC2R_CDC[9].hsc2r_bus_cdc_dest_out_UNCONNECTED [0]),
        .dest_req(hsc2r_vld_i_9),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[0] [9]),
        .src_rcv(hsc2r_rcv_9),
        .src_send(hsc2r_send[9]));
  LUT4 #(
    .INIT(16'h00E0)) 
    \HSC2R_CDC[9].hsc2r_send[9]_i_1 
       (.I0(hsc2r_send[9]),
        .I1(\src_hsdata_ff_reg[0] [9]),
        .I2(m_axis_aresetn),
        .I3(hsc2r_rcv_9),
        .O(\HSC2R_CDC[9].hsc2r_send[9]_i_1_n_0 ));
  FDRE \HSC2R_CDC[9].hsc2r_send_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\HSC2R_CDC[9].hsc2r_send[9]_i_1_n_0 ),
        .Q(hsc2r_send[9]),
        .R(1'b0));
  FDRE \HSC2R_CDC[9].hsc2r_vld_out_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hsc2r_vld_i_9),
        .Q(p_0_in31_in),
        .R(SS));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__153 \PPI_CL_ASYNC[0].xpm_single_cl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_CL_ASYNC[0].xpm_single_cl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(cl_rxulpsclknot));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__154 \PPI_CL_ASYNC[1].xpm_single_cl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\syncstages_ff_reg[2] ),
        .src_clk(m_axis_aclk),
        .src_in(cl_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__133 \PPI_DL_ASYNC[0].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[0]),
        .src_clk(m_axis_aclk),
        .src_in(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__143 \PPI_DL_ASYNC[10].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[10].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__144 \PPI_DL_ASYNC[11].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[11].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl2_errcontrol));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__145 \PPI_DL_ASYNC[12].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[12].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl2_erresc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__146 \PPI_DL_ASYNC[13].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[13].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl2_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__147 \PPI_DL_ASYNC[14].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(ppi_dl_sb_14),
        .src_clk(m_axis_aclk),
        .src_in(dl2_rxulpmesc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__148 \PPI_DL_ASYNC[15].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[15].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__149 \PPI_DL_ASYNC[16].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[16].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl3_errcontrol));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__150 \PPI_DL_ASYNC[17].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[17].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl3_erresc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__151 \PPI_DL_ASYNC[18].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(\PPI_DL_ASYNC[18].xpm_single_dl_sb_n_0 ),
        .src_clk(m_axis_aclk),
        .src_in(dl3_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__152 \PPI_DL_ASYNC[19].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(ppi_dl_sb_19),
        .src_clk(m_axis_aclk),
        .src_in(dl3_rxulpmesc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__134 \PPI_DL_ASYNC[1].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[1]),
        .src_clk(m_axis_aclk),
        .src_in(dl0_errcontrol));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__135 \PPI_DL_ASYNC[2].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[2]),
        .src_clk(m_axis_aclk),
        .src_in(dl0_erresc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__136 \PPI_DL_ASYNC[3].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[3]),
        .src_clk(m_axis_aclk),
        .src_in(dl0_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__137 \PPI_DL_ASYNC[4].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(ppi_dl_sb_4),
        .src_clk(m_axis_aclk),
        .src_in(dl0_rxulpmesc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__138 \PPI_DL_ASYNC[5].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[4]),
        .src_clk(m_axis_aclk),
        .src_in(1'b0));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__139 \PPI_DL_ASYNC[6].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[5]),
        .src_clk(m_axis_aclk),
        .src_in(dl1_errcontrol));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__140 \PPI_DL_ASYNC[7].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[6]),
        .src_clk(m_axis_aclk),
        .src_in(dl1_erresc));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__141 \PPI_DL_ASYNC[8].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(lx_info_all[7]),
        .src_clk(m_axis_aclk),
        .src_in(dl1_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__142 \PPI_DL_ASYNC[9].xpm_single_dl_sb 
       (.dest_clk(s_axi_aclk),
        .dest_out(ppi_dl_sb_9),
        .src_clk(m_axis_aclk),
        .src_in(dl1_rxulpmesc));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "2" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__parameterized0 ecc_cdc
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(ecc_vld_out_i),
        .dest_req(ecc_vld_i),
        .src_clk(m_axis_aclk),
        .src_in(Q),
        .src_rcv(ecc_rcv),
        .src_send(ecc_send));
  LUT4 #(
    .INIT(16'h00E0)) 
    ecc_send_i_1
       (.I0(ecc_send),
        .I1(phecc_done),
        .I2(m_axis_aresetn),
        .I3(ecc_rcv),
        .O(ecc_send_i_1_n_0));
  FDRE ecc_send_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(ecc_send_i_1_n_0),
        .Q(ecc_send),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \ecc_vld_out[0]_i_1 
       (.I0(ecc_vld_i),
        .I1(ecc_vld_out_i[0]),
        .O(\ecc_vld_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \ecc_vld_out[1]_i_1 
       (.I0(ecc_vld_i),
        .I1(ecc_vld_out_i[1]),
        .O(\ecc_vld_out[1]_i_1_n_0 ));
  FDRE \ecc_vld_out_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ecc_vld_out[0]_i_1_n_0 ),
        .Q(ecc_vld_out[0]),
        .R(SS));
  FDRE \ecc_vld_out_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\ecc_vld_out[1]_i_1_n_0 ),
        .Q(ecc_vld_out[1]),
        .R(SS));
  FDRE ecc_vld_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ecc_vld_i),
        .Q(ecc_vld),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAFE)) 
    interrupt_INST_0_i_10
       (.I0(\isr_i_reg[46]_0 [15]),
        .I1(p_0_in21_in),
        .I2(p_0_in_0[11]),
        .I3(\s_axi_rdata_reg[23] ),
        .I4(\isr_i_reg[46]_0 [13]),
        .I5(\isr_i_reg[46]_0 [12]),
        .O(interrupt_INST_0_i_10_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    interrupt_INST_0_i_11
       (.I0(\isr_i_reg[46]_0 [8]),
        .I1(isr_o[10]),
        .I2(isr_o[11]),
        .I3(isr_o[12]),
        .I4(\isr_i_reg[46]_0 [17]),
        .I5(\isr_i_reg[46]_0 [16]),
        .O(interrupt_INST_0_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_12
       (.I0(p_0_in32_in),
        .I1(p_0_in_0[0]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [7]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_13
       (.I0(p_0_in16_in),
        .I1(p_0_in_0[16]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [19]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    interrupt_INST_0_i_14
       (.I0(\isr_i_reg[46]_0 [23]),
        .I1(\isr_i_reg[46]_0 [22]),
        .I2(\isr_i_reg[46]_0 [21]),
        .I3(\isr_i_reg[46]_0 [20]),
        .I4(interrupt_INST_0_i_37_n_0),
        .I5(interrupt_INST_0_i_38_n_0),
        .O(interrupt_INST_0_i_14_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAFE)) 
    interrupt_INST_0_i_15
       (.I0(\isr_i_reg[46]_0 [11]),
        .I1(p_0_in25_in),
        .I2(p_0_in_0[7]),
        .I3(\s_axi_rdata_reg[23] ),
        .I4(\isr_i_reg[46]_0 [9]),
        .I5(isr_o[13]),
        .O(interrupt_INST_0_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    interrupt_INST_0_i_18
       (.I0(\isr_i_reg[46]_0 [3]),
        .I1(interrupt_INST_0_i_3[0]),
        .I2(\isr_i_reg[46]_0 [4]),
        .I3(interrupt_INST_0_i_3[1]),
        .I4(interrupt_INST_0_i_3[2]),
        .I5(isr_o[33]),
        .O(\ier_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    interrupt_INST_0_i_2
       (.I0(interrupt_INST_0_i_10_n_0),
        .I1(interrupt_INST_0_i_11_n_0),
        .I2(\isr_i_reg[46]_0 [7]),
        .I3(\isr_i_reg[46]_0 [19]),
        .I4(interrupt_INST_0_i_14_n_0),
        .I5(interrupt_INST_0_i_15_n_0),
        .O(vcx_err));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_22
       (.I0(dest_pulse),
        .I1(\isr_i_reg[55]_0 [15]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [36]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_23
       (.I0(p_0_in6_in),
        .I1(\isr_i_reg[55]_0 [9]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [29]));
  LUT4 #(
    .INIT(16'h00F8)) 
    interrupt_INST_0_i_24
       (.I0(ecc_vld),
        .I1(ecc_vld_out[1]),
        .I2(p_3_in[3]),
        .I3(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [28]));
  LUT4 #(
    .INIT(16'h00F8)) 
    interrupt_INST_0_i_25
       (.I0(ecc_vld),
        .I1(ecc_vld_out[0]),
        .I2(p_3_in[2]),
        .I3(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [27]));
  LUT4 #(
    .INIT(16'h00FE)) 
    interrupt_INST_0_i_26
       (.I0(lx_info_all[2]),
        .I1(lx_info_all[6]),
        .I2(p_3_in[7]),
        .I3(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [31]));
  LUT4 #(
    .INIT(16'h00FE)) 
    interrupt_INST_0_i_27
       (.I0(lx_info_all[1]),
        .I1(lx_info_all[5]),
        .I2(p_3_in[6]),
        .I3(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [30]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_28
       (.I0(p_0_in20_in),
        .I1(p_0_in_0[12]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [15]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_29
       (.I0(p_0_in22_in),
        .I1(p_0_in_0[10]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [13]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_30
       (.I0(p_0_in23_in),
        .I1(p_0_in_0[9]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [12]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_31
       (.I0(p_0_in31_in),
        .I1(p_0_in_0[1]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [8]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_32
       (.I0(p_0_in30_in),
        .I1(\isr_i_reg[55]_0 [3]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(isr_o[10]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_33
       (.I0(p_0_in29_in),
        .I1(\isr_i_reg[55]_0 [4]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(isr_o[11]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_34
       (.I0(p_0_in28_in),
        .I1(\isr_i_reg[55]_0 [5]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(isr_o[12]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_35
       (.I0(p_0_in18_in),
        .I1(p_0_in_0[14]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [17]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_36
       (.I0(p_0_in19_in),
        .I1(p_0_in_0[13]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [16]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h0F0F0F0E)) 
    interrupt_INST_0_i_37
       (.I0(p_0_in_0[15]),
        .I1(p_0_in17_in),
        .I2(\s_axi_rdata_reg[23] ),
        .I3(p_0_in_0[23]),
        .I4(p_0_in9_in),
        .O(interrupt_INST_0_i_37_n_0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h0F0F0F0E)) 
    interrupt_INST_0_i_38
       (.I0(p_0_in_0[22]),
        .I1(p_0_in10_in),
        .I2(\s_axi_rdata_reg[23] ),
        .I3(p_0_in_0[21]),
        .I4(p_0_in11_in),
        .O(interrupt_INST_0_i_38_n_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_39
       (.I0(p_0_in24_in),
        .I1(p_0_in_0[8]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [11]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_40
       (.I0(p_0_in26_in),
        .I1(p_0_in_0[6]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [9]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_41
       (.I0(p_0_in27_in),
        .I1(\isr_i_reg[55]_0 [6]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(isr_o[13]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_42
       (.I0(dest_out[1]),
        .I1(\isr_i_reg[55]_0 [13]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [35]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_43
       (.I0(p_0_in33_in),
        .I1(\isr_i_reg[55]_0 [2]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_44
       (.I0(p_0_in37_in),
        .I1(\isr_i_reg_n_0_[3] ),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_45
       (.I0(p_0_in36_in),
        .I1(\isr_i_reg_n_0_[4] ),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_46
       (.I0(p_0_in7_in),
        .I1(\isr_i_reg[55]_0 [8]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(isr_o[33]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_47
       (.I0(p_0_in38_in),
        .I1(\isr_i_reg_n_0_[2] ),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_48
       (.I0(isr_0),
        .I1(\isr_i_reg_n_0_[0] ),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_49
       (.I0(p_0_in39_in),
        .I1(\isr_i_reg[55]_0 [0]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_5
       (.I0(dest_out[0]),
        .I1(\isr_i_reg[55]_0 [11]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [34]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    interrupt_INST_0_i_50
       (.I0(p_0_in35_in),
        .I1(\isr_i_reg_n_0_[5] ),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(wr2_isr1),
        .I2(isr_0),
        .I3(\isr_i_reg_n_0_[0] ),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[10]_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(wr2_isr2),
        .I2(p_0_in30_in),
        .I3(\isr_i_reg[55]_0 [3]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[11]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(wr2_isr2),
        .I2(p_0_in29_in),
        .I3(\isr_i_reg[55]_0 [4]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[12]_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(wr2_isr2),
        .I2(p_0_in28_in),
        .I3(\isr_i_reg[55]_0 [5]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[13]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(wr2_isr2),
        .I2(p_0_in27_in),
        .I3(\isr_i_reg[55]_0 [6]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[14]_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(wr2_isr2),
        .I2(p_0_in26_in),
        .I3(p_0_in_0[6]),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[15]_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(wr2_isr2),
        .I2(p_0_in25_in),
        .I3(p_0_in_0[7]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[16]_i_1 
       (.I0(s_axi_wdata[8]),
        .I1(wr2_isr2),
        .I2(p_0_in24_in),
        .I3(p_0_in_0[8]),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[17]_i_1 
       (.I0(s_axi_wdata[9]),
        .I1(wr2_isr2),
        .I2(p_0_in23_in),
        .I3(p_0_in_0[9]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[18]_i_1 
       (.I0(s_axi_wdata[10]),
        .I1(wr2_isr2),
        .I2(p_0_in22_in),
        .I3(p_0_in_0[10]),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[19]_i_1 
       (.I0(s_axi_wdata[11]),
        .I1(wr2_isr2),
        .I2(p_0_in21_in),
        .I3(p_0_in_0[11]),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(wr2_isr1),
        .I2(p_0_in39_in),
        .I3(\isr_i_reg[55]_0 [0]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[20]_i_1 
       (.I0(s_axi_wdata[12]),
        .I1(wr2_isr2),
        .I2(p_0_in20_in),
        .I3(p_0_in_0[12]),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[21]_i_1 
       (.I0(s_axi_wdata[13]),
        .I1(wr2_isr2),
        .I2(p_0_in19_in),
        .I3(p_0_in_0[13]),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[22]_i_1 
       (.I0(s_axi_wdata[14]),
        .I1(wr2_isr2),
        .I2(p_0_in18_in),
        .I3(p_0_in_0[14]),
        .O(p_1_in[22]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[23]_i_1 
       (.I0(s_axi_wdata[15]),
        .I1(wr2_isr2),
        .I2(p_0_in17_in),
        .I3(p_0_in_0[15]),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[24]_i_1 
       (.I0(s_axi_wdata[16]),
        .I1(wr2_isr2),
        .I2(p_0_in16_in),
        .I3(p_0_in_0[16]),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[25]_i_1 
       (.I0(s_axi_wdata[17]),
        .I1(wr2_isr2),
        .I2(p_0_in15_in),
        .I3(p_0_in_0[17]),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[26]_i_1 
       (.I0(s_axi_wdata[18]),
        .I1(wr2_isr2),
        .I2(p_0_in14_in),
        .I3(p_0_in_0[18]),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[27]_i_1 
       (.I0(s_axi_wdata[19]),
        .I1(wr2_isr2),
        .I2(p_0_in13_in),
        .I3(p_0_in_0[19]),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[28]_i_1 
       (.I0(s_axi_wdata[20]),
        .I1(wr2_isr2),
        .I2(p_0_in12_in),
        .I3(p_0_in_0[20]),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[29]_i_1 
       (.I0(s_axi_wdata[21]),
        .I1(wr2_isr2),
        .I2(p_0_in11_in),
        .I3(p_0_in_0[21]),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[2]_i_1 
       (.I0(s_axi_wdata[2]),
        .I1(wr2_isr1),
        .I2(p_0_in38_in),
        .I3(\isr_i_reg_n_0_[2] ),
        .O(p_1_in[2]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[30]_i_1 
       (.I0(s_axi_wdata[22]),
        .I1(wr2_isr2),
        .I2(p_0_in10_in),
        .I3(p_0_in_0[22]),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[31]_i_2 
       (.I0(s_axi_wdata[23]),
        .I1(wr2_isr2),
        .I2(p_0_in9_in),
        .I3(p_0_in_0[23]),
        .O(p_1_in[31]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[32]_i_1 
       (.I0(s_axi_wdata[8]),
        .I1(wr2_isr1),
        .I2(p_0_in8_in),
        .I3(\isr_i_reg[55]_0 [7]),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[33]_i_1 
       (.I0(s_axi_wdata[9]),
        .I1(wr2_isr1),
        .I2(p_0_in7_in),
        .I3(\isr_i_reg[55]_0 [8]),
        .O(p_1_in[33]));
  LUT5 #(
    .INIT(32'hF777F000)) 
    \isr_i[34]_i_1 
       (.I0(s_axi_wdata[10]),
        .I1(wr2_isr1),
        .I2(ecc_vld),
        .I3(ecc_vld_out[0]),
        .I4(p_3_in[2]),
        .O(p_1_in[34]));
  LUT5 #(
    .INIT(32'hF777F000)) 
    \isr_i[35]_i_1 
       (.I0(s_axi_wdata[11]),
        .I1(wr2_isr1),
        .I2(ecc_vld),
        .I3(ecc_vld_out[1]),
        .I4(p_3_in[3]),
        .O(p_1_in[35]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[36]_i_1 
       (.I0(s_axi_wdata[12]),
        .I1(wr2_isr1),
        .I2(p_0_in6_in),
        .I3(\isr_i_reg[55]_0 [9]),
        .O(p_1_in[36]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[37]_i_1 
       (.I0(s_axi_wdata[13]),
        .I1(wr2_isr1),
        .I2(p_0_in5_in),
        .I3(\isr_i_reg[55]_0 [10]),
        .O(p_1_in[37]));
  LUT5 #(
    .INIT(32'hFFF7FFF0)) 
    \isr_i[38]_i_1 
       (.I0(s_axi_wdata[14]),
        .I1(wr2_isr1),
        .I2(lx_info_all[1]),
        .I3(lx_info_all[5]),
        .I4(p_3_in[6]),
        .O(p_1_in[38]));
  LUT5 #(
    .INIT(32'hFFF7FFF0)) 
    \isr_i[39]_i_1 
       (.I0(s_axi_wdata[15]),
        .I1(wr2_isr1),
        .I2(lx_info_all[2]),
        .I3(lx_info_all[6]),
        .I4(p_3_in[7]),
        .O(p_1_in[39]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[3]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(wr2_isr1),
        .I2(p_0_in37_in),
        .I3(\isr_i_reg_n_0_[3] ),
        .O(p_1_in[3]));
  LUT5 #(
    .INIT(32'hFFF7FFF0)) 
    \isr_i[40]_i_1 
       (.I0(s_axi_wdata[16]),
        .I1(wr2_isr1),
        .I2(ppi_dl_sb_4),
        .I3(ppi_dl_sb_9),
        .I4(p_3_in[8]),
        .O(p_1_in[40]));
  LUT6 #(
    .INIT(64'hFEFFFFFFFEFEFEFE)) 
    \isr_i[41]_i_1 
       (.I0(lx_info_all[3]),
        .I1(lx_info_all[7]),
        .I2(\syncstages_ff_reg[2] ),
        .I3(s_axi_wdata[17]),
        .I4(wr2_isr1),
        .I5(p_3_in[9]),
        .O(p_1_in[41]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[42]_i_1 
       (.I0(s_axi_wdata[18]),
        .I1(wr2_isr1),
        .I2(dest_out[0]),
        .I3(\isr_i_reg[55]_0 [11]),
        .O(p_1_in[42]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[44]_i_1 
       (.I0(s_axi_wdata[20]),
        .I1(wr2_isr1),
        .I2(dest_out[1]),
        .I3(\isr_i_reg[55]_0 [13]),
        .O(p_1_in[44]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[46]_i_1 
       (.I0(s_axi_wdata[22]),
        .I1(wr2_isr1),
        .I2(dest_pulse),
        .I3(\isr_i_reg[55]_0 [15]),
        .O(p_1_in[46]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[4]_i_1 
       (.I0(s_axi_wdata[4]),
        .I1(wr2_isr1),
        .I2(p_0_in36_in),
        .I3(\isr_i_reg_n_0_[4] ),
        .O(p_1_in[4]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[55]_i_3 
       (.I0(s_axi_wdata[24]),
        .I1(wr2_isr1),
        .I2(isr_55),
        .I3(\isr_i_reg[55]_0 [16]),
        .O(p_1_in[55]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[5]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(wr2_isr1),
        .I2(p_0_in35_in),
        .I3(\isr_i_reg_n_0_[5] ),
        .O(p_1_in[5]));
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[6]_i_1 
       (.I0(s_axi_wdata[6]),
        .I1(wr2_isr1),
        .I2(p_0_in34_in),
        .I3(\isr_i_reg[55]_0 [1]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[7]_i_1 
       (.I0(s_axi_wdata[7]),
        .I1(wr2_isr1),
        .I2(p_0_in33_in),
        .I3(\isr_i_reg[55]_0 [2]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[8]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(wr2_isr2),
        .I2(p_0_in32_in),
        .I3(p_0_in_0[0]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[9]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(wr2_isr2),
        .I2(p_0_in31_in),
        .I3(p_0_in_0[1]),
        .O(p_1_in[9]));
  FDRE \isr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[0]),
        .Q(\isr_i_reg_n_0_[0] ),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[10]),
        .Q(\isr_i_reg[55]_0 [3]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[11]),
        .Q(\isr_i_reg[55]_0 [4]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[12]),
        .Q(\isr_i_reg[55]_0 [5]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[13]),
        .Q(\isr_i_reg[55]_0 [6]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[14]),
        .Q(p_0_in_0[6]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[15]),
        .Q(p_0_in_0[7]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[16]),
        .Q(p_0_in_0[8]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[17]),
        .Q(p_0_in_0[9]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[18]),
        .Q(p_0_in_0[10]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[19]),
        .Q(p_0_in_0[11]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[1]),
        .Q(\isr_i_reg[55]_0 [0]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[20]),
        .Q(p_0_in_0[12]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[21]),
        .Q(p_0_in_0[13]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[22]),
        .Q(p_0_in_0[14]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[23]),
        .Q(p_0_in_0[15]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[24]),
        .Q(p_0_in_0[16]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[25]),
        .Q(p_0_in_0[17]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[26]),
        .Q(p_0_in_0[18]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[27]),
        .Q(p_0_in_0[19]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[28]),
        .Q(p_0_in_0[20]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[29]),
        .Q(p_0_in_0[21]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[2]),
        .Q(\isr_i_reg_n_0_[2] ),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[30]),
        .Q(p_0_in_0[22]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[31]),
        .Q(p_0_in_0[23]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[32] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[32]),
        .Q(\isr_i_reg[55]_0 [7]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[33] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[33]),
        .Q(\isr_i_reg[55]_0 [8]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[34] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[34]),
        .Q(p_3_in[2]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[35] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[35]),
        .Q(p_3_in[3]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[36] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[36]),
        .Q(\isr_i_reg[55]_0 [9]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[37] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[37]),
        .Q(\isr_i_reg[55]_0 [10]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[38] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[38]),
        .Q(p_3_in[6]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[39] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[39]),
        .Q(p_3_in[7]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[3]),
        .Q(\isr_i_reg_n_0_[3] ),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[40] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[40]),
        .Q(p_3_in[8]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[41] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[41]),
        .Q(p_3_in[9]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[42] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[42]),
        .Q(\isr_i_reg[55]_0 [11]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[43] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(D[0]),
        .Q(\isr_i_reg[55]_0 [12]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[44] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[44]),
        .Q(\isr_i_reg[55]_0 [13]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[45] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(D[1]),
        .Q(\isr_i_reg[55]_0 [14]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[46] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[46]),
        .Q(\isr_i_reg[55]_0 [15]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[4]),
        .Q(\isr_i_reg_n_0_[4] ),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[55] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[55]),
        .Q(\isr_i_reg[55]_0 [16]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[5]),
        .Q(\isr_i_reg_n_0_[5] ),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[6]),
        .Q(\isr_i_reg[55]_0 [1]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(E[1]),
        .D(p_1_in[7]),
        .Q(\isr_i_reg[55]_0 [2]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[8]),
        .Q(p_0_in_0[0]),
        .R(\isr_i_reg[0]_0 ));
  FDRE \isr_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(E[0]),
        .D(p_1_in[9]),
        .Q(p_0_in_0[1]),
        .R(\isr_i_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[11]_i_11 
       (.I0(p_0_in21_in),
        .I1(p_0_in_0[11]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [14]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[15]_i_14 
       (.I0(p_0_in17_in),
        .I1(p_0_in_0[15]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [18]));
  LUT4 #(
    .INIT(16'h00FE)) 
    \s_axi_rdata[16]_i_6 
       (.I0(ppi_dl_sb_4),
        .I1(ppi_dl_sb_9),
        .I2(p_3_in[8]),
        .I3(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [32]));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    \s_axi_rdata[17]_i_6 
       (.I0(lx_info_all[3]),
        .I1(lx_info_all[7]),
        .I2(\syncstages_ff_reg[2] ),
        .I3(p_3_in[9]),
        .I4(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [33]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[17]_i_7 
       (.I0(p_0_in15_in),
        .I1(p_0_in_0[17]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [20]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[18]_i_6 
       (.I0(p_0_in14_in),
        .I1(p_0_in_0[18]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [21]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[19]_i_6 
       (.I0(p_0_in13_in),
        .I1(p_0_in_0[19]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [22]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[20]_i_6 
       (.I0(p_0_in12_in),
        .I1(p_0_in_0[20]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [23]));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[21]_i_6 
       (.I0(p_0_in11_in),
        .I1(p_0_in_0[21]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [24]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[22]_i_6 
       (.I0(p_0_in10_in),
        .I1(p_0_in_0[22]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [25]));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[23]_i_4 
       (.I0(p_0_in9_in),
        .I1(p_0_in_0[23]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [26]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \s_axi_rdata[7]_i_12 
       (.I0(p_0_in25_in),
        .I1(p_0_in_0[7]),
        .I2(\s_axi_rdata_reg[23] ),
        .O(\isr_i_reg[46]_0 [10]));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "2" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_array_single__4 xpm_array_single_05
       (.dest_clk(s_axi_aclk),
        .dest_out(dest_out),
        .src_clk(m_axis_aclk),
        .src_in(src_in));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* RST_USED = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "PULSE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__1 xpm_pulse_02
       (.dest_clk(s_axi_aclk),
        .dest_pulse(dest_pulse),
        .dest_rst(SS),
        .src_clk(m_axis_aclk),
        .src_pulse(wc_err),
        .src_rst(SR));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_lane_merger" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_lane_merger
   (\arststages_ff_reg[2] ,
    wr_en,
    din,
    rd_en,
    l0_empty_reg_0,
    rst,
    dl0_rxbyteclkhs,
    dest_arst,
    dout,
    l1_empty_reg_0,
    empty,
    \buf0_reg[9]_0 ,
    p_26_in,
    o_pkt_prcng_d1_reg_0,
    o_pkt_prcng_d1_reg_1);
  output \arststages_ff_reg[2] ;
  output wr_en;
  output [41:0]din;
  output rd_en;
  output l0_empty_reg_0;
  output rst;
  input dl0_rxbyteclkhs;
  input dest_arst;
  input [11:0]dout;
  input [11:0]l1_empty_reg_0;
  input empty;
  input \buf0_reg[9]_0 ;
  input p_26_in;
  input o_pkt_prcng_d1_reg_0;
  input o_pkt_prcng_d1_reg_1;

  wire \arststages_ff_reg[2] ;
  wire \buf0_reg[9]_0 ;
  wire \buf0_reg_n_0_[0] ;
  wire \buf0_reg_n_0_[1] ;
  wire \buf0_reg_n_0_[2] ;
  wire \buf0_reg_n_0_[3] ;
  wire \buf0_reg_n_0_[4] ;
  wire \buf0_reg_n_0_[5] ;
  wire \buf0_reg_n_0_[6] ;
  wire \buf0_reg_n_0_[7] ;
  wire \buf0_reg_n_0_[8] ;
  wire \buf0_reg_n_0_[9] ;
  wire \buf1_reg_n_0_[0] ;
  wire \buf1_reg_n_0_[1] ;
  wire \buf1_reg_n_0_[2] ;
  wire \buf1_reg_n_0_[3] ;
  wire \buf1_reg_n_0_[4] ;
  wire \buf1_reg_n_0_[5] ;
  wire \buf1_reg_n_0_[6] ;
  wire \buf1_reg_n_0_[7] ;
  wire \buf1_reg_n_0_[8] ;
  wire \buf1_reg_n_0_[9] ;
  wire dest_arst;
  wire [41:0]din;
  wire dl0_rxbyteclkhs;
  wire [11:0]dout;
  wire empty;
  wire fifos_empty;
  wire fifos_empty_i_1_n_0;
  wire l0_empty;
  wire l0_empty_i_1_n_0;
  wire l0_empty_reg_0;
  wire l1_empty;
  wire l1_empty_i_1_n_0;
  wire [11:0]l1_empty_reg_0;
  wire [3:3]lane_mux_sel;
  wire mst_rd_en_d1;
  wire o_pkt_prcng;
  wire o_pkt_prcng_d1;
  wire o_pkt_prcng_d1_reg_0;
  wire o_pkt_prcng_d1_reg_1;
  wire p_17_in;
  wire [19:0]p_1_in;
  wire p_26_in;
  wire \pkt_fifo_cnt[0]_i_1_n_0 ;
  wire \pkt_fifo_cnt[0]_i_2_n_0 ;
  wire \pkt_fifo_wdata[39]_i_1_n_0 ;
  wire \pkt_fifo_wdata[40]_i_1_n_0 ;
  wire pkt_fifo_wen_i_1_n_0;
  wire ppi_rdvld;
  wire rd_en;
  wire rst;
  wire wr_en;

  LUT2 #(
    .INIT(4'h7)) 
    \CSI_OPT3_OFF.ppi_fifo_i_1 
       (.I0(o_pkt_prcng_d1_reg_0),
        .I1(o_pkt_prcng_d1_reg_1),
        .O(rst));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    \CSI_OPT3_OFF.ppi_fifo_i_1__0 
       (.I0(l0_empty),
        .I1(\buf0_reg[9]_0 ),
        .I2(p_17_in),
        .I3(empty),
        .O(l0_empty_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    \CSI_OPT3_OFF.ppi_fifo_i_2 
       (.I0(l1_empty),
        .I1(empty),
        .I2(p_17_in),
        .I3(\buf0_reg[9]_0 ),
        .O(rd_en));
  LUT1 #(
    .INIT(2'h1)) 
    \active_lanes[1]_i_1 
       (.I0(dest_arst),
        .O(\arststages_ff_reg[2] ));
  LUT5 #(
    .INIT(32'h44C400C4)) 
    \buf0[9]_i_1 
       (.I0(empty),
        .I1(p_17_in),
        .I2(l1_empty),
        .I3(\buf0_reg[9]_0 ),
        .I4(l0_empty),
        .O(ppi_rdvld));
  FDCE \buf0_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[0]),
        .Q(\buf0_reg_n_0_[0] ));
  FDCE \buf0_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[1]),
        .Q(\buf0_reg_n_0_[1] ));
  FDCE \buf0_reg[2] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[2]),
        .Q(\buf0_reg_n_0_[2] ));
  FDCE \buf0_reg[3] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[3]),
        .Q(\buf0_reg_n_0_[3] ));
  FDCE \buf0_reg[4] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[4]),
        .Q(\buf0_reg_n_0_[4] ));
  FDCE \buf0_reg[5] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[5]),
        .Q(\buf0_reg_n_0_[5] ));
  FDCE \buf0_reg[6] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[6]),
        .Q(\buf0_reg_n_0_[6] ));
  FDCE \buf0_reg[7] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[7]),
        .Q(\buf0_reg_n_0_[7] ));
  FDCE \buf0_reg[8] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[8]),
        .Q(\buf0_reg_n_0_[8] ));
  FDCE \buf0_reg[9] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(dout[9]),
        .Q(\buf0_reg_n_0_[9] ));
  FDCE \buf1_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[0]),
        .Q(\buf1_reg_n_0_[0] ));
  FDCE \buf1_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[1]),
        .Q(\buf1_reg_n_0_[1] ));
  FDCE \buf1_reg[2] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[2]),
        .Q(\buf1_reg_n_0_[2] ));
  FDCE \buf1_reg[3] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[3]),
        .Q(\buf1_reg_n_0_[3] ));
  FDCE \buf1_reg[4] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[4]),
        .Q(\buf1_reg_n_0_[4] ));
  FDCE \buf1_reg[5] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[5]),
        .Q(\buf1_reg_n_0_[5] ));
  FDCE \buf1_reg[6] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[6]),
        .Q(\buf1_reg_n_0_[6] ));
  FDCE \buf1_reg[7] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[7]),
        .Q(\buf1_reg_n_0_[7] ));
  FDCE \buf1_reg[8] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[8]),
        .Q(\buf1_reg_n_0_[8] ));
  FDCE \buf1_reg[9] 
       (.C(dl0_rxbyteclkhs),
        .CE(ppi_rdvld),
        .CLR(\arststages_ff_reg[2] ),
        .D(l1_empty_reg_0[9]),
        .Q(\buf1_reg_n_0_[9] ));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT2 #(
    .INIT(4'h8)) 
    fifos_empty_i_1
       (.I0(l0_empty),
        .I1(l1_empty),
        .O(fifos_empty_i_1_n_0));
  FDRE fifos_empty_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(fifos_empty_i_1_n_0),
        .Q(fifos_empty),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT4 #(
    .INIT(16'hF444)) 
    l0_empty_i_1
       (.I0(fifos_empty),
        .I1(l0_empty),
        .I2(dout[11]),
        .I3(rd_en),
        .O(l0_empty_i_1_n_0));
  FDRE l0_empty_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(l0_empty_i_1_n_0),
        .Q(l0_empty),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hF444)) 
    l1_empty_i_1
       (.I0(fifos_empty),
        .I1(l1_empty),
        .I2(l1_empty_reg_0[11]),
        .I3(l0_empty_reg_0),
        .O(l1_empty_i_1_n_0));
  FDRE l1_empty_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(l1_empty_i_1_n_0),
        .Q(l1_empty),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000AAAAAEAA)) 
    mst_rd_en_d1_i_1
       (.I0(mst_rd_en_d1),
        .I1(dout[10]),
        .I2(empty),
        .I3(l1_empty_reg_0[10]),
        .I4(\buf0_reg[9]_0 ),
        .I5(fifos_empty),
        .O(p_17_in));
  FDCE mst_rd_en_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .CLR(\arststages_ff_reg[2] ),
        .D(p_17_in),
        .Q(mst_rd_en_d1));
  LUT6 #(
    .INIT(64'h0000000000AE0000)) 
    o_pkt_prcng_d1_i_1
       (.I0(o_pkt_prcng_d1),
        .I1(p_26_in),
        .I2(\buf0_reg[9]_0 ),
        .I3(rst),
        .I4(dest_arst),
        .I5(fifos_empty),
        .O(o_pkt_prcng));
  FDRE o_pkt_prcng_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(o_pkt_prcng),
        .Q(o_pkt_prcng_d1),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \pkt_fifo_cnt[0]_i_1 
       (.I0(ppi_rdvld),
        .I1(o_pkt_prcng),
        .O(\pkt_fifo_cnt[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \pkt_fifo_cnt[0]_i_2 
       (.I0(o_pkt_prcng),
        .I1(lane_mux_sel),
        .O(\pkt_fifo_cnt[0]_i_2_n_0 ));
  FDCE \pkt_fifo_cnt_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_cnt[0]_i_1_n_0 ),
        .CLR(\arststages_ff_reg[2] ),
        .D(\pkt_fifo_cnt[0]_i_2_n_0 ),
        .Q(lane_mux_sel));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[0]_i_1 
       (.I0(\buf0_reg_n_0_[0] ),
        .I1(lane_mux_sel),
        .I2(dout[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[10]_i_1 
       (.I0(l1_empty_reg_0[0]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[0] ),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[11]_i_1 
       (.I0(l1_empty_reg_0[1]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[1] ),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[12]_i_1 
       (.I0(l1_empty_reg_0[2]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[2] ),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[13]_i_1 
       (.I0(l1_empty_reg_0[3]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[3] ),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[14]_i_1 
       (.I0(l1_empty_reg_0[4]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[4] ),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[15]_i_1 
       (.I0(l1_empty_reg_0[5]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[5] ),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[16]_i_1 
       (.I0(l1_empty_reg_0[6]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[6] ),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[17]_i_1 
       (.I0(l1_empty_reg_0[7]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[7] ),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[18]_i_1 
       (.I0(l1_empty_reg_0[8]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[8] ),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \pkt_fifo_wdata[19]_i_1 
       (.I0(l1_empty_reg_0[9]),
        .I1(lane_mux_sel),
        .I2(\buf1_reg_n_0_[9] ),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[1]_i_1 
       (.I0(\buf0_reg_n_0_[1] ),
        .I1(lane_mux_sel),
        .I2(dout[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[2]_i_1 
       (.I0(\buf0_reg_n_0_[2] ),
        .I1(lane_mux_sel),
        .I2(dout[2]),
        .O(p_1_in[2]));
  LUT3 #(
    .INIT(8'hE0)) 
    \pkt_fifo_wdata[39]_i_1 
       (.I0(fifos_empty),
        .I1(ppi_rdvld),
        .I2(lane_mux_sel),
        .O(\pkt_fifo_wdata[39]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[3]_i_1 
       (.I0(\buf0_reg_n_0_[3] ),
        .I1(lane_mux_sel),
        .I2(dout[3]),
        .O(p_1_in[3]));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \pkt_fifo_wdata[40]_i_1 
       (.I0(wr_en),
        .I1(din[40]),
        .I2(\buf0_reg[9]_0 ),
        .I3(l1_empty_reg_0[10]),
        .I4(empty),
        .I5(dout[10]),
        .O(\pkt_fifo_wdata[40]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[4]_i_1 
       (.I0(\buf0_reg_n_0_[4] ),
        .I1(lane_mux_sel),
        .I2(dout[4]),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[5]_i_1 
       (.I0(\buf0_reg_n_0_[5] ),
        .I1(lane_mux_sel),
        .I2(dout[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[6]_i_1 
       (.I0(\buf0_reg_n_0_[6] ),
        .I1(lane_mux_sel),
        .I2(dout[6]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[7]_i_1 
       (.I0(\buf0_reg_n_0_[7] ),
        .I1(lane_mux_sel),
        .I2(dout[7]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[8]_i_1 
       (.I0(\buf0_reg_n_0_[8] ),
        .I1(lane_mux_sel),
        .I2(dout[8]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pkt_fifo_wdata[9]_i_1 
       (.I0(\buf0_reg_n_0_[9] ),
        .I1(lane_mux_sel),
        .I2(dout[9]),
        .O(p_1_in[9]));
  FDRE \pkt_fifo_wdata_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[0]),
        .Q(din[0]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[10] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[10]),
        .Q(din[10]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[11] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[11]),
        .Q(din[11]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[12] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[12]),
        .Q(din[12]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[13] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[13]),
        .Q(din[13]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[14] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[14]),
        .Q(din[14]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[15] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[15]),
        .Q(din[15]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[16] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[16]),
        .Q(din[16]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[17] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[17]),
        .Q(din[17]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[18] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[18]),
        .Q(din[18]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[19] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[19]),
        .Q(din[19]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[1]),
        .Q(din[1]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[20] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[0]),
        .Q(din[20]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[21] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[1]),
        .Q(din[21]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[22] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[2]),
        .Q(din[22]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[23] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[3]),
        .Q(din[23]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[24] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[4]),
        .Q(din[24]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[25] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[5]),
        .Q(din[25]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[26] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[6]),
        .Q(din[26]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[27] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[7]),
        .Q(din[27]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[28] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[8]),
        .Q(din[28]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[29] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(dout[9]),
        .Q(din[29]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[2] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[2]),
        .Q(din[2]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[30] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[0]),
        .Q(din[30]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[31] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[1]),
        .Q(din[31]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[32] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[2]),
        .Q(din[32]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[33] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[3]),
        .Q(din[33]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[34] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[4]),
        .Q(din[34]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[35] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[5]),
        .Q(din[35]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[36] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[6]),
        .Q(din[36]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[37] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[7]),
        .Q(din[37]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[38] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[8]),
        .Q(din[38]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[39] 
       (.C(dl0_rxbyteclkhs),
        .CE(\pkt_fifo_wdata[39]_i_1_n_0 ),
        .D(l1_empty_reg_0[9]),
        .Q(din[39]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[3] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[3]),
        .Q(din[3]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[40] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(\pkt_fifo_wdata[40]_i_1_n_0 ),
        .Q(din[40]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[41] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(fifos_empty),
        .Q(din[41]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[4] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[4]),
        .Q(din[4]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[5] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[5]),
        .Q(din[5]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[6] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[6]),
        .Q(din[6]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[7] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[7]),
        .Q(din[7]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[8] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[8]),
        .Q(din[8]),
        .R(1'b0));
  FDRE \pkt_fifo_wdata_reg[9] 
       (.C(dl0_rxbyteclkhs),
        .CE(pkt_fifo_wen_i_1_n_0),
        .D(p_1_in[9]),
        .Q(din[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hEEE0)) 
    pkt_fifo_wen_i_1
       (.I0(fifos_empty),
        .I1(ppi_rdvld),
        .I2(dout[11]),
        .I3(lane_mux_sel),
        .O(pkt_fifo_wen_i_1_n_0));
  FDRE pkt_fifo_wen_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_fifo_wen_i_1_n_0),
        .Q(wr_en),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_line_buffer" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_line_buffer
   (full,
    almost_full,
    D,
    empty,
    \gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ,
    SR,
    m_axis_aclk,
    wr_en,
    din,
    rd_en,
    \mem_wdata_reg[66] ,
    lbuf_blk_wen_i,
    p_0_in,
    m_axis_aresetn);
  output full;
  output almost_full;
  output [67:0]D;
  output empty;
  output [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  input [0:0]SR;
  input m_axis_aclk;
  input wr_en;
  input [67:0]din;
  input rd_en;
  input \mem_wdata_reg[66] ;
  input lbuf_blk_wen_i;
  input [2:0]p_0_in;
  input m_axis_aresetn;

  wire [67:0]D;
  wire [0:0]SR;
  wire almost_full;
  wire [67:0]din;
  wire empty;
  wire full;
  wire [2:0]\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ;
  wire lbuf_blk_wen_i;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire \mem_wdata_reg[66] ;
  wire [2:0]p_0_in;
  wire rd_en;
  wire wr_en;
  wire NLW_line_buf_almost_empty_UNCONNECTED;
  wire NLW_line_buf_data_valid_UNCONNECTED;
  wire NLW_line_buf_dbiterr_UNCONNECTED;
  wire NLW_line_buf_overflow_UNCONNECTED;
  wire NLW_line_buf_prog_empty_UNCONNECTED;
  wire NLW_line_buf_prog_full_UNCONNECTED;
  wire NLW_line_buf_rd_rst_busy_UNCONNECTED;
  wire NLW_line_buf_sbiterr_UNCONNECTED;
  wire NLW_line_buf_underflow_UNCONNECTED;
  wire NLW_line_buf_wr_ack_UNCONNECTED;
  wire NLW_line_buf_wr_rst_busy_UNCONNECTED;
  wire [0:0]NLW_line_buf_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_line_buf_wr_data_count_UNCONNECTED;

  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000111100001111" *) 
  (* FIFO_MEMORY_TYPE = "block" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_WRITE_DEPTH = "2048" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "2043" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "2" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* READ_DATA_WIDTH = "68" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0f0f" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "68" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_fifo_sync__parameterized0 line_buf
       (.almost_empty(NLW_line_buf_almost_empty_UNCONNECTED),
        .almost_full(almost_full),
        .data_valid(NLW_line_buf_data_valid_UNCONNECTED),
        .dbiterr(NLW_line_buf_dbiterr_UNCONNECTED),
        .din(din),
        .dout(D),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_line_buf_overflow_UNCONNECTED),
        .prog_empty(NLW_line_buf_prog_empty_UNCONNECTED),
        .prog_full(NLW_line_buf_prog_full_UNCONNECTED),
        .rd_data_count(NLW_line_buf_rd_data_count_UNCONNECTED[0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_line_buf_rd_rst_busy_UNCONNECTED),
        .rst(SR),
        .sbiterr(NLW_line_buf_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_line_buf_underflow_UNCONNECTED),
        .wr_ack(NLW_line_buf_wr_ack_UNCONNECTED),
        .wr_clk(m_axis_aclk),
        .wr_data_count(NLW_line_buf_wr_data_count_UNCONNECTED[0]),
        .wr_en(wr_en),
        .wr_rst_busy(NLW_line_buf_wr_rst_busy_UNCONNECTED));
  LUT6 #(
    .INIT(64'hFFFF2F0000000000)) 
    \mem_wdata[65]_i_1 
       (.I0(\mem_wdata_reg[66] ),
        .I1(full),
        .I2(lbuf_blk_wen_i),
        .I3(almost_full),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [0]));
  LUT6 #(
    .INIT(64'hFFFF2F0000000000)) 
    \mem_wdata[66]_i_1 
       (.I0(\mem_wdata_reg[66] ),
        .I1(full),
        .I2(lbuf_blk_wen_i),
        .I3(almost_full),
        .I4(p_0_in[1]),
        .I5(m_axis_aresetn),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [1]));
  LUT6 #(
    .INIT(64'hFFFF2F0000000000)) 
    \mem_wdata[67]_i_1 
       (.I0(\mem_wdata_reg[66] ),
        .I1(full),
        .I2(lbuf_blk_wen_i),
        .I3(almost_full),
        .I4(p_0_in[2]),
        .I5(m_axis_aresetn),
        .O(\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg [2]));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_phecc" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_phecc
   (diwc_valid_reg_0,
    diwc_valid,
    D,
    diwc_valid_reg_1,
    diwc_corrected,
    src_in,
    \diwc_corrected_reg[0]_0 ,
    p_50_out,
    p_52_out,
    p_54_out,
    p_56_out,
    p_58_out,
    p_60_out,
    p_62_out,
    p_64_out,
    p_66_out,
    p_68_out,
    p_70_out,
    p_72_out,
    p_74_out,
    p_76_out,
    p_78_out,
    p_80_out,
    \diwc_corrected_reg[5]_0 ,
    diwc_valid_reg_2,
    phecc_done_reg_0,
    phecc_done,
    phecc_status,
    diwc_valid_reg_3,
    crc_partial0,
    \byte_cnt_reg_reg[0]_0 ,
    data_wip,
    crc_trig_d2_reg,
    m_axis_aresetn_0,
    \gen_rd_b.doutb_reg_reg[37] ,
    data_wip_reg_reg,
    long_pkt_out_reg_0,
    m_axis_aresetn_1,
    m_axis_aresetn_2,
    m_axis_aresetn_3,
    short_pkt_reg_0,
    \data_type_reg_reg[0]_0 ,
    \data_type_reg_reg[5]_0 ,
    data_donei120_out,
    \byt_cnt_adj_reg[11]_0 ,
    byt_cnt_adj,
    \byte_cnt_reg_reg[11]_0 ,
    byte_cnt,
    DI,
    m_axis_aresetn_4,
    \byte_cnt_reg_reg[1]_0 ,
    \byte_cnt_reg_reg[1]_1 ,
    m_axis_aresetn_5,
    \byte_cnt_reg_reg[1]_2 ,
    short_pkt_reg_1,
    CO,
    fsm_wip_reg_reg,
    crc_en,
    \diwc_corrected_reg[7]_0 ,
    \diwc_corrected_reg[6]_0 ,
    \diwc_corrected_reg[7]_1 ,
    \diwc_corrected_reg[25]_0 ,
    \diwc_corrected_reg[25]_1 ,
    \diwc_corrected_reg[24]_0 ,
    \diwc_corrected_reg[25]_2 ,
    \diwc_corrected_reg[25]_3 ,
    \diwc_corrected_reg[24]_1 ,
    \diwc_corrected_reg[25]_4 ,
    \diwc_corrected_reg[25]_5 ,
    \diwc_corrected_reg[24]_2 ,
    \diwc_corrected_reg[25]_6 ,
    \diwc_corrected_reg[25]_7 ,
    \diwc_corrected_reg[24]_3 ,
    \diwc_corrected_reg[25]_8 ,
    wr_en,
    exp_ecc,
    diwc_corrected_zero,
    diwc_corrected_lte4,
    m_axis_aresetn,
    src_send,
    src_rcv,
    \FSM_sequential_cur_state_reg[0] ,
    \FSM_sequential_cur_state_reg[0]_0 ,
    \FSM_sequential_cur_state_reg[0]_1 ,
    Q,
    lp_wc0,
    fsm_wip_reg_reg_0,
    crc_partial_reg,
    data_done_0,
    data_wip_reg,
    crc_trig_d2,
    dout,
    mem_data1,
    dest_out,
    pkt_valid,
    \LINE_BUF_WR_64.mem_wdata_i_reg[64] ,
    \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ,
    pre_byt_cnt1_reg_i_3,
    pre_byt_cnt1_reg_i_3_0,
    out,
    S,
    data_done,
    fsm_wip_reg,
    vc_fixed,
    SR,
    E,
    m_axis_aclk);
  output diwc_valid_reg_0;
  output diwc_valid;
  output [0:0]D;
  output diwc_valid_reg_1;
  output [25:0]diwc_corrected;
  output [0:0]src_in;
  output \diwc_corrected_reg[0]_0 ;
  output p_50_out;
  output p_52_out;
  output p_54_out;
  output p_56_out;
  output p_58_out;
  output p_60_out;
  output p_62_out;
  output p_64_out;
  output p_66_out;
  output p_68_out;
  output p_70_out;
  output p_72_out;
  output p_74_out;
  output p_76_out;
  output p_78_out;
  output p_80_out;
  output \diwc_corrected_reg[5]_0 ;
  output [0:0]diwc_valid_reg_2;
  output [1:0]phecc_done_reg_0;
  output phecc_done;
  output [1:0]phecc_status;
  output diwc_valid_reg_3;
  output crc_partial0;
  output [1:0]\byte_cnt_reg_reg[0]_0 ;
  output data_wip;
  output [1:0]crc_trig_d2_reg;
  output m_axis_aresetn_0;
  output [27:0]\gen_rd_b.doutb_reg_reg[37] ;
  output data_wip_reg_reg;
  output long_pkt_out_reg_0;
  output m_axis_aresetn_1;
  output m_axis_aresetn_2;
  output m_axis_aresetn_3;
  output short_pkt_reg_0;
  output \data_type_reg_reg[0]_0 ;
  output [1:0]\data_type_reg_reg[5]_0 ;
  output data_donei120_out;
  output [3:0]\byt_cnt_adj_reg[11]_0 ;
  output [15:0]byt_cnt_adj;
  output [2:0]\byte_cnt_reg_reg[11]_0 ;
  output [15:0]byte_cnt;
  output [0:0]DI;
  output m_axis_aresetn_4;
  output [7:0]\byte_cnt_reg_reg[1]_0 ;
  output \byte_cnt_reg_reg[1]_1 ;
  output m_axis_aresetn_5;
  output \byte_cnt_reg_reg[1]_2 ;
  output short_pkt_reg_1;
  output [0:0]CO;
  output fsm_wip_reg_reg;
  output crc_en;
  output \diwc_corrected_reg[7]_0 ;
  output \diwc_corrected_reg[6]_0 ;
  output \diwc_corrected_reg[7]_1 ;
  output \diwc_corrected_reg[25]_0 ;
  output \diwc_corrected_reg[25]_1 ;
  output \diwc_corrected_reg[24]_0 ;
  output \diwc_corrected_reg[25]_2 ;
  output \diwc_corrected_reg[25]_3 ;
  output \diwc_corrected_reg[24]_1 ;
  output \diwc_corrected_reg[25]_4 ;
  output \diwc_corrected_reg[25]_5 ;
  output \diwc_corrected_reg[24]_2 ;
  output \diwc_corrected_reg[25]_6 ;
  output \diwc_corrected_reg[25]_7 ;
  output \diwc_corrected_reg[24]_3 ;
  output \diwc_corrected_reg[25]_8 ;
  output wr_en;
  output [5:0]exp_ecc;
  output diwc_corrected_zero;
  output diwc_corrected_lte4;
  input m_axis_aresetn;
  input src_send;
  input src_rcv;
  input \FSM_sequential_cur_state_reg[0] ;
  input \FSM_sequential_cur_state_reg[0]_0 ;
  input \FSM_sequential_cur_state_reg[0]_1 ;
  input [0:0]Q;
  input lp_wc0;
  input fsm_wip_reg_reg_0;
  input crc_partial_reg;
  input data_done_0;
  input data_wip_reg;
  input crc_trig_d2;
  input [31:0]dout;
  input mem_data1;
  input dest_out;
  input pkt_valid;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[64] ;
  input \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ;
  input [3:0]pre_byt_cnt1_reg_i_3;
  input [3:0]pre_byt_cnt1_reg_i_3_0;
  input [12:0]out;
  input [6:0]S;
  input data_done;
  input fsm_wip_reg;
  input [3:0]vc_fixed;
  input [0:0]SR;
  input [0:0]E;
  input m_axis_aclk;

  wire \AXI_LITE.reg_inf/diwc_valid_filt1 ;
  wire [0:0]CO;
  wire [0:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \FE_DETECT[0].fe_detect[0]_i_2_n_0 ;
  wire \FSM_sequential_cur_state[0]_i_2_n_0 ;
  wire \FSM_sequential_cur_state[0]_i_3_n_0 ;
  wire \FSM_sequential_cur_state_reg[0] ;
  wire \FSM_sequential_cur_state_reg[0]_0 ;
  wire \FSM_sequential_cur_state_reg[0]_1 ;
  wire \LINE_BUF_WR_64.mem_data_l32[0]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[10]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[11]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[16]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[17]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[18]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[19]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[1]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[20]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[21]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[22]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[23]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[24]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[25]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[2]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[3]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[4]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[5]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[6]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[7]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[8]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_data_l32[9]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_14_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_15_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_16_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_17_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_18_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_19_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_20_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_21_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[31]_i_29_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[64]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[65]_i_4_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[66]_i_2_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[66]_i_3_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i[66]_i_4_n_0 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_1 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_2 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_3 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_4 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_5 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_6 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_7 ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[64] ;
  wire \LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ;
  wire [0:0]Q;
  wire [6:0]S;
  wire [0:0]SR;
  wire [15:0]byt_cnt_adj;
  wire [15:0]byt_cnt_adj_reg;
  wire [15:0]byt_cnt_adj_reg0;
  wire [3:0]\byt_cnt_adj_reg[11]_0 ;
  wire \byt_cnt_adj_reg[15]_i_2_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_3_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_4_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_5_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_6_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_7_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_8_n_0 ;
  wire \byt_cnt_adj_reg[15]_i_9_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_10_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_2_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_3_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_4_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_5_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_6_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_7_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_8_n_0 ;
  wire \byt_cnt_adj_reg[7]_i_9_n_0 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_1 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_2 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_3 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_4 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_5 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_6 ;
  wire \byt_cnt_adj_reg_reg[15]_i_1_n_7 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_0 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_1 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_2 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_3 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_4 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_5 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_6 ;
  wire \byt_cnt_adj_reg_reg[7]_i_1_n_7 ;
  wire [15:0]byte_cnt;
  wire \byte_cnt_reg[15]_i_1_n_0 ;
  wire \byte_cnt_reg[15]_i_2_n_0 ;
  wire [1:0]\byte_cnt_reg_reg[0]_0 ;
  wire [2:0]\byte_cnt_reg_reg[11]_0 ;
  wire [7:0]\byte_cnt_reg_reg[1]_0 ;
  wire \byte_cnt_reg_reg[1]_1 ;
  wire \byte_cnt_reg_reg[1]_2 ;
  (* DONT_TOUCH *) wire [7:0]calcd_ecc;
  wire calcd_ecc_inferred_i_10_n_0;
  wire calcd_ecc_inferred_i_11_n_0;
  wire calcd_ecc_inferred_i_12_n_0;
  wire calcd_ecc_inferred_i_13_n_0;
  wire calcd_ecc_inferred_i_14_n_0;
  wire calcd_ecc_inferred_i_15_n_0;
  wire calcd_ecc_inferred_i_7_n_0;
  wire calcd_ecc_inferred_i_8_n_0;
  wire calcd_ecc_inferred_i_9_n_0;
  (* DONT_TOUCH *) wire code_notfound;
  wire code_notfound__0;
  wire code_notfound_i_2_n_0;
  wire crc_en;
  wire crc_partial0;
  wire crc_partial_reg;
  wire crc_trig_d2;
  wire [1:0]crc_trig_d2_reg;
  wire \data/csi_mem_group1 ;
  wire \data/csi_mem_group2 ;
  wire \data/frame_end ;
  wire data_done;
  wire data_done_0;
  wire data_donei120_out;
  wire [3:0]data_type;
  wire [5:4]data_type_int;
  wire \data_type_reg_reg[0]_0 ;
  wire [1:0]\data_type_reg_reg[5]_0 ;
  wire data_wip;
  wire data_wip_reg;
  wire data_wip_reg_i_4_n_0;
  wire data_wip_reg_reg;
  wire dest_out;
  wire di_null_blank;
  wire [25:0]diwc_corrected;
  wire diwc_corrected_csi_zero;
  wire diwc_corrected_lte4;
  wire diwc_corrected_lte4_i_1_n_0;
  wire diwc_corrected_lte4_i_2_n_0;
  wire \diwc_corrected_reg[0]_0 ;
  wire \diwc_corrected_reg[24]_0 ;
  wire \diwc_corrected_reg[24]_1 ;
  wire \diwc_corrected_reg[24]_2 ;
  wire \diwc_corrected_reg[24]_3 ;
  wire \diwc_corrected_reg[25]_0 ;
  wire \diwc_corrected_reg[25]_1 ;
  wire \diwc_corrected_reg[25]_2 ;
  wire \diwc_corrected_reg[25]_3 ;
  wire \diwc_corrected_reg[25]_4 ;
  wire \diwc_corrected_reg[25]_5 ;
  wire \diwc_corrected_reg[25]_6 ;
  wire \diwc_corrected_reg[25]_7 ;
  wire \diwc_corrected_reg[25]_8 ;
  wire \diwc_corrected_reg[5]_0 ;
  wire \diwc_corrected_reg[6]_0 ;
  wire \diwc_corrected_reg[7]_0 ;
  wire \diwc_corrected_reg[7]_1 ;
  wire diwc_corrected_zero;
  wire diwc_corrected_zero_i_2_n_0;
  wire diwc_corrected_zero_i_3_n_0;
  wire diwc_corrected_zero_i_4_n_0;
  wire diwc_valid;
  wire diwc_valid_int;
  wire diwc_valid_reg_0;
  wire diwc_valid_reg_1;
  wire [0:0]diwc_valid_reg_2;
  wire diwc_valid_reg_3;
  wire [31:0]dout;
  (* DONT_TOUCH *) wire [25:0]ecc_corrected;
  wire \ecc_corrected[0]_i_1_n_0 ;
  wire \ecc_corrected[10]_i_1_n_0 ;
  wire \ecc_corrected[11]_i_1_n_0 ;
  wire \ecc_corrected[12]_i_1_n_0 ;
  wire \ecc_corrected[13]_i_1_n_0 ;
  wire \ecc_corrected[14]_i_1_n_0 ;
  wire \ecc_corrected[15]_i_1_n_0 ;
  wire \ecc_corrected[16]_i_1_n_0 ;
  wire \ecc_corrected[17]_i_1_n_0 ;
  wire \ecc_corrected[18]_i_1_n_0 ;
  wire \ecc_corrected[19]_i_1_n_0 ;
  wire \ecc_corrected[1]_i_1_n_0 ;
  wire \ecc_corrected[20]_i_1_n_0 ;
  wire \ecc_corrected[21]_i_1_n_0 ;
  wire \ecc_corrected[22]_i_1_n_0 ;
  wire \ecc_corrected[23]_i_1_n_0 ;
  wire \ecc_corrected[2]_i_1_n_0 ;
  wire \ecc_corrected[3]_i_1_n_0 ;
  wire \ecc_corrected[4]_i_1_n_0 ;
  wire \ecc_corrected[5]_i_1_n_0 ;
  wire \ecc_corrected[6]_i_1_n_0 ;
  wire \ecc_corrected[7]_i_1_n_0 ;
  wire \ecc_corrected[8]_i_1_n_0 ;
  wire \ecc_corrected[9]_i_1_n_0 ;
  (* DONT_TOUCH *) wire [25:0]ecc_corrected_vc0;
  wire ecc_done;
  wire ecc_start_d2;
  wire [1:1]ecc_status;
  wire [5:0]exp_ecc;
  wire [5:0]exp_ecc_i;
  wire fsm_wip_reg;
  wire fsm_wip_reg_reg;
  wire fsm_wip_reg_reg_0;
  wire [27:0]\gen_rd_b.doutb_reg_reg[37] ;
  wire img_send_i_2_n_0;
  wire long_pkt_int;
  wire long_pkt_out;
  wire long_pkt_out_reg_0;
  wire lp_wc0;
  wire lp_wc0_i_reg_i_2_n_0;
  wire lp_wc0_i_reg_i_3_n_0;
  wire lp_wc0_i_reg_i_4_n_0;
  wire lp_wc0_i_reg_i_5_n_0;
  wire lp_wc0_i_reg_i_6_n_0;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire m_axis_aresetn_0;
  wire m_axis_aresetn_1;
  wire m_axis_aresetn_2;
  wire m_axis_aresetn_3;
  wire m_axis_aresetn_4;
  wire m_axis_aresetn_5;
  wire [25:0]mask;
  wire \mask_reg_n_0_[0] ;
  wire \mask_reg_n_0_[10] ;
  wire \mask_reg_n_0_[11] ;
  wire \mask_reg_n_0_[12] ;
  wire \mask_reg_n_0_[13] ;
  wire \mask_reg_n_0_[14] ;
  wire \mask_reg_n_0_[15] ;
  wire \mask_reg_n_0_[16] ;
  wire \mask_reg_n_0_[17] ;
  wire \mask_reg_n_0_[18] ;
  wire \mask_reg_n_0_[19] ;
  wire \mask_reg_n_0_[1] ;
  wire \mask_reg_n_0_[20] ;
  wire \mask_reg_n_0_[21] ;
  wire \mask_reg_n_0_[22] ;
  wire \mask_reg_n_0_[23] ;
  wire \mask_reg_n_0_[24] ;
  wire \mask_reg_n_0_[25] ;
  wire \mask_reg_n_0_[2] ;
  wire \mask_reg_n_0_[3] ;
  wire \mask_reg_n_0_[4] ;
  wire \mask_reg_n_0_[5] ;
  wire \mask_reg_n_0_[6] ;
  wire \mask_reg_n_0_[7] ;
  wire \mask_reg_n_0_[8] ;
  wire \mask_reg_n_0_[9] ;
  wire mem_data1;
  wire [12:0]out;
  wire p_0_in0_in;
  wire p_10_in;
  wire p_11_in;
  wire p_12_in;
  wire p_13_in;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_19_in;
  wire p_1_in;
  wire p_20_in;
  wire p_21_in;
  wire p_24_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in;
  wire p_50_out;
  wire p_52_out;
  wire p_54_out;
  wire p_56_out;
  wire p_58_out;
  wire p_5_in;
  wire p_60_out;
  wire p_62_out;
  wire p_64_out;
  wire p_66_out;
  wire p_68_out;
  wire p_6_in;
  wire p_70_out;
  wire p_72_out;
  wire p_74_out;
  wire p_76_out;
  wire p_78_out;
  wire p_7_in;
  wire p_80_out;
  wire p_8_in;
  wire p_9_in;
  wire phecc_done;
  wire [1:0]phecc_done_reg_0;
  wire [1:0]phecc_status;
  wire \phecc_status[1]_i_2_n_0 ;
  wire \pkt_header_reg_n_0_[0] ;
  wire \pkt_header_reg_n_0_[1] ;
  wire pkt_valid;
  wire [3:0]pre_byt_cnt1_reg_i_3;
  wire [3:0]pre_byt_cnt1_reg_i_3_0;
  wire short_pkt;
  wire short_pkt_int;
  wire short_pkt_reg_0;
  wire short_pkt_reg_1;
  wire [0:0]src_in;
  wire src_rcv;
  wire src_send;
  (* DONT_TOUCH *) wire [7:0]syndrome_code;
  (* DONT_TOUCH *) wire [3:0]syndrome_sum;
  wire wr_en;
  wire [7:0]\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_O_UNCONNECTED ;
  wire [7:7]\NLW_byt_cnt_adj_reg_reg[15]_i_1_CO_UNCONNECTED ;

  assign ecc_corrected_vc0[25:24] = vc_fixed[3:2];
  assign ecc_corrected_vc0[7:6] = vc_fixed[1:0];
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync[0]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_0 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync[10]_i_1 
       (.I0(diwc_corrected[24]),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[6]),
        .I3(diwc_corrected[7]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[24]_2 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync[11]_i_1 
       (.I0(diwc_corrected[24]),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[24]_3 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync[12]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_1 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync[13]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_3 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync[14]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[6]),
        .I3(diwc_corrected[7]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_5 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync[15]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_7 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync[1]_i_1 
       (.I0(diwc_corrected[7]),
        .I1(diwc_corrected[6]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[24]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[7]_1 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync[2]_i_1 
       (.I0(diwc_corrected[6]),
        .I1(diwc_corrected[7]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[24]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[6]_0 ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync[3]_i_1 
       (.I0(diwc_corrected[7]),
        .I1(diwc_corrected[6]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[24]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync[4]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_2 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync[5]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_4 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync[6]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[6]),
        .I3(diwc_corrected[7]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_6 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync[7]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[25]_8 ));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync[8]_i_1 
       (.I0(diwc_corrected[24]),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[24]_0 ));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    \ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync[9]_i_1 
       (.I0(diwc_corrected[24]),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(phecc_status[1]),
        .I5(phecc_done),
        .O(\diwc_corrected_reg[24]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    \FE_DETECT[0].fe_detect[0]_i_1 
       (.I0(diwc_corrected[25]),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[6]),
        .I4(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .O(p_80_out));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \FE_DETECT[0].fe_detect[0]_i_2 
       (.I0(diwc_corrected[3]),
        .I1(diwc_corrected[2]),
        .I2(diwc_corrected[1]),
        .I3(diwc_valid),
        .I4(diwc_corrected[0]),
        .I5(\diwc_corrected_reg[5]_0 ),
        .O(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FE_DETECT[0].fe_detect[0]_i_3 
       (.I0(diwc_corrected[5]),
        .I1(diwc_corrected[4]),
        .O(\diwc_corrected_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \FE_DETECT[10].fe_detect[10]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[6]),
        .I4(diwc_corrected[7]),
        .O(p_60_out));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    \FE_DETECT[11].fe_detect[11]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_58_out));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \FE_DETECT[12].fe_detect[12]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_56_out));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \FE_DETECT[13].fe_detect[13]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_54_out));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h00800000)) 
    \FE_DETECT[14].fe_detect[14]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[6]),
        .I4(diwc_corrected[7]),
        .O(p_52_out));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \FE_DETECT[15].fe_detect[15]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_50_out));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \FE_DETECT[1].fe_detect[1]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[7]),
        .I2(diwc_corrected[6]),
        .I3(diwc_corrected[25]),
        .I4(diwc_corrected[24]),
        .O(p_78_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \FE_DETECT[2].fe_detect[2]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[6]),
        .I2(diwc_corrected[7]),
        .I3(diwc_corrected[25]),
        .I4(diwc_corrected[24]),
        .O(p_76_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \FE_DETECT[3].fe_detect[3]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[7]),
        .I2(diwc_corrected[6]),
        .I3(diwc_corrected[25]),
        .I4(diwc_corrected[24]),
        .O(p_74_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \FE_DETECT[4].fe_detect[4]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_72_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \FE_DETECT[5].fe_detect[5]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_70_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \FE_DETECT[6].fe_detect[6]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[6]),
        .I4(diwc_corrected[7]),
        .O(p_68_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    \FE_DETECT[7].fe_detect[7]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[25]),
        .I2(diwc_corrected[24]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_66_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \FE_DETECT[8].fe_detect[8]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_64_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \FE_DETECT[9].fe_detect[9]_i_1 
       (.I0(\FE_DETECT[0].fe_detect[0]_i_2_n_0 ),
        .I1(diwc_corrected[24]),
        .I2(diwc_corrected[25]),
        .I3(diwc_corrected[7]),
        .I4(diwc_corrected[6]),
        .O(p_62_out));
  LUT6 #(
    .INIT(64'h0001FFFF00010001)) 
    \FSM_sequential_cur_state[0]_i_1 
       (.I0(diwc_valid_reg_1),
        .I1(\FSM_sequential_cur_state[0]_i_2_n_0 ),
        .I2(\FSM_sequential_cur_state[0]_i_3_n_0 ),
        .I3(\FSM_sequential_cur_state_reg[0] ),
        .I4(\FSM_sequential_cur_state_reg[0]_0 ),
        .I5(\FSM_sequential_cur_state_reg[0]_1 ),
        .O(D));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_cur_state[0]_i_2 
       (.I0(diwc_valid),
        .I1(lp_wc0_i_reg_i_2_n_0),
        .O(\FSM_sequential_cur_state[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \FSM_sequential_cur_state[0]_i_3 
       (.I0(phecc_status[1]),
        .I1(Q),
        .I2(phecc_done),
        .O(\FSM_sequential_cur_state[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_cur_state[1]_i_2 
       (.I0(diwc_valid),
        .I1(data_wip_reg_i_4_n_0),
        .O(diwc_valid_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \HSC2R_CDC[32].hsc2r_bus_cdc_i_1 
       (.I0(diwc_valid),
        .I1(\diwc_corrected_reg[0]_0 ),
        .O(src_in));
  LUT6 #(
    .INIT(64'h00F73FFFFF071F0F)) 
    \HSC2R_CDC[32].hsc2r_bus_cdc_i_2 
       (.I0(diwc_corrected[0]),
        .I1(diwc_corrected[1]),
        .I2(diwc_corrected[2]),
        .I3(diwc_corrected[5]),
        .I4(diwc_corrected[4]),
        .I5(diwc_corrected[3]),
        .O(\diwc_corrected_reg[0]_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \LINE_BUF_WR_64.lbuf_wr_byte_cnt[3]_i_1 
       (.I0(m_axis_aresetn),
        .I1(long_pkt_out_reg_0),
        .I2(dest_out),
        .O(m_axis_aresetn_2));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[0]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[0]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[1]),
        .I3(data_wip_reg_reg),
        .I4(dout[0]),
        .O(\gen_rd_b.doutb_reg_reg[37] [0]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[0]_i_2 
       (.I0(diwc_corrected[0]),
        .I1(dout[24]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[10]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[10]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[14]),
        .I3(data_wip_reg_reg),
        .I4(dout[10]),
        .O(\gen_rd_b.doutb_reg_reg[37] [10]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[10]_i_2 
       (.I0(diwc_corrected[10]),
        .I1(dout[18]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[11]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[11]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[15]),
        .I3(data_wip_reg_reg),
        .I4(dout[11]),
        .O(\gen_rd_b.doutb_reg_reg[37] [11]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[11]_i_2 
       (.I0(diwc_corrected[11]),
        .I1(dout[19]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[12]_i_1 
       (.I0(data_wip_reg_reg),
        .I1(dout[12]),
        .I2(m_axis_aresetn_1),
        .I3(dout[20]),
        .I4(diwc_corrected[12]),
        .I5(m_axis_aresetn_0),
        .O(\gen_rd_b.doutb_reg_reg[37] [12]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[13]_i_1 
       (.I0(data_wip_reg_reg),
        .I1(dout[13]),
        .I2(m_axis_aresetn_1),
        .I3(dout[21]),
        .I4(diwc_corrected[13]),
        .I5(m_axis_aresetn_0),
        .O(\gen_rd_b.doutb_reg_reg[37] [13]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[14]_i_1 
       (.I0(data_wip_reg_reg),
        .I1(dout[14]),
        .I2(m_axis_aresetn_1),
        .I3(dout[22]),
        .I4(diwc_corrected[14]),
        .I5(m_axis_aresetn_0),
        .O(\gen_rd_b.doutb_reg_reg[37] [14]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[15]_i_1 
       (.I0(data_wip_reg_reg),
        .I1(dout[15]),
        .I2(m_axis_aresetn_1),
        .I3(dout[23]),
        .I4(diwc_corrected[15]),
        .I5(m_axis_aresetn_0),
        .O(\gen_rd_b.doutb_reg_reg[37] [15]));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \LINE_BUF_WR_64.mem_data_l32[15]_i_2 
       (.I0(long_pkt_out_reg_0),
        .I1(m_axis_aresetn),
        .O(m_axis_aresetn_0));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[16]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[16]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[17]),
        .I3(data_wip_reg_reg),
        .I4(dout[16]),
        .O(\gen_rd_b.doutb_reg_reg[37] [16]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[16]_i_2 
       (.I0(diwc_corrected[16]),
        .I1(dout[8]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[16]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[17]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[17]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[18]),
        .I3(data_wip_reg_reg),
        .I4(dout[17]),
        .O(\gen_rd_b.doutb_reg_reg[37] [17]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[17]_i_2 
       (.I0(diwc_corrected[17]),
        .I1(dout[9]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[18]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[18]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[19]),
        .I3(data_wip_reg_reg),
        .I4(dout[18]),
        .O(\gen_rd_b.doutb_reg_reg[37] [18]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[18]_i_2 
       (.I0(diwc_corrected[18]),
        .I1(dout[10]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[18]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[19]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[19]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[20]),
        .I3(data_wip_reg_reg),
        .I4(dout[19]),
        .O(\gen_rd_b.doutb_reg_reg[37] [19]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[19]_i_2 
       (.I0(diwc_corrected[19]),
        .I1(dout[11]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[1]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[1]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[2]),
        .I3(data_wip_reg_reg),
        .I4(dout[1]),
        .O(\gen_rd_b.doutb_reg_reg[37] [1]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[1]_i_2 
       (.I0(diwc_corrected[1]),
        .I1(dout[25]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[20]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[20]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[23]),
        .I3(data_wip_reg_reg),
        .I4(dout[20]),
        .O(\gen_rd_b.doutb_reg_reg[37] [20]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[20]_i_2 
       (.I0(diwc_corrected[20]),
        .I1(dout[12]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[21]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[21]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[24]),
        .I3(data_wip_reg_reg),
        .I4(dout[21]),
        .O(\gen_rd_b.doutb_reg_reg[37] [21]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[21]_i_2 
       (.I0(diwc_corrected[21]),
        .I1(dout[13]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[22]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[22]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[25]),
        .I3(data_wip_reg_reg),
        .I4(dout[22]),
        .O(\gen_rd_b.doutb_reg_reg[37] [22]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[22]_i_2 
       (.I0(diwc_corrected[22]),
        .I1(dout[14]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[23]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[23]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[26]),
        .I3(data_wip_reg_reg),
        .I4(dout[23]),
        .O(\gen_rd_b.doutb_reg_reg[37] [23]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[23]_i_2 
       (.I0(diwc_corrected[23]),
        .I1(dout[15]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[24]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[24]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[28]),
        .I3(data_wip_reg_reg),
        .I4(dout[24]),
        .O(\gen_rd_b.doutb_reg_reg[37] [24]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[24]_i_2 
       (.I0(diwc_corrected[24]),
        .I1(dout[0]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[25]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[25]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[29]),
        .I3(data_wip_reg_reg),
        .I4(dout[25]),
        .O(\gen_rd_b.doutb_reg_reg[37] [25]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[25]_i_2 
       (.I0(diwc_corrected[25]),
        .I1(dout[1]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[26]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I1(dout[30]),
        .I2(data_wip_reg_reg),
        .I3(dout[26]),
        .I4(dout[2]),
        .I5(m_axis_aresetn_1),
        .O(\gen_rd_b.doutb_reg_reg[37] [26]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \LINE_BUF_WR_64.mem_data_l32[27]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I1(dout[31]),
        .I2(data_wip_reg_reg),
        .I3(dout[27]),
        .I4(dout[3]),
        .I5(m_axis_aresetn_1),
        .O(\gen_rd_b.doutb_reg_reg[37] [27]));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \LINE_BUF_WR_64.mem_data_l32[27]_i_2 
       (.I0(\data/csi_mem_group1 ),
        .I1(data_wip_reg),
        .I2(pkt_valid),
        .I3(m_axis_aresetn),
        .I4(long_pkt_out_reg_0),
        .I5(\data/csi_mem_group2 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[2]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[2]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[3]),
        .I3(data_wip_reg_reg),
        .I4(dout[2]),
        .O(\gen_rd_b.doutb_reg_reg[37] [2]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[2]_i_2 
       (.I0(diwc_corrected[2]),
        .I1(dout[26]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_3 
       (.I0(long_pkt_out_reg_0),
        .I1(m_axis_aresetn),
        .I2(pkt_valid),
        .I3(data_wip_reg),
        .I4(\data/csi_mem_group1 ),
        .O(m_axis_aresetn_1));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_4 
       (.I0(\data/csi_mem_group1 ),
        .I1(data_wip_reg),
        .I2(pkt_valid),
        .I3(m_axis_aresetn),
        .I4(long_pkt_out_reg_0),
        .I5(\data/csi_mem_group2 ),
        .O(data_wip_reg_reg));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'h00400000)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_5 
       (.I0(data_type[0]),
        .I1(data_type[1]),
        .I2(data_type[3]),
        .I3(\data_type_reg_reg[5]_0 [1]),
        .I4(\data_type_reg_reg[5]_0 [0]),
        .O(\data/csi_mem_group1 ));
  LUT6 #(
    .INIT(64'hFAFAFAFABAFABAF8)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_6 
       (.I0(\data_type_reg_reg[5]_0 [1]),
        .I1(data_type[1]),
        .I2(\data_type_reg_reg[5]_0 [0]),
        .I3(data_type[3]),
        .I4(data_type[2]),
        .I5(data_type[0]),
        .O(\data/csi_mem_group2 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[3]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[3]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[4]),
        .I3(data_wip_reg_reg),
        .I4(dout[3]),
        .O(\gen_rd_b.doutb_reg_reg[37] [3]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[3]_i_2 
       (.I0(diwc_corrected[3]),
        .I1(dout[27]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[4]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[4]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[7]),
        .I3(data_wip_reg_reg),
        .I4(dout[4]),
        .O(\gen_rd_b.doutb_reg_reg[37] [4]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[4]_i_2 
       (.I0(diwc_corrected[4]),
        .I1(dout[28]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[5]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[5]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[8]),
        .I3(data_wip_reg_reg),
        .I4(dout[5]),
        .O(\gen_rd_b.doutb_reg_reg[37] [5]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[5]_i_2 
       (.I0(diwc_corrected[5]),
        .I1(dout[29]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[6]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[6]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[9]),
        .I3(data_wip_reg_reg),
        .I4(dout[6]),
        .O(\gen_rd_b.doutb_reg_reg[37] [6]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[6]_i_2 
       (.I0(diwc_corrected[6]),
        .I1(dout[30]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[7]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[7]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[10]),
        .I3(data_wip_reg_reg),
        .I4(dout[7]),
        .O(\gen_rd_b.doutb_reg_reg[37] [7]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[7]_i_2 
       (.I0(diwc_corrected[7]),
        .I1(dout[31]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[8]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[8]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[12]),
        .I3(data_wip_reg_reg),
        .I4(dout[8]),
        .O(\gen_rd_b.doutb_reg_reg[37] [8]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[8]_i_2 
       (.I0(diwc_corrected[8]),
        .I1(dout[16]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \LINE_BUF_WR_64.mem_data_l32[9]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_data_l32[9]_i_2_n_0 ),
        .I1(\LINE_BUF_WR_64.mem_data_l32[27]_i_2_n_0 ),
        .I2(dout[13]),
        .I3(data_wip_reg_reg),
        .I4(dout[9]),
        .O(\gen_rd_b.doutb_reg_reg[37] [9]));
  LUT6 #(
    .INIT(64'hAC00A000A000A000)) 
    \LINE_BUF_WR_64.mem_data_l32[9]_i_2 
       (.I0(diwc_corrected[9]),
        .I1(dout[17]),
        .I2(long_pkt_out_reg_0),
        .I3(m_axis_aresetn),
        .I4(mem_data1),
        .I5(\data/csi_mem_group1 ),
        .O(\LINE_BUF_WR_64.mem_data_l32[9]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_14 
       (.I0(diwc_corrected[9]),
        .I1(diwc_corrected[8]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_15 
       (.I0(diwc_corrected[23]),
        .I1(out[12]),
        .I2(diwc_corrected[22]),
        .I3(out[11]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_16 
       (.I0(diwc_corrected[21]),
        .I1(out[10]),
        .I2(diwc_corrected[20]),
        .I3(out[9]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_17 
       (.I0(diwc_corrected[19]),
        .I1(out[8]),
        .I2(diwc_corrected[18]),
        .I3(out[7]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_18 
       (.I0(diwc_corrected[17]),
        .I1(out[6]),
        .I2(diwc_corrected[16]),
        .I3(out[5]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_19 
       (.I0(diwc_corrected[15]),
        .I1(out[4]),
        .I2(diwc_corrected[14]),
        .I3(out[3]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_20 
       (.I0(diwc_corrected[13]),
        .I1(out[2]),
        .I2(diwc_corrected[12]),
        .I3(out[1]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'hB2)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_21 
       (.I0(diwc_corrected[11]),
        .I1(out[0]),
        .I2(diwc_corrected[10]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'h09)) 
    \LINE_BUF_WR_64.mem_wdata_i[31]_i_29 
       (.I0(diwc_corrected[11]),
        .I1(out[0]),
        .I2(diwc_corrected[10]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[31]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hF000F000F0E0F000)) 
    \LINE_BUF_WR_64.mem_wdata_i[64]_i_1 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i[64]_i_2_n_0 ),
        .I1(\data/frame_end ),
        .I2(\LINE_BUF_WR_64.mem_wdata_i_reg[64] ),
        .I3(\LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 ),
        .I4(short_pkt),
        .I5(\data_type_reg_reg[0]_0 ),
        .O(short_pkt_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFD)) 
    \LINE_BUF_WR_64.mem_wdata_i[64]_i_2 
       (.I0(data_type[1]),
        .I1(\data_type_reg_reg[5]_0 [0]),
        .I2(data_type[3]),
        .I3(data_type[2]),
        .I4(\data_type_reg_reg[5]_0 [1]),
        .I5(data_type[0]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[64]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \LINE_BUF_WR_64.mem_wdata_i[64]_i_3 
       (.I0(\data_type_reg_reg[5]_0 [1]),
        .I1(data_type[0]),
        .I2(data_type[1]),
        .I3(\data_type_reg_reg[5]_0 [0]),
        .I4(data_type[3]),
        .I5(data_type[2]),
        .O(\data/frame_end ));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT4 #(
    .INIT(16'h8880)) 
    \LINE_BUF_WR_64.mem_wdata_i[65]_i_3 
       (.I0(short_pkt),
        .I1(m_axis_aresetn),
        .I2(\data_type_reg_reg[5]_0 [1]),
        .I3(\LINE_BUF_WR_64.mem_wdata_i[65]_i_4_n_0 ),
        .O(short_pkt_reg_1));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \LINE_BUF_WR_64.mem_wdata_i[65]_i_4 
       (.I0(data_type[2]),
        .I1(data_type[3]),
        .I2(\data_type_reg_reg[5]_0 [0]),
        .I3(data_type[1]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[65]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \LINE_BUF_WR_64.mem_wdata_i[66]_i_1 
       (.I0(short_pkt),
        .I1(\LINE_BUF_WR_64.mem_wdata_i[66]_i_2_n_0 ),
        .I2(crc_trig_d2),
        .O(crc_trig_d2_reg[0]));
  LUT6 #(
    .INIT(64'h8888888880888888)) 
    \LINE_BUF_WR_64.mem_wdata_i[66]_i_2 
       (.I0(\LINE_BUF_WR_64.mem_wdata_i[66]_i_3_n_0 ),
        .I1(long_pkt_out),
        .I2(diwc_corrected[1]),
        .I3(\LINE_BUF_WR_64.mem_wdata_i[66]_i_4_n_0 ),
        .I4(diwc_corrected[4]),
        .I5(diwc_corrected[5]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[66]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h333355DF8CDDDDDD)) 
    \LINE_BUF_WR_64.mem_wdata_i[66]_i_3 
       (.I0(diwc_corrected[2]),
        .I1(diwc_corrected[3]),
        .I2(diwc_corrected[0]),
        .I3(diwc_corrected[1]),
        .I4(diwc_corrected[4]),
        .I5(diwc_corrected[5]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[66]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \LINE_BUF_WR_64.mem_wdata_i[66]_i_4 
       (.I0(diwc_corrected[3]),
        .I1(diwc_corrected[2]),
        .O(\LINE_BUF_WR_64.mem_wdata_i[66]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \LINE_BUF_WR_64.mem_wdata_i[67]_i_2 
       (.I0(m_axis_aresetn_0),
        .I1(crc_trig_d2),
        .O(crc_trig_d2_reg[1]));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 \LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6 
       (.CI(\LINE_BUF_WR_64.mem_wdata_i[31]_i_14_n_0 ),
        .CI_TOP(1'b0),
        .CO({CO,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_1 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_2 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_3 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_4 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_5 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_6 ,\LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_n_7 }),
        .DI({1'b0,\LINE_BUF_WR_64.mem_wdata_i[31]_i_15_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_16_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_17_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_18_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_19_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_20_n_0 ,\LINE_BUF_WR_64.mem_wdata_i[31]_i_21_n_0 }),
        .O(\NLW_LINE_BUF_WR_64.mem_wdata_i_reg[31]_i_6_O_UNCONNECTED [7:0]),
        .S({S,\LINE_BUF_WR_64.mem_wdata_i[31]_i_29_n_0 }));
  LUT4 #(
    .INIT(16'hFF40)) 
    \LINE_BUF_WR_64.mem_wen_i_i_3 
       (.I0(di_null_blank),
        .I1(long_pkt_out),
        .I2(\LINE_BUF_WR_64.mem_wdata_i[66]_i_3_n_0 ),
        .I3(short_pkt),
        .O(long_pkt_out_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \LINE_BUF_WR_64.mem_wen_i_i_5 
       (.I0(diwc_corrected[5]),
        .I1(diwc_corrected[4]),
        .I2(diwc_corrected[3]),
        .I3(diwc_corrected[2]),
        .I4(diwc_corrected[1]),
        .O(di_null_blank));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \LINE_BUF_WR_64.str_fwd_i_3 
       (.I0(long_pkt_out_reg_0),
        .I1(m_axis_aresetn),
        .O(m_axis_aresetn_3));
  FDRE \byt_cnt_adj_reg[0] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[0]),
        .Q(byt_cnt_adj[0]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[10] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[10]),
        .Q(byt_cnt_adj[10]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[11] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[11]),
        .Q(byt_cnt_adj[11]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[12] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[12]),
        .Q(byt_cnt_adj[12]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[13] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[13]),
        .Q(byt_cnt_adj[13]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[14] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[14]),
        .Q(byt_cnt_adj[14]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[15] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[15]),
        .Q(byt_cnt_adj[15]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_2 
       (.I0(\mask_reg_n_0_[23] ),
        .I1(p_11_in),
        .O(\byt_cnt_adj_reg[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_3 
       (.I0(\mask_reg_n_0_[22] ),
        .I1(p_10_in),
        .O(\byt_cnt_adj_reg[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_4 
       (.I0(\mask_reg_n_0_[21] ),
        .I1(p_9_in),
        .O(\byt_cnt_adj_reg[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_5 
       (.I0(\mask_reg_n_0_[20] ),
        .I1(p_8_in),
        .O(\byt_cnt_adj_reg[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_6 
       (.I0(\mask_reg_n_0_[19] ),
        .I1(p_24_in),
        .O(\byt_cnt_adj_reg[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_7 
       (.I0(\mask_reg_n_0_[18] ),
        .I1(p_21_in),
        .O(\byt_cnt_adj_reg[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_8 
       (.I0(\mask_reg_n_0_[17] ),
        .I1(p_17_in),
        .O(\byt_cnt_adj_reg[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[15]_i_9 
       (.I0(\mask_reg_n_0_[16] ),
        .I1(p_7_in),
        .O(\byt_cnt_adj_reg[15]_i_9_n_0 ));
  FDRE \byt_cnt_adj_reg[1] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[1]),
        .Q(byt_cnt_adj[1]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[2] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[2]),
        .Q(byt_cnt_adj[2]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[3] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[3]),
        .Q(byt_cnt_adj[3]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[4] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[4]),
        .Q(byt_cnt_adj[4]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[5] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[5]),
        .Q(byt_cnt_adj[5]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[6] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[6]),
        .Q(byt_cnt_adj[6]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[7] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[7]),
        .Q(byt_cnt_adj[7]),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_10 
       (.I0(\mask_reg_n_0_[8] ),
        .I1(p_14_in),
        .O(\byt_cnt_adj_reg[7]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_2 
       (.I0(\mask_reg_n_0_[9] ),
        .I1(p_19_in),
        .O(\byt_cnt_adj_reg[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_3 
       (.I0(\mask_reg_n_0_[15] ),
        .I1(p_20_in),
        .O(\byt_cnt_adj_reg[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_4 
       (.I0(\mask_reg_n_0_[14] ),
        .I1(p_16_in),
        .O(\byt_cnt_adj_reg[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_5 
       (.I0(\mask_reg_n_0_[13] ),
        .I1(p_6_in),
        .O(\byt_cnt_adj_reg[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_6 
       (.I0(\mask_reg_n_0_[12] ),
        .I1(p_15_in),
        .O(\byt_cnt_adj_reg[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_7 
       (.I0(\mask_reg_n_0_[11] ),
        .I1(p_5_in),
        .O(\byt_cnt_adj_reg[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \byt_cnt_adj_reg[7]_i_8 
       (.I0(\mask_reg_n_0_[10] ),
        .I1(p_4_in),
        .O(\byt_cnt_adj_reg[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \byt_cnt_adj_reg[7]_i_9 
       (.I0(\mask_reg_n_0_[8] ),
        .I1(p_14_in),
        .O(\byt_cnt_adj_reg[7]_i_9_n_0 ));
  FDRE \byt_cnt_adj_reg[8] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[8]),
        .Q(byt_cnt_adj[8]),
        .R(SR));
  FDRE \byt_cnt_adj_reg[9] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(byt_cnt_adj_reg[9]),
        .Q(byt_cnt_adj[9]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[0]),
        .Q(byt_cnt_adj_reg[0]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[10]),
        .Q(byt_cnt_adj_reg[10]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[11]),
        .Q(byt_cnt_adj_reg[11]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[12]),
        .Q(byt_cnt_adj_reg[12]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[13]),
        .Q(byt_cnt_adj_reg[13]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[14]),
        .Q(byt_cnt_adj_reg[14]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[15]),
        .Q(byt_cnt_adj_reg[15]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \byt_cnt_adj_reg_reg[15]_i_1 
       (.CI(\byt_cnt_adj_reg_reg[7]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_byt_cnt_adj_reg_reg[15]_i_1_CO_UNCONNECTED [7],\byt_cnt_adj_reg_reg[15]_i_1_n_1 ,\byt_cnt_adj_reg_reg[15]_i_1_n_2 ,\byt_cnt_adj_reg_reg[15]_i_1_n_3 ,\byt_cnt_adj_reg_reg[15]_i_1_n_4 ,\byt_cnt_adj_reg_reg[15]_i_1_n_5 ,\byt_cnt_adj_reg_reg[15]_i_1_n_6 ,\byt_cnt_adj_reg_reg[15]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(byt_cnt_adj_reg0[15:8]),
        .S({\byt_cnt_adj_reg[15]_i_2_n_0 ,\byt_cnt_adj_reg[15]_i_3_n_0 ,\byt_cnt_adj_reg[15]_i_4_n_0 ,\byt_cnt_adj_reg[15]_i_5_n_0 ,\byt_cnt_adj_reg[15]_i_6_n_0 ,\byt_cnt_adj_reg[15]_i_7_n_0 ,\byt_cnt_adj_reg[15]_i_8_n_0 ,\byt_cnt_adj_reg[15]_i_9_n_0 }));
  FDRE \byt_cnt_adj_reg_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[1]),
        .Q(byt_cnt_adj_reg[1]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[2]),
        .Q(byt_cnt_adj_reg[2]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[3]),
        .Q(byt_cnt_adj_reg[3]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[4]),
        .Q(byt_cnt_adj_reg[4]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[5]),
        .Q(byt_cnt_adj_reg[5]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[6]),
        .Q(byt_cnt_adj_reg[6]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[7]),
        .Q(byt_cnt_adj_reg[7]),
        .R(SR));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \byt_cnt_adj_reg_reg[7]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\byt_cnt_adj_reg_reg[7]_i_1_n_0 ,\byt_cnt_adj_reg_reg[7]_i_1_n_1 ,\byt_cnt_adj_reg_reg[7]_i_1_n_2 ,\byt_cnt_adj_reg_reg[7]_i_1_n_3 ,\byt_cnt_adj_reg_reg[7]_i_1_n_4 ,\byt_cnt_adj_reg_reg[7]_i_1_n_5 ,\byt_cnt_adj_reg_reg[7]_i_1_n_6 ,\byt_cnt_adj_reg_reg[7]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\byt_cnt_adj_reg[7]_i_2_n_0 ,1'b0}),
        .O(byt_cnt_adj_reg0[7:0]),
        .S({\byt_cnt_adj_reg[7]_i_3_n_0 ,\byt_cnt_adj_reg[7]_i_4_n_0 ,\byt_cnt_adj_reg[7]_i_5_n_0 ,\byt_cnt_adj_reg[7]_i_6_n_0 ,\byt_cnt_adj_reg[7]_i_7_n_0 ,\byt_cnt_adj_reg[7]_i_8_n_0 ,\byt_cnt_adj_reg[7]_i_9_n_0 ,\byt_cnt_adj_reg[7]_i_10_n_0 }));
  FDRE \byt_cnt_adj_reg_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[8]),
        .Q(byt_cnt_adj_reg[8]),
        .R(SR));
  FDRE \byt_cnt_adj_reg_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(byt_cnt_adj_reg0[9]),
        .Q(byt_cnt_adj_reg[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h00100000FFFFFFFF)) 
    \byte_cnt_reg[15]_i_1 
       (.I0(ecc_corrected_vc0[2]),
        .I1(code_notfound),
        .I2(ecc_done),
        .I3(ecc_corrected_vc0[3]),
        .I4(\byte_cnt_reg[15]_i_2_n_0 ),
        .I5(m_axis_aresetn),
        .O(\byte_cnt_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000050033330533)) 
    \byte_cnt_reg[15]_i_2 
       (.I0(ecc_corrected_vc0[5]),
        .I1(\data_type_reg_reg[5]_0 [1]),
        .I2(ecc_corrected_vc0[4]),
        .I3(ecc_done),
        .I4(code_notfound),
        .I5(\data_type_reg_reg[5]_0 [0]),
        .O(\byte_cnt_reg[15]_i_2_n_0 ));
  FDRE \byte_cnt_reg_reg[0] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[8]),
        .Q(byte_cnt[0]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[10] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[18]),
        .Q(byte_cnt[10]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[11] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[19]),
        .Q(byte_cnt[11]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[12] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[20]),
        .Q(byte_cnt[12]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[13] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[21]),
        .Q(byte_cnt[13]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[14] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[22]),
        .Q(byte_cnt[14]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[15] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[23]),
        .Q(byte_cnt[15]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[1] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[9]),
        .Q(byte_cnt[1]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[2] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[10]),
        .Q(byte_cnt[2]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[3] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[11]),
        .Q(byte_cnt[3]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[4] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[12]),
        .Q(byte_cnt[4]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[5] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[13]),
        .Q(byte_cnt[5]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[6] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[14]),
        .Q(byte_cnt[6]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[7] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[15]),
        .Q(byte_cnt[7]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[8] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[16]),
        .Q(byte_cnt[8]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  FDRE \byte_cnt_reg_reg[9] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[17]),
        .Q(byte_cnt[9]),
        .R(\byte_cnt_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA00002000)) 
    c_en_i_1
       (.I0(pkt_valid),
        .I1(\FSM_sequential_cur_state[0]_i_3_n_0 ),
        .I2(\FSM_sequential_cur_state[0]_i_2_n_0 ),
        .I3(data_wip_reg_i_4_n_0),
        .I4(fsm_wip_reg_reg_0),
        .I5(crc_partial_reg),
        .O(crc_en));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_1
       (.I0(p_21_in),
        .I1(p_15_in),
        .I2(calcd_ecc_inferred_i_7_n_0),
        .I3(calcd_ecc_inferred_i_8_n_0),
        .I4(p_20_in),
        .I5(p_24_in),
        .O(calcd_ecc[5]));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'h96)) 
    calcd_ecc_inferred_i_10
       (.I0(p_9_in),
        .I1(p_8_in),
        .I2(p_12_in),
        .O(calcd_ecc_inferred_i_10_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_11
       (.I0(\pkt_header_reg_n_0_[1] ),
        .I1(p_16_in),
        .I2(p_6_in),
        .I3(p_11_in),
        .I4(p_0_in0_in),
        .I5(p_3_in),
        .O(calcd_ecc_inferred_i_11_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_12
       (.I0(\pkt_header_reg_n_0_[0] ),
        .I1(p_13_in),
        .I2(p_0_in0_in),
        .I3(p_10_in),
        .I4(p_5_in),
        .I5(p_2_in),
        .O(calcd_ecc_inferred_i_12_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_13
       (.I0(p_17_in),
        .I1(p_10_in),
        .I2(p_11_in),
        .I3(calcd_ecc_inferred_i_15_n_0),
        .I4(p_14_in),
        .I5(p_16_in),
        .O(calcd_ecc_inferred_i_13_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_14
       (.I0(p_2_in),
        .I1(p_5_in),
        .I2(p_6_in),
        .I3(p_7_in),
        .I4(p_0_in0_in),
        .I5(p_3_in),
        .O(calcd_ecc_inferred_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    calcd_ecc_inferred_i_15
       (.I0(\pkt_header_reg_n_0_[1] ),
        .I1(\pkt_header_reg_n_0_[0] ),
        .I2(p_4_in),
        .I3(p_1_in),
        .O(calcd_ecc_inferred_i_15_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_2
       (.I0(p_21_in),
        .I1(p_13_in),
        .I2(calcd_ecc_inferred_i_7_n_0),
        .I3(calcd_ecc_inferred_i_9_n_0),
        .I4(p_19_in),
        .I5(p_24_in),
        .O(calcd_ecc[4]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_3
       (.I0(p_20_in),
        .I1(p_14_in),
        .I2(calcd_ecc_inferred_i_10_n_0),
        .I3(calcd_ecc_inferred_i_11_n_0),
        .I4(p_19_in),
        .I5(p_24_in),
        .O(calcd_ecc[3]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_4
       (.I0(p_21_in),
        .I1(p_15_in),
        .I2(calcd_ecc_inferred_i_10_n_0),
        .I3(calcd_ecc_inferred_i_12_n_0),
        .I4(p_20_in),
        .I5(p_19_in),
        .O(calcd_ecc[2]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_5
       (.I0(calcd_ecc_inferred_i_13_n_0),
        .I1(p_13_in),
        .I2(p_9_in),
        .I3(p_8_in),
        .I4(p_12_in),
        .I5(p_15_in),
        .O(calcd_ecc[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_6
       (.I0(calcd_ecc_inferred_i_14_n_0),
        .I1(calcd_ecc_inferred_i_15_n_0),
        .I2(p_11_in),
        .I3(p_10_in),
        .I4(p_9_in),
        .I5(p_8_in),
        .O(calcd_ecc[0]));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'h96)) 
    calcd_ecc_inferred_i_7
       (.I0(p_11_in),
        .I1(p_10_in),
        .I2(p_17_in),
        .O(calcd_ecc_inferred_i_7_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_8
       (.I0(p_4_in),
        .I1(p_16_in),
        .I2(p_9_in),
        .I3(p_7_in),
        .I4(p_5_in),
        .I5(p_6_in),
        .O(calcd_ecc_inferred_i_8_n_0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    calcd_ecc_inferred_i_9
       (.I0(p_1_in),
        .I1(p_14_in),
        .I2(p_8_in),
        .I3(p_7_in),
        .I4(p_2_in),
        .I5(p_3_in),
        .O(calcd_ecc_inferred_i_9_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    calcd_ecc_inst
       (.I0(calcd_ecc[7]),
        .O(syndrome_code[7]));
  LUT1 #(
    .INIT(2'h2)) 
    calcd_ecc_inst__0
       (.I0(calcd_ecc[6]),
        .O(syndrome_code[6]));
  LUT5 #(
    .INIT(32'hAAAAA8AA)) 
    code_notfound_i_1
       (.I0(code_notfound_i_2_n_0),
        .I1(syndrome_sum[1]),
        .I2(syndrome_sum[2]),
        .I3(syndrome_sum[0]),
        .I4(syndrome_sum[3]),
        .O(code_notfound__0));
  LUT6 #(
    .INIT(64'h966969976997977E)) 
    code_notfound_i_2
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[5]),
        .I3(syndrome_code[4]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[2]),
        .O(code_notfound_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE code_notfound_reg
       (.C(m_axis_aclk),
        .CE(E),
        .D(code_notfound__0),
        .Q(code_notfound),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \crc_blk_sel[0]_i_1 
       (.I0(byte_cnt[1]),
        .I1(m_axis_aresetn),
        .I2(byte_cnt[0]),
        .O(\byte_cnt_reg_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \crc_blk_sel[1]_i_1 
       (.I0(m_axis_aresetn),
        .I1(byte_cnt[1]),
        .I2(byte_cnt[0]),
        .O(m_axis_aresetn_5));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \crc_blk_sel[2]_i_1 
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(m_axis_aresetn),
        .O(\byte_cnt_reg_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \crc_blk_sel[3]_i_1 
       (.I0(m_axis_aresetn),
        .I1(byte_cnt[1]),
        .I2(byte_cnt[0]),
        .O(m_axis_aresetn_4));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \crc_p_strb[0]_i_1 
       (.I0(byte_cnt[0]),
        .I1(byte_cnt[1]),
        .O(\byte_cnt_reg_reg[0]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \crc_p_strb[1]_i_1 
       (.I0(byte_cnt[0]),
        .I1(byte_cnt[1]),
        .O(\byte_cnt_reg_reg[0]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[10]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[18]),
        .I2(byte_cnt[0]),
        .I3(dout[26]),
        .O(\byte_cnt_reg_reg[1]_0 [2]));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[11]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[19]),
        .I2(byte_cnt[0]),
        .I3(dout[27]),
        .O(\byte_cnt_reg_reg[1]_0 [3]));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[12]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[20]),
        .I2(byte_cnt[0]),
        .I3(dout[28]),
        .O(\byte_cnt_reg_reg[1]_0 [4]));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[13]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[21]),
        .I2(byte_cnt[0]),
        .I3(dout[29]),
        .O(\byte_cnt_reg_reg[1]_0 [5]));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[14]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[22]),
        .I2(byte_cnt[0]),
        .I3(dout[30]),
        .O(\byte_cnt_reg_reg[1]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[15]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[23]),
        .I2(byte_cnt[0]),
        .I3(dout[31]),
        .O(\byte_cnt_reg_reg[1]_0 [7]));
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[8]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[16]),
        .I2(byte_cnt[0]),
        .I3(dout[24]),
        .O(\byte_cnt_reg_reg[1]_0 [0]));
  LUT4 #(
    .INIT(16'h4F45)) 
    \crc_p_value[9]_i_1 
       (.I0(byte_cnt[1]),
        .I1(dout[17]),
        .I2(byte_cnt[0]),
        .I3(dout[25]),
        .O(\byte_cnt_reg_reg[1]_0 [1]));
  LUT6 #(
    .INIT(64'hFFFF004000000000)) 
    crc_partial_i_1
       (.I0(\FSM_sequential_cur_state[0]_i_3_n_0 ),
        .I1(\FSM_sequential_cur_state[0]_i_2_n_0 ),
        .I2(data_wip_reg_i_4_n_0),
        .I3(fsm_wip_reg_reg_0),
        .I4(crc_partial_reg),
        .I5(\byte_cnt_reg_reg[0]_0 [0]),
        .O(crc_partial0));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \cur_byte_cnt[15]_i_7 
       (.I0(\data_type_reg_reg[5]_0 [0]),
        .I1(\data_type_reg_reg[5]_0 [1]),
        .O(data_donei120_out));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \cur_lp_vc[3]_i_1 
       (.I0(diwc_valid),
        .I1(diwc_corrected[4]),
        .I2(diwc_corrected[5]),
        .O(diwc_valid_reg_2));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \data_type_reg[4]_i_1 
       (.I0(\data_type_reg_reg[5]_0 [0]),
        .I1(code_notfound),
        .I2(ecc_done),
        .I3(ecc_corrected_vc0[4]),
        .O(data_type_int[4]));
  LUT4 #(
    .INIT(16'hFB08)) 
    \data_type_reg[5]_i_1 
       (.I0(ecc_corrected_vc0[5]),
        .I1(ecc_done),
        .I2(code_notfound),
        .I3(\data_type_reg_reg[5]_0 [1]),
        .O(data_type_int[5]));
  FDRE \data_type_reg_reg[0] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[0]),
        .Q(data_type[0]),
        .R(SR));
  FDRE \data_type_reg_reg[1] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[1]),
        .Q(data_type[1]),
        .R(SR));
  FDRE \data_type_reg_reg[2] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[2]),
        .Q(data_type[2]),
        .R(SR));
  FDRE \data_type_reg_reg[3] 
       (.C(m_axis_aclk),
        .CE(diwc_valid_int),
        .D(ecc_corrected_vc0[3]),
        .Q(data_type[3]),
        .R(SR));
  FDRE \data_type_reg_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(data_type_int[4]),
        .Q(\data_type_reg_reg[5]_0 [0]),
        .R(SR));
  FDRE \data_type_reg_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(data_type_int[5]),
        .Q(\data_type_reg_reg[5]_0 [1]),
        .R(SR));
  LUT6 #(
    .INIT(64'h444444444F444444)) 
    data_wip_reg_i_1
       (.I0(data_done_0),
        .I1(data_wip_reg),
        .I2(fsm_wip_reg_reg_0),
        .I3(data_wip_reg_i_4_n_0),
        .I4(\FSM_sequential_cur_state[0]_i_2_n_0 ),
        .I5(\FSM_sequential_cur_state[0]_i_3_n_0 ),
        .O(data_wip));
  LUT6 #(
    .INIT(64'h30C01CCF3CC43CCF)) 
    data_wip_reg_i_4
       (.I0(diwc_corrected[0]),
        .I1(diwc_corrected[5]),
        .I2(diwc_corrected[4]),
        .I3(diwc_corrected[3]),
        .I4(diwc_corrected[2]),
        .I5(diwc_corrected[1]),
        .O(data_wip_reg_i_4_n_0));
  LUT6 #(
    .INIT(64'h2AFFFFFF2A000000)) 
    diwc_corrected_lte4_i_1
       (.I0(diwc_corrected_zero_i_2_n_0),
        .I1(diwc_corrected_lte4_i_2_n_0),
        .I2(ecc_corrected_vc0[10]),
        .I3(ecc_done),
        .I4(m_axis_aresetn),
        .I5(diwc_corrected_lte4),
        .O(diwc_corrected_lte4_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    diwc_corrected_lte4_i_2
       (.I0(ecc_corrected_vc0[9]),
        .I1(ecc_corrected_vc0[8]),
        .O(diwc_corrected_lte4_i_2_n_0));
  FDRE diwc_corrected_lte4_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(diwc_corrected_lte4_i_1_n_0),
        .Q(diwc_corrected_lte4),
        .R(1'b0));
  FDRE \diwc_corrected_reg[0] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[0]),
        .Q(diwc_corrected[0]),
        .R(SR));
  FDRE \diwc_corrected_reg[10] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[10]),
        .Q(diwc_corrected[10]),
        .R(SR));
  FDRE \diwc_corrected_reg[11] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[11]),
        .Q(diwc_corrected[11]),
        .R(SR));
  FDRE \diwc_corrected_reg[12] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[12]),
        .Q(diwc_corrected[12]),
        .R(SR));
  FDRE \diwc_corrected_reg[13] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[13]),
        .Q(diwc_corrected[13]),
        .R(SR));
  FDRE \diwc_corrected_reg[14] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[14]),
        .Q(diwc_corrected[14]),
        .R(SR));
  FDRE \diwc_corrected_reg[15] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[15]),
        .Q(diwc_corrected[15]),
        .R(SR));
  FDRE \diwc_corrected_reg[16] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[16]),
        .Q(diwc_corrected[16]),
        .R(SR));
  FDRE \diwc_corrected_reg[17] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[17]),
        .Q(diwc_corrected[17]),
        .R(SR));
  FDRE \diwc_corrected_reg[18] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[18]),
        .Q(diwc_corrected[18]),
        .R(SR));
  FDRE \diwc_corrected_reg[19] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[19]),
        .Q(diwc_corrected[19]),
        .R(SR));
  FDRE \diwc_corrected_reg[1] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[1]),
        .Q(diwc_corrected[1]),
        .R(SR));
  FDRE \diwc_corrected_reg[20] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[20]),
        .Q(diwc_corrected[20]),
        .R(SR));
  FDRE \diwc_corrected_reg[21] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[21]),
        .Q(diwc_corrected[21]),
        .R(SR));
  FDRE \diwc_corrected_reg[22] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[22]),
        .Q(diwc_corrected[22]),
        .R(SR));
  FDRE \diwc_corrected_reg[23] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[23]),
        .Q(diwc_corrected[23]),
        .R(SR));
  FDRE \diwc_corrected_reg[24] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected[24]),
        .Q(diwc_corrected[24]),
        .R(SR));
  FDRE \diwc_corrected_reg[25] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected[25]),
        .Q(diwc_corrected[25]),
        .R(SR));
  FDRE \diwc_corrected_reg[2] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[2]),
        .Q(diwc_corrected[2]),
        .R(SR));
  FDRE \diwc_corrected_reg[3] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[3]),
        .Q(diwc_corrected[3]),
        .R(SR));
  FDRE \diwc_corrected_reg[4] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[4]),
        .Q(diwc_corrected[4]),
        .R(SR));
  FDRE \diwc_corrected_reg[5] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[5]),
        .Q(diwc_corrected[5]),
        .R(SR));
  FDRE \diwc_corrected_reg[6] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected[6]),
        .Q(diwc_corrected[6]),
        .R(SR));
  FDRE \diwc_corrected_reg[7] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected[7]),
        .Q(diwc_corrected[7]),
        .R(SR));
  FDRE \diwc_corrected_reg[8] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[8]),
        .Q(diwc_corrected[8]),
        .R(SR));
  FDRE \diwc_corrected_reg[9] 
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(ecc_corrected_vc0[9]),
        .Q(diwc_corrected[9]),
        .R(SR));
  LUT4 #(
    .INIT(16'h0002)) 
    diwc_corrected_zero_i_1
       (.I0(diwc_corrected_zero_i_2_n_0),
        .I1(ecc_corrected_vc0[9]),
        .I2(ecc_corrected_vc0[8]),
        .I3(ecc_corrected_vc0[10]),
        .O(diwc_corrected_csi_zero));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    diwc_corrected_zero_i_2
       (.I0(diwc_corrected_zero_i_3_n_0),
        .I1(ecc_corrected_vc0[18]),
        .I2(ecc_corrected_vc0[19]),
        .I3(ecc_corrected_vc0[16]),
        .I4(ecc_corrected_vc0[17]),
        .I5(diwc_corrected_zero_i_4_n_0),
        .O(diwc_corrected_zero_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    diwc_corrected_zero_i_3
       (.I0(ecc_corrected_vc0[23]),
        .I1(ecc_corrected_vc0[22]),
        .I2(ecc_corrected_vc0[20]),
        .I3(ecc_corrected_vc0[21]),
        .O(diwc_corrected_zero_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    diwc_corrected_zero_i_4
       (.I0(ecc_corrected_vc0[11]),
        .I1(ecc_corrected_vc0[13]),
        .I2(ecc_corrected_vc0[12]),
        .I3(ecc_corrected_vc0[15]),
        .I4(ecc_corrected_vc0[14]),
        .O(diwc_corrected_zero_i_4_n_0));
  FDRE diwc_corrected_zero_reg
       (.C(m_axis_aclk),
        .CE(ecc_done),
        .D(diwc_corrected_csi_zero),
        .Q(diwc_corrected_zero),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    diwc_valid_i_1
       (.I0(ecc_done),
        .I1(code_notfound),
        .O(diwc_valid_int));
  FDRE diwc_valid_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(diwc_valid_int),
        .Q(diwc_valid),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[0]_i_1 
       (.I0(\mask_reg_n_0_[0] ),
        .I1(\pkt_header_reg_n_0_[0] ),
        .O(\ecc_corrected[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[10]_i_1 
       (.I0(\mask_reg_n_0_[10] ),
        .I1(p_4_in),
        .O(\ecc_corrected[10]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[11]_i_1 
       (.I0(\mask_reg_n_0_[11] ),
        .I1(p_5_in),
        .O(\ecc_corrected[11]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[12]_i_1 
       (.I0(\mask_reg_n_0_[12] ),
        .I1(p_15_in),
        .O(\ecc_corrected[12]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[13]_i_1 
       (.I0(\mask_reg_n_0_[13] ),
        .I1(p_6_in),
        .O(\ecc_corrected[13]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[14]_i_1 
       (.I0(\mask_reg_n_0_[14] ),
        .I1(p_16_in),
        .O(\ecc_corrected[14]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[15]_i_1 
       (.I0(\mask_reg_n_0_[15] ),
        .I1(p_20_in),
        .O(\ecc_corrected[15]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[16]_i_1 
       (.I0(\mask_reg_n_0_[16] ),
        .I1(p_7_in),
        .O(\ecc_corrected[16]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[17]_i_1 
       (.I0(\mask_reg_n_0_[17] ),
        .I1(p_17_in),
        .O(\ecc_corrected[17]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[18]_i_1 
       (.I0(\mask_reg_n_0_[18] ),
        .I1(p_21_in),
        .O(\ecc_corrected[18]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[19]_i_1 
       (.I0(\mask_reg_n_0_[19] ),
        .I1(p_24_in),
        .O(\ecc_corrected[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[1]_i_1 
       (.I0(\mask_reg_n_0_[1] ),
        .I1(\pkt_header_reg_n_0_[1] ),
        .O(\ecc_corrected[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[20]_i_1 
       (.I0(\mask_reg_n_0_[20] ),
        .I1(p_8_in),
        .O(\ecc_corrected[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[21]_i_1 
       (.I0(\mask_reg_n_0_[21] ),
        .I1(p_9_in),
        .O(\ecc_corrected[21]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[22]_i_1 
       (.I0(\mask_reg_n_0_[22] ),
        .I1(p_10_in),
        .O(\ecc_corrected[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[23]_i_1 
       (.I0(\mask_reg_n_0_[23] ),
        .I1(p_11_in),
        .O(\ecc_corrected[23]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[2]_i_1 
       (.I0(\mask_reg_n_0_[2] ),
        .I1(p_0_in0_in),
        .O(\ecc_corrected[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[3]_i_1 
       (.I0(\mask_reg_n_0_[3] ),
        .I1(p_12_in),
        .O(\ecc_corrected[3]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[4]_i_1 
       (.I0(\mask_reg_n_0_[4] ),
        .I1(p_1_in),
        .O(\ecc_corrected[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[5]_i_1 
       (.I0(\mask_reg_n_0_[5] ),
        .I1(p_2_in),
        .O(\ecc_corrected[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[6]_i_1 
       (.I0(\mask_reg_n_0_[6] ),
        .I1(p_13_in),
        .O(\ecc_corrected[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[7]_i_1 
       (.I0(\mask_reg_n_0_[7] ),
        .I1(p_3_in),
        .O(\ecc_corrected[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[8]_i_1 
       (.I0(\mask_reg_n_0_[8] ),
        .I1(p_14_in),
        .O(\ecc_corrected[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ecc_corrected[9]_i_1 
       (.I0(\mask_reg_n_0_[9] ),
        .I1(p_19_in),
        .O(\ecc_corrected[9]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst
       (.I0(ecc_corrected[23]),
        .O(ecc_corrected_vc0[23]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__0
       (.I0(ecc_corrected[22]),
        .O(ecc_corrected_vc0[22]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__1
       (.I0(ecc_corrected[21]),
        .O(ecc_corrected_vc0[21]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__10
       (.I0(ecc_corrected[12]),
        .O(ecc_corrected_vc0[12]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__11
       (.I0(ecc_corrected[11]),
        .O(ecc_corrected_vc0[11]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__12
       (.I0(ecc_corrected[10]),
        .O(ecc_corrected_vc0[10]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__13
       (.I0(ecc_corrected[9]),
        .O(ecc_corrected_vc0[9]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__14
       (.I0(ecc_corrected[8]),
        .O(ecc_corrected_vc0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__15
       (.I0(ecc_corrected[5]),
        .O(ecc_corrected_vc0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__16
       (.I0(ecc_corrected[4]),
        .O(ecc_corrected_vc0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__17
       (.I0(ecc_corrected[3]),
        .O(ecc_corrected_vc0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__18
       (.I0(ecc_corrected[2]),
        .O(ecc_corrected_vc0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__19
       (.I0(ecc_corrected[1]),
        .O(ecc_corrected_vc0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__2
       (.I0(ecc_corrected[20]),
        .O(ecc_corrected_vc0[20]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__20
       (.I0(ecc_corrected[0]),
        .O(ecc_corrected_vc0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__3
       (.I0(ecc_corrected[19]),
        .O(ecc_corrected_vc0[19]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__4
       (.I0(ecc_corrected[18]),
        .O(ecc_corrected_vc0[18]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__5
       (.I0(ecc_corrected[17]),
        .O(ecc_corrected_vc0[17]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__6
       (.I0(ecc_corrected[16]),
        .O(ecc_corrected_vc0[16]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__7
       (.I0(ecc_corrected[15]),
        .O(ecc_corrected_vc0[15]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__8
       (.I0(ecc_corrected[14]),
        .O(ecc_corrected_vc0[14]));
  LUT1 #(
    .INIT(2'h2)) 
    ecc_corrected_inst__9
       (.I0(ecc_corrected[13]),
        .O(ecc_corrected_vc0[13]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[0]_i_1_n_0 ),
        .Q(ecc_corrected[0]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[10] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[10]_i_1_n_0 ),
        .Q(ecc_corrected[10]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[11] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[11]_i_1_n_0 ),
        .Q(ecc_corrected[11]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[12] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[12]_i_1_n_0 ),
        .Q(ecc_corrected[12]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[13] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[13]_i_1_n_0 ),
        .Q(ecc_corrected[13]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[14] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[14]_i_1_n_0 ),
        .Q(ecc_corrected[14]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[15] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[15]_i_1_n_0 ),
        .Q(ecc_corrected[15]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[16] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[16]_i_1_n_0 ),
        .Q(ecc_corrected[16]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[17] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[17]_i_1_n_0 ),
        .Q(ecc_corrected[17]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[18] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[18]_i_1_n_0 ),
        .Q(ecc_corrected[18]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[19] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[19]_i_1_n_0 ),
        .Q(ecc_corrected[19]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[1]_i_1_n_0 ),
        .Q(ecc_corrected[1]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[20] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[20]_i_1_n_0 ),
        .Q(ecc_corrected[20]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[21] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[21]_i_1_n_0 ),
        .Q(ecc_corrected[21]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[22] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[22]_i_1_n_0 ),
        .Q(ecc_corrected[22]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[23] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[23]_i_1_n_0 ),
        .Q(ecc_corrected[23]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[24] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mask_reg_n_0_[24] ),
        .Q(ecc_corrected[24]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[25] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\mask_reg_n_0_[25] ),
        .Q(ecc_corrected[25]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[2]_i_1_n_0 ),
        .Q(ecc_corrected[2]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[3]_i_1_n_0 ),
        .Q(ecc_corrected[3]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[4] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[4]_i_1_n_0 ),
        .Q(ecc_corrected[4]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[5] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[5]_i_1_n_0 ),
        .Q(ecc_corrected[5]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[6] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[6]_i_1_n_0 ),
        .Q(ecc_corrected[6]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[7] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[7]_i_1_n_0 ),
        .Q(ecc_corrected[7]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[8] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[8]_i_1_n_0 ),
        .Q(ecc_corrected[8]),
        .R(SR));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \ecc_corrected_reg[9] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\ecc_corrected[9]_i_1_n_0 ),
        .Q(ecc_corrected[9]),
        .R(SR));
  FDRE ecc_done_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(ecc_start_d2),
        .Q(ecc_done),
        .R(SR));
  FDRE ecc_start_d2_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(E),
        .Q(ecc_start_d2),
        .R(SR));
  FDRE \exp_ecc_i_reg[0] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[24]),
        .Q(exp_ecc_i[0]),
        .R(SR));
  FDRE \exp_ecc_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[25]),
        .Q(exp_ecc_i[1]),
        .R(SR));
  FDRE \exp_ecc_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[26]),
        .Q(exp_ecc_i[2]),
        .R(SR));
  FDRE \exp_ecc_i_reg[3] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[27]),
        .Q(exp_ecc_i[3]),
        .R(SR));
  FDRE \exp_ecc_i_reg[4] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[28]),
        .Q(exp_ecc_i[4]),
        .R(SR));
  FDRE \exp_ecc_i_reg[5] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[29]),
        .Q(exp_ecc_i[5]),
        .R(SR));
  FDRE \exp_ecc_reg[0] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[0]),
        .Q(exp_ecc[0]),
        .R(SR));
  FDRE \exp_ecc_reg[1] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[1]),
        .Q(exp_ecc[1]),
        .R(SR));
  FDRE \exp_ecc_reg[2] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[2]),
        .Q(exp_ecc[2]),
        .R(SR));
  FDRE \exp_ecc_reg[3] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[3]),
        .Q(exp_ecc[3]),
        .R(SR));
  FDRE \exp_ecc_reg[4] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[4]),
        .Q(exp_ecc[4]),
        .R(SR));
  FDRE \exp_ecc_reg[5] 
       (.C(m_axis_aclk),
        .CE(phecc_done),
        .D(exp_ecc_i[5]),
        .Q(exp_ecc[5]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0040FFFF00400040)) 
    fsm_wip_reg_i_1
       (.I0(fsm_wip_reg_reg_0),
        .I1(data_wip_reg_i_4_n_0),
        .I2(\FSM_sequential_cur_state[0]_i_2_n_0 ),
        .I3(\FSM_sequential_cur_state[0]_i_3_n_0 ),
        .I4(data_done),
        .I5(fsm_wip_reg),
        .O(fsm_wip_reg_reg));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    generic_pkt_i_2
       (.I0(diwc_valid),
        .I1(diwc_corrected[3]),
        .I2(diwc_corrected[5]),
        .I3(diwc_corrected[4]),
        .O(wr_en));
  LUT6 #(
    .INIT(64'h00002000FF002000)) 
    img_send_i_1
       (.I0(img_send_i_2_n_0),
        .I1(\AXI_LITE.reg_inf/diwc_valid_filt1 ),
        .I2(diwc_valid),
        .I3(m_axis_aresetn),
        .I4(src_send),
        .I5(src_rcv),
        .O(diwc_valid_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    img_send_i_2
       (.I0(diwc_corrected[5]),
        .I1(diwc_corrected[3]),
        .I2(diwc_corrected[4]),
        .O(img_send_i_2_n_0));
  LUT6 #(
    .INIT(64'hAAAACC4020000000)) 
    img_send_i_3
       (.I0(diwc_corrected[3]),
        .I1(diwc_corrected[2]),
        .I2(diwc_corrected[0]),
        .I3(diwc_corrected[1]),
        .I4(diwc_corrected[4]),
        .I5(diwc_corrected[5]),
        .O(\AXI_LITE.reg_inf/diwc_valid_filt1 ));
  LUT5 #(
    .INIT(32'h04040400)) 
    long_pkt_out_i_1
       (.I0(code_notfound),
        .I1(ecc_done),
        .I2(diwc_corrected_csi_zero),
        .I3(ecc_corrected_vc0[5]),
        .I4(ecc_corrected_vc0[4]),
        .O(long_pkt_int));
  FDRE long_pkt_out_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(long_pkt_int),
        .Q(long_pkt_out),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    lp_wc0_i_reg_i_1
       (.I0(lp_wc0_i_reg_i_2_n_0),
        .I1(diwc_valid),
        .I2(lp_wc0),
        .O(diwc_valid_reg_3));
  LUT6 #(
    .INIT(64'h000000000000000E)) 
    lp_wc0_i_reg_i_2
       (.I0(diwc_corrected[4]),
        .I1(diwc_corrected[5]),
        .I2(lp_wc0_i_reg_i_3_n_0),
        .I3(lp_wc0_i_reg_i_4_n_0),
        .I4(lp_wc0_i_reg_i_5_n_0),
        .I5(lp_wc0_i_reg_i_6_n_0),
        .O(lp_wc0_i_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    lp_wc0_i_reg_i_3
       (.I0(diwc_corrected[17]),
        .I1(diwc_corrected[16]),
        .I2(diwc_corrected[19]),
        .I3(diwc_corrected[18]),
        .O(lp_wc0_i_reg_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    lp_wc0_i_reg_i_4
       (.I0(diwc_corrected[21]),
        .I1(diwc_corrected[20]),
        .I2(diwc_corrected[22]),
        .I3(diwc_corrected[23]),
        .O(lp_wc0_i_reg_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    lp_wc0_i_reg_i_5
       (.I0(diwc_corrected[9]),
        .I1(diwc_corrected[8]),
        .I2(diwc_corrected[11]),
        .I3(diwc_corrected[10]),
        .O(lp_wc0_i_reg_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    lp_wc0_i_reg_i_6
       (.I0(diwc_corrected[13]),
        .I1(diwc_corrected[12]),
        .I2(diwc_corrected[15]),
        .I3(diwc_corrected[14]),
        .O(lp_wc0_i_reg_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mask[0]_i_1 
       (.I0(syndrome_code[3]),
        .I1(syndrome_code[2]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[1]),
        .I4(syndrome_code[4]),
        .I5(syndrome_code[5]),
        .O(mask[0]));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \mask[10]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[5]),
        .I3(syndrome_code[4]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[1]),
        .O(mask[10]));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mask[11]_i_1 
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[5]),
        .I5(syndrome_code[4]),
        .O(mask[11]));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mask[12]_i_1 
       (.I0(syndrome_code[0]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[5]),
        .I5(syndrome_code[4]),
        .O(mask[12]));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \mask[13]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[4]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[1]),
        .I5(syndrome_code[3]),
        .O(mask[13]));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \mask[14]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[5]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[1]),
        .O(mask[14]));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \mask[15]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[5]),
        .I3(syndrome_code[4]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[1]),
        .O(mask[15]));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \mask[16]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[4]),
        .I3(syndrome_code[1]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[5]),
        .O(mask[16]));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \mask[17]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[1]),
        .I3(syndrome_code[0]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[2]),
        .O(mask[17]));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \mask[18]_i_1 
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[4]),
        .I5(syndrome_code[5]),
        .O(mask[18]));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mask[19]_i_1 
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[4]),
        .I3(syndrome_code[0]),
        .I4(syndrome_code[5]),
        .I5(syndrome_code[2]),
        .O(mask[19]));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \mask[1]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[1]),
        .O(mask[1]));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \mask[20]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[1]),
        .O(mask[20]));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \mask[21]_i_1 
       (.I0(syndrome_code[4]),
        .I1(syndrome_code[5]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[1]),
        .O(mask[21]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \mask[22]_i_1 
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[4]),
        .I5(syndrome_code[5]),
        .O(mask[22]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \mask[23]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[1]),
        .O(mask[23]));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \mask[24]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[4]),
        .I3(syndrome_code[1]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[5]),
        .O(mask[24]));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \mask[25]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[4]),
        .O(mask[25]));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \mask[2]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[0]),
        .I2(syndrome_code[1]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[4]),
        .I5(syndrome_code[5]),
        .O(mask[2]));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \mask[3]_i_1 
       (.I0(syndrome_code[0]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[4]),
        .I5(syndrome_code[5]),
        .O(mask[3]));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \mask[4]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[2]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[1]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[4]),
        .O(mask[4]));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \mask[5]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[0]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[3]),
        .I5(syndrome_code[4]),
        .O(mask[5]));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \mask[6]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[4]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[1]),
        .I5(syndrome_code[0]),
        .O(mask[6]));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    \mask[7]_i_1 
       (.I0(syndrome_code[1]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[4]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[5]),
        .I5(syndrome_code[0]),
        .O(mask[7]));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \mask[8]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[2]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[1]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[4]),
        .O(mask[8]));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    \mask[9]_i_1 
       (.I0(syndrome_code[5]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[3]),
        .I3(syndrome_code[2]),
        .I4(syndrome_code[0]),
        .I5(syndrome_code[4]),
        .O(mask[9]));
  FDRE \mask_reg[0] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[0]),
        .Q(\mask_reg_n_0_[0] ),
        .R(SR));
  FDRE \mask_reg[10] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[10]),
        .Q(\mask_reg_n_0_[10] ),
        .R(SR));
  FDRE \mask_reg[11] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[11]),
        .Q(\mask_reg_n_0_[11] ),
        .R(SR));
  FDRE \mask_reg[12] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[12]),
        .Q(\mask_reg_n_0_[12] ),
        .R(SR));
  FDRE \mask_reg[13] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[13]),
        .Q(\mask_reg_n_0_[13] ),
        .R(SR));
  FDRE \mask_reg[14] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[14]),
        .Q(\mask_reg_n_0_[14] ),
        .R(SR));
  FDRE \mask_reg[15] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[15]),
        .Q(\mask_reg_n_0_[15] ),
        .R(SR));
  FDRE \mask_reg[16] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[16]),
        .Q(\mask_reg_n_0_[16] ),
        .R(SR));
  FDRE \mask_reg[17] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[17]),
        .Q(\mask_reg_n_0_[17] ),
        .R(SR));
  FDRE \mask_reg[18] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[18]),
        .Q(\mask_reg_n_0_[18] ),
        .R(SR));
  FDRE \mask_reg[19] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[19]),
        .Q(\mask_reg_n_0_[19] ),
        .R(SR));
  FDRE \mask_reg[1] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[1]),
        .Q(\mask_reg_n_0_[1] ),
        .R(SR));
  FDRE \mask_reg[20] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[20]),
        .Q(\mask_reg_n_0_[20] ),
        .R(SR));
  FDRE \mask_reg[21] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[21]),
        .Q(\mask_reg_n_0_[21] ),
        .R(SR));
  FDRE \mask_reg[22] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[22]),
        .Q(\mask_reg_n_0_[22] ),
        .R(SR));
  FDRE \mask_reg[23] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[23]),
        .Q(\mask_reg_n_0_[23] ),
        .R(SR));
  FDRE \mask_reg[24] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[24]),
        .Q(\mask_reg_n_0_[24] ),
        .R(SR));
  FDRE \mask_reg[25] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[25]),
        .Q(\mask_reg_n_0_[25] ),
        .R(SR));
  FDRE \mask_reg[2] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[2]),
        .Q(\mask_reg_n_0_[2] ),
        .R(SR));
  FDRE \mask_reg[3] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[3]),
        .Q(\mask_reg_n_0_[3] ),
        .R(SR));
  FDRE \mask_reg[4] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[4]),
        .Q(\mask_reg_n_0_[4] ),
        .R(SR));
  FDRE \mask_reg[5] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[5]),
        .Q(\mask_reg_n_0_[5] ),
        .R(SR));
  FDRE \mask_reg[6] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[6]),
        .Q(\mask_reg_n_0_[6] ),
        .R(SR));
  FDRE \mask_reg[7] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[7]),
        .Q(\mask_reg_n_0_[7] ),
        .R(SR));
  FDRE \mask_reg[8] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[8]),
        .Q(\mask_reg_n_0_[8] ),
        .R(SR));
  FDRE \mask_reg[9] 
       (.C(m_axis_aclk),
        .CE(E),
        .D(mask[9]),
        .Q(\mask_reg_n_0_[9] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \mem_wdata[67]_i_2 
       (.I0(data_type[0]),
        .I1(data_type[2]),
        .I2(data_type[3]),
        .I3(\data_type_reg_reg[5]_0 [0]),
        .I4(data_type[1]),
        .I5(\data_type_reg_reg[5]_0 [1]),
        .O(\data_type_reg_reg[0]_0 ));
  FDRE phecc_done_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(ecc_done),
        .Q(phecc_done),
        .R(SR));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \phecc_status[1]_i_1 
       (.I0(syndrome_code[2]),
        .I1(syndrome_code[3]),
        .I2(\phecc_status[1]_i_2_n_0 ),
        .I3(syndrome_code[0]),
        .I4(syndrome_code[1]),
        .I5(code_notfound),
        .O(ecc_status));
  LUT2 #(
    .INIT(4'hE)) 
    \phecc_status[1]_i_2 
       (.I0(syndrome_code[4]),
        .I1(syndrome_code[5]),
        .O(\phecc_status[1]_i_2_n_0 ));
  FDRE \phecc_status_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(ecc_status),
        .Q(phecc_status[0]),
        .R(SR));
  FDRE \phecc_status_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(code_notfound),
        .Q(phecc_status[1]),
        .R(SR));
  LUT1 #(
    .INIT(2'h2)) 
    phecci_0
       (.I0(1'b0),
        .O(calcd_ecc[7]));
  LUT1 #(
    .INIT(2'h2)) 
    phecci_1
       (.I0(1'b0),
        .O(calcd_ecc[6]));
  LUT1 #(
    .INIT(2'h2)) 
    phecci_2
       (.I0(1'b0),
        .O(syndrome_sum[3]));
  FDRE \pkt_header_reg[0] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[0]),
        .Q(\pkt_header_reg_n_0_[0] ),
        .R(SR));
  FDRE \pkt_header_reg[10] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[10]),
        .Q(p_4_in),
        .R(SR));
  FDRE \pkt_header_reg[11] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[11]),
        .Q(p_5_in),
        .R(SR));
  FDRE \pkt_header_reg[12] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[12]),
        .Q(p_15_in),
        .R(SR));
  FDRE \pkt_header_reg[13] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[13]),
        .Q(p_6_in),
        .R(SR));
  FDRE \pkt_header_reg[14] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[14]),
        .Q(p_16_in),
        .R(SR));
  FDRE \pkt_header_reg[15] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[15]),
        .Q(p_20_in),
        .R(SR));
  FDRE \pkt_header_reg[16] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[16]),
        .Q(p_7_in),
        .R(SR));
  FDRE \pkt_header_reg[17] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[17]),
        .Q(p_17_in),
        .R(SR));
  FDRE \pkt_header_reg[18] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[18]),
        .Q(p_21_in),
        .R(SR));
  FDRE \pkt_header_reg[19] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[19]),
        .Q(p_24_in),
        .R(SR));
  FDRE \pkt_header_reg[1] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[1]),
        .Q(\pkt_header_reg_n_0_[1] ),
        .R(SR));
  FDRE \pkt_header_reg[20] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[20]),
        .Q(p_8_in),
        .R(SR));
  FDRE \pkt_header_reg[21] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[21]),
        .Q(p_9_in),
        .R(SR));
  FDRE \pkt_header_reg[22] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[22]),
        .Q(p_10_in),
        .R(SR));
  FDRE \pkt_header_reg[23] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[23]),
        .Q(p_11_in),
        .R(SR));
  FDRE \pkt_header_reg[2] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[2]),
        .Q(p_0_in0_in),
        .R(SR));
  FDRE \pkt_header_reg[3] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[3]),
        .Q(p_12_in),
        .R(SR));
  FDRE \pkt_header_reg[4] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[4]),
        .Q(p_1_in),
        .R(SR));
  FDRE \pkt_header_reg[5] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[5]),
        .Q(p_2_in),
        .R(SR));
  FDRE \pkt_header_reg[6] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[6]),
        .Q(p_13_in),
        .R(SR));
  FDRE \pkt_header_reg[7] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[7]),
        .Q(p_3_in),
        .R(SR));
  FDRE \pkt_header_reg[8] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[8]),
        .Q(p_14_in),
        .R(SR));
  FDRE \pkt_header_reg[9] 
       (.C(m_axis_aclk),
        .CE(pkt_valid),
        .D(dout[9]),
        .Q(p_19_in),
        .R(SR));
  LUT4 #(
    .INIT(16'h9009)) 
    pre_byt_cnt1_i_14
       (.I0(byt_cnt_adj[11]),
        .I1(pre_byt_cnt1_reg_i_3_0[3]),
        .I2(pre_byt_cnt1_reg_i_3_0[2]),
        .I3(byt_cnt_adj[10]),
        .O(\byt_cnt_adj_reg[11]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    pre_byt_cnt1_i_16
       (.I0(byt_cnt_adj[7]),
        .I1(pre_byt_cnt1_reg_i_3_0[1]),
        .I2(pre_byt_cnt1_reg_i_3_0[0]),
        .I3(byt_cnt_adj[6]),
        .O(\byt_cnt_adj_reg[11]_0 [2]));
  LUT4 #(
    .INIT(16'h2442)) 
    pre_byt_cnt1_i_18
       (.I0(byt_cnt_adj[2]),
        .I1(pre_byt_cnt1_reg_i_3[2]),
        .I2(pre_byt_cnt1_reg_i_3[3]),
        .I3(byt_cnt_adj[3]),
        .O(\byt_cnt_adj_reg[11]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    pre_byt_cnt1_i_19
       (.I0(byt_cnt_adj[1]),
        .I1(pre_byt_cnt1_reg_i_3[1]),
        .I2(byt_cnt_adj[0]),
        .I3(pre_byt_cnt1_reg_i_3[0]),
        .O(\byt_cnt_adj_reg[11]_0 [0]));
  LUT4 #(
    .INIT(16'h50D4)) 
    pre_byt_cnt2_i_10
       (.I0(byte_cnt[1]),
        .I1(pre_byt_cnt1_reg_i_3[0]),
        .I2(pre_byt_cnt1_reg_i_3[1]),
        .I3(byte_cnt[0]),
        .O(DI));
  LUT4 #(
    .INIT(16'h9009)) 
    pre_byt_cnt2_i_13
       (.I0(byte_cnt[11]),
        .I1(pre_byt_cnt1_reg_i_3_0[3]),
        .I2(pre_byt_cnt1_reg_i_3_0[2]),
        .I3(byte_cnt[10]),
        .O(\byte_cnt_reg_reg[11]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    pre_byt_cnt2_i_15
       (.I0(byte_cnt[7]),
        .I1(pre_byt_cnt1_reg_i_3_0[1]),
        .I2(pre_byt_cnt1_reg_i_3_0[0]),
        .I3(byte_cnt[6]),
        .O(\byte_cnt_reg_reg[11]_0 [1]));
  LUT4 #(
    .INIT(16'h2442)) 
    pre_byt_cnt2_i_17
       (.I0(byte_cnt[2]),
        .I1(pre_byt_cnt1_reg_i_3[2]),
        .I2(pre_byt_cnt1_reg_i_3[3]),
        .I3(byte_cnt[3]),
        .O(\byte_cnt_reg_reg[11]_0 [0]));
  LUT2 #(
    .INIT(4'h8)) 
    \reg_ecc_status_i[1]_i_1 
       (.I0(phecc_done),
        .I1(phecc_status[0]),
        .O(phecc_done_reg_0[0]));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \reg_ecc_status_i[2]_i_1 
       (.I0(phecc_done),
        .I1(phecc_status[1]),
        .O(phecc_done_reg_0[1]));
  LUT5 #(
    .INIT(32'h00000020)) 
    short_pkt_i_1
       (.I0(\byte_cnt_reg[15]_i_2_n_0 ),
        .I1(ecc_corrected_vc0[3]),
        .I2(ecc_done),
        .I3(code_notfound),
        .I4(ecc_corrected_vc0[2]),
        .O(short_pkt_int));
  FDRE short_pkt_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(short_pkt_int),
        .Q(short_pkt),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_1
       (.I0(calcd_ecc[5]),
        .I1(exp_ecc_i[5]),
        .O(syndrome_code[5]));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_2
       (.I0(calcd_ecc[4]),
        .I1(exp_ecc_i[4]),
        .O(syndrome_code[4]));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_3
       (.I0(calcd_ecc[3]),
        .I1(exp_ecc_i[3]),
        .O(syndrome_code[3]));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_4
       (.I0(calcd_ecc[2]),
        .I1(exp_ecc_i[2]),
        .O(syndrome_code[2]));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_5
       (.I0(calcd_ecc[1]),
        .I1(exp_ecc_i[1]),
        .O(syndrome_code[1]));
  LUT2 #(
    .INIT(4'h6)) 
    syndrome_code_inferred_i_6
       (.I0(calcd_ecc[0]),
        .I1(exp_ecc_i[0]),
        .O(syndrome_code[0]));
  LUT6 #(
    .INIT(64'hFEE8E880E8808000)) 
    syndrome_sum_inferred_i_1
       (.I0(syndrome_code[0]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[5]),
        .I3(syndrome_code[4]),
        .I4(syndrome_code[2]),
        .I5(syndrome_code[3]),
        .O(syndrome_sum[2]));
  LUT6 #(
    .INIT(64'h8117177E177E7EE8)) 
    syndrome_sum_inferred_i_2
       (.I0(syndrome_code[0]),
        .I1(syndrome_code[1]),
        .I2(syndrome_code[5]),
        .I3(syndrome_code[3]),
        .I4(syndrome_code[2]),
        .I5(syndrome_code[4]),
        .O(syndrome_sum[1]));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    syndrome_sum_inferred_i_3
       (.I0(syndrome_code[4]),
        .I1(syndrome_code[3]),
        .I2(syndrome_code[2]),
        .I3(syndrome_code[0]),
        .I4(syndrome_code[1]),
        .I5(syndrome_code[5]),
        .O(syndrome_sum[0]));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_pkt_fifo" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_pkt_fifo
   (dout,
    empty,
    src_in,
    D,
    \gen_rd_b.doutb_reg_reg[27] ,
    \gen_rd_b.doutb_reg_reg[17] ,
    \crc_reg_out_reg[12] ,
    \crc_reg_out_reg[15] ,
    dest_out,
    dl0_rxbyteclkhs,
    wr_en,
    din,
    m_axis_aclk,
    rd_en,
    pkt_valid,
    \LINE_BUF_WR_64.mem_data_l32_reg[28] ,
    \LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ,
    Q,
    lp_wc0,
    \exp_crc_r_reg[15] ,
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_2 );
  output [37:0]dout;
  output empty;
  output [5:0]src_in;
  output [3:0]D;
  output [7:0]\gen_rd_b.doutb_reg_reg[27] ;
  output [15:0]\gen_rd_b.doutb_reg_reg[17] ;
  output \crc_reg_out_reg[12] ;
  output \crc_reg_out_reg[15] ;
  input dest_out;
  input dl0_rxbyteclkhs;
  input wr_en;
  input [41:0]din;
  input m_axis_aclk;
  input rd_en;
  input pkt_valid;
  input \LINE_BUF_WR_64.mem_data_l32_reg[28] ;
  input \LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ;
  input [1:0]Q;
  input lp_wc0;
  input [15:0]\exp_crc_r_reg[15] ;
  input [5:0]\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 ;

  wire [3:0]D;
  wire [5:0]\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 ;
  wire \LINE_BUF_WR_64.mem_data_l32_reg[28] ;
  wire \LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ;
  wire [1:0]Q;
  wire \crc_reg_out_reg[12] ;
  wire \crc_reg_out_reg[15] ;
  wire dest_out;
  wire [41:0]din;
  wire dl0_rxbyteclkhs;
  wire [37:0]dout;
  wire empty;
  wire [15:0]\exp_crc_r_reg[15] ;
  wire [15:0]\gen_rd_b.doutb_reg_reg[17] ;
  wire [7:0]\gen_rd_b.doutb_reg_reg[27] ;
  wire lp_wc0;
  wire m_axis_aclk;
  wire pkt_fifo_full;
  wire [39:28]pkt_fifo_rdata;
  wire pkt_valid;
  wire rd_en;
  wire [5:0]src_in;
  wire wr_en;
  wire NLW_pkt_fifo_almost_empty_UNCONNECTED;
  wire NLW_pkt_fifo_almost_full_UNCONNECTED;
  wire NLW_pkt_fifo_data_valid_UNCONNECTED;
  wire NLW_pkt_fifo_dbiterr_UNCONNECTED;
  wire NLW_pkt_fifo_overflow_UNCONNECTED;
  wire NLW_pkt_fifo_prog_empty_UNCONNECTED;
  wire NLW_pkt_fifo_prog_full_UNCONNECTED;
  wire NLW_pkt_fifo_rd_rst_busy_UNCONNECTED;
  wire NLW_pkt_fifo_sbiterr_UNCONNECTED;
  wire NLW_pkt_fifo_underflow_UNCONNECTED;
  wire NLW_pkt_fifo_wr_ack_UNCONNECTED;
  wire NLW_pkt_fifo_wr_rst_busy_UNCONNECTED;
  wire [0:0]NLW_pkt_fifo_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_pkt_fifo_wr_data_count_UNCONNECTED;

  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_5 
       (.I0(\gen_rd_b.doutb_reg_reg[17] [12]),
        .I1(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [2]),
        .I2(\gen_rd_b.doutb_reg_reg[17] [13]),
        .I3(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [3]),
        .I4(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [4]),
        .I5(\gen_rd_b.doutb_reg_reg[17] [14]),
        .O(\crc_reg_out_reg[12] ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    \HSC2R_CDC[33].hsc2r_bus_cdc_i_6 
       (.I0(\gen_rd_b.doutb_reg_reg[17] [15]),
        .I1(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [5]),
        .I2(\gen_rd_b.doutb_reg_reg[17] [6]),
        .I3(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [0]),
        .I4(\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 [1]),
        .I5(\gen_rd_b.doutb_reg_reg[17] [11]),
        .O(\crc_reg_out_reg[15] ));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT4 #(
    .INIT(16'hE000)) 
    \HSC2R_CDC[34].hsc2r_bus_cdc_i_1 
       (.I0(dout[8]),
        .I1(dout[18]),
        .I2(dout[36]),
        .I3(pkt_valid),
        .O(src_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT4 #(
    .INIT(16'hC080)) 
    \HSC2R_CDC[35].hsc2r_bus_cdc_i_1 
       (.I0(dout[19]),
        .I1(pkt_valid),
        .I2(dout[36]),
        .I3(dout[9]),
        .O(src_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \HSC2R_CDC[36].hsc2r_bus_cdc_i_1 
       (.I0(dout[8]),
        .I1(dout[36]),
        .I2(pkt_valid),
        .O(src_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \HSC2R_CDC[37].hsc2r_bus_cdc_i_1 
       (.I0(dout[9]),
        .I1(dout[36]),
        .I2(pkt_valid),
        .O(src_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \HSC2R_CDC[38].hsc2r_bus_cdc_i_1 
       (.I0(dout[18]),
        .I1(dout[36]),
        .I2(pkt_valid),
        .O(src_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \HSC2R_CDC[39].hsc2r_bus_cdc_i_1 
       (.I0(dout[19]),
        .I1(dout[36]),
        .I2(pkt_valid),
        .O(src_in[5]));
  LUT4 #(
    .INIT(16'hF888)) 
    \LINE_BUF_WR_64.mem_data_l32[28]_i_1 
       (.I0(dout[4]),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[28] ),
        .I2(dout[32]),
        .I3(\LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'hF888)) 
    \LINE_BUF_WR_64.mem_data_l32[29]_i_1 
       (.I0(dout[5]),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[28] ),
        .I2(dout[33]),
        .I3(\LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'hF888)) 
    \LINE_BUF_WR_64.mem_data_l32[30]_i_1 
       (.I0(dout[6]),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[28] ),
        .I2(dout[34]),
        .I3(\LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hF888)) 
    \LINE_BUF_WR_64.mem_data_l32[31]_i_2 
       (.I0(dout[7]),
        .I1(\LINE_BUF_WR_64.mem_data_l32_reg[28] ),
        .I2(dout[35]),
        .I3(\LINE_BUF_WR_64.mem_data_l32_reg[28]_0 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[0]_i_1 
       (.I0(dout[20]),
        .I1(dout[28]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[10]),
        .O(\gen_rd_b.doutb_reg_reg[27] [0]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[1]_i_1 
       (.I0(dout[21]),
        .I1(dout[29]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[11]),
        .O(\gen_rd_b.doutb_reg_reg[27] [1]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[2]_i_1 
       (.I0(dout[22]),
        .I1(dout[30]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[12]),
        .O(\gen_rd_b.doutb_reg_reg[27] [2]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[3]_i_1 
       (.I0(dout[23]),
        .I1(dout[31]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[13]),
        .O(\gen_rd_b.doutb_reg_reg[27] [3]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[4]_i_1 
       (.I0(dout[24]),
        .I1(dout[32]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[14]),
        .O(\gen_rd_b.doutb_reg_reg[27] [4]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[5]_i_1 
       (.I0(dout[25]),
        .I1(dout[33]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[15]),
        .O(\gen_rd_b.doutb_reg_reg[27] [5]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[6]_i_1 
       (.I0(dout[26]),
        .I1(dout[34]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[16]),
        .O(\gen_rd_b.doutb_reg_reg[27] [6]));
  LUT5 #(
    .INIT(32'hCAFFCA0F)) 
    \crc_p_value[7]_i_1 
       (.I0(dout[27]),
        .I1(dout[35]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(dout[17]),
        .O(\gen_rd_b.doutb_reg_reg[27] [7]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[0]_i_1 
       (.I0(dout[0]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [0]),
        .O(\gen_rd_b.doutb_reg_reg[17] [0]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[10]_i_1 
       (.I0(dout[12]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [10]),
        .O(\gen_rd_b.doutb_reg_reg[17] [10]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[11]_i_1 
       (.I0(dout[13]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [11]),
        .O(\gen_rd_b.doutb_reg_reg[17] [11]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[12]_i_1 
       (.I0(dout[14]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [12]),
        .O(\gen_rd_b.doutb_reg_reg[17] [12]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[13]_i_1 
       (.I0(dout[15]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [13]),
        .O(\gen_rd_b.doutb_reg_reg[17] [13]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[14]_i_1 
       (.I0(dout[16]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [14]),
        .O(\gen_rd_b.doutb_reg_reg[17] [14]));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[15]_i_1 
       (.I0(dout[17]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [15]),
        .O(\gen_rd_b.doutb_reg_reg[17] [15]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[1]_i_1 
       (.I0(dout[1]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [1]),
        .O(\gen_rd_b.doutb_reg_reg[17] [1]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[2]_i_1 
       (.I0(dout[2]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [2]),
        .O(\gen_rd_b.doutb_reg_reg[17] [2]));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[3]_i_1 
       (.I0(dout[3]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [3]),
        .O(\gen_rd_b.doutb_reg_reg[17] [3]));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[4]_i_1 
       (.I0(dout[4]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [4]),
        .O(\gen_rd_b.doutb_reg_reg[17] [4]));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[5]_i_1 
       (.I0(dout[5]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [5]),
        .O(\gen_rd_b.doutb_reg_reg[17] [5]));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[6]_i_1 
       (.I0(dout[6]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [6]),
        .O(\gen_rd_b.doutb_reg_reg[17] [6]));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[7]_i_1 
       (.I0(dout[7]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [7]),
        .O(\gen_rd_b.doutb_reg_reg[17] [7]));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[8]_i_1 
       (.I0(dout[10]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [8]),
        .O(\gen_rd_b.doutb_reg_reg[17] [8]));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \exp_crc_r[9]_i_1 
       (.I0(dout[11]),
        .I1(lp_wc0),
        .I2(\exp_crc_r_reg[15] [9]),
        .O(\gen_rd_b.doutb_reg_reg[17] [9]));
  (* CASCADE_HEIGHT = "0" *) 
  (* CDC_SYNC_STAGES = "2" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_ASYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_WRITE_DEPTH = "32" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* PROG_EMPTY_THRESH = "10" *) 
  (* PROG_FULL_THRESH = "10" *) 
  (* P_COMMON_CLOCK = "0" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "0" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "1" *) 
  (* READ_DATA_WIDTH = "42" *) 
  (* READ_MODE = "std" *) 
  (* RELATED_CLOCKS = "0" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "42" *) 
  (* WR_DATA_COUNT_WIDTH = "1" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_fifo_async__parameterized0 pkt_fifo
       (.almost_empty(NLW_pkt_fifo_almost_empty_UNCONNECTED),
        .almost_full(NLW_pkt_fifo_almost_full_UNCONNECTED),
        .data_valid(NLW_pkt_fifo_data_valid_UNCONNECTED),
        .dbiterr(NLW_pkt_fifo_dbiterr_UNCONNECTED),
        .din(din),
        .dout({dout[37:36],pkt_fifo_rdata[39:38],dout[35:28],pkt_fifo_rdata[29:28],dout[27:0]}),
        .empty(empty),
        .full(pkt_fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(NLW_pkt_fifo_overflow_UNCONNECTED),
        .prog_empty(NLW_pkt_fifo_prog_empty_UNCONNECTED),
        .prog_full(NLW_pkt_fifo_prog_full_UNCONNECTED),
        .rd_clk(m_axis_aclk),
        .rd_data_count(NLW_pkt_fifo_rd_data_count_UNCONNECTED[0]),
        .rd_en(rd_en),
        .rd_rst_busy(NLW_pkt_fifo_rd_rst_busy_UNCONNECTED),
        .rst(dest_out),
        .sbiterr(NLW_pkt_fifo_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .underflow(NLW_pkt_fifo_underflow_UNCONNECTED),
        .wr_ack(NLW_pkt_fifo_wr_ack_UNCONNECTED),
        .wr_clk(dl0_rxbyteclkhs),
        .wr_data_count(NLW_pkt_fifo_wr_data_count_UNCONNECTED[0]),
        .wr_en(wr_en),
        .wr_rst_busy(NLW_pkt_fifo_wr_rst_busy_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo
   (dout,
    empty,
    rst,
    dl1_rxbyteclkhs,
    ppi_fifo_wen,
    din,
    rd_en);
  output [11:0]dout;
  output empty;
  input rst;
  input dl1_rxbyteclkhs;
  input ppi_fifo_wen;
  input [11:0]din;
  input rd_en;

  wire [11:0]din;
  wire dl1_rxbyteclkhs;
  wire [11:0]dout;
  wire empty;
  wire ppi_fifo1_full;
  wire ppi_fifo_wen;
  wire rd_en;
  wire rst;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_almost_empty_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_almost_full_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_data_valid_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_dbiterr_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_overflow_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_prog_empty_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_prog_full_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_sbiterr_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_underflow_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_wr_ack_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_wr_rst_busy_UNCONNECTED ;
  wire [4:0]\NLW_CSI_OPT3_OFF.ppi_fifo_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_CSI_OPT3_OFF.ppi_fifo_wr_data_count_UNCONNECTED ;

  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "5" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "12" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "12" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_fifo_sync \CSI_OPT3_OFF.ppi_fifo 
       (.almost_empty(\NLW_CSI_OPT3_OFF.ppi_fifo_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_CSI_OPT3_OFF.ppi_fifo_almost_full_UNCONNECTED ),
        .data_valid(\NLW_CSI_OPT3_OFF.ppi_fifo_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_CSI_OPT3_OFF.ppi_fifo_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(ppi_fifo1_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(\NLW_CSI_OPT3_OFF.ppi_fifo_overflow_UNCONNECTED ),
        .prog_empty(\NLW_CSI_OPT3_OFF.ppi_fifo_prog_empty_UNCONNECTED ),
        .prog_full(\NLW_CSI_OPT3_OFF.ppi_fifo_prog_full_UNCONNECTED ),
        .rd_data_count(\NLW_CSI_OPT3_OFF.ppi_fifo_rd_data_count_UNCONNECTED [4:0]),
        .rd_en(rd_en),
        .rd_rst_busy(\NLW_CSI_OPT3_OFF.ppi_fifo_rd_rst_busy_UNCONNECTED ),
        .rst(rst),
        .sbiterr(\NLW_CSI_OPT3_OFF.ppi_fifo_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .underflow(\NLW_CSI_OPT3_OFF.ppi_fifo_underflow_UNCONNECTED ),
        .wr_ack(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_ack_UNCONNECTED ),
        .wr_clk(dl1_rxbyteclkhs),
        .wr_data_count(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_data_count_UNCONNECTED [4:0]),
        .wr_en(ppi_fifo_wen),
        .wr_rst_busy(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_rst_busy_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo__xdcDup__1
   (dout,
    empty,
    p_26_in,
    rst,
    dl0_rxbyteclkhs,
    ppi_fifo_wen,
    din,
    rd_en,
    o_pkt_prcng_d1_reg,
    o_pkt_prcng_d1_reg_0);
  output [11:0]dout;
  output empty;
  output p_26_in;
  input rst;
  input dl0_rxbyteclkhs;
  input ppi_fifo_wen;
  input [11:0]din;
  input rd_en;
  input o_pkt_prcng_d1_reg;
  input [0:0]o_pkt_prcng_d1_reg_0;

  wire [11:0]din;
  wire dl0_rxbyteclkhs;
  wire [11:0]dout;
  wire empty;
  wire o_pkt_prcng_d1_reg;
  wire [0:0]o_pkt_prcng_d1_reg_0;
  wire p_26_in;
  wire ppi_fifo0_full;
  wire ppi_fifo_wen;
  wire rd_en;
  wire rst;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_almost_empty_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_almost_full_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_data_valid_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_dbiterr_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_overflow_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_prog_empty_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_prog_full_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_sbiterr_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_underflow_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_wr_ack_UNCONNECTED ;
  wire \NLW_CSI_OPT3_OFF.ppi_fifo_wr_rst_busy_UNCONNECTED ;
  wire [4:0]\NLW_CSI_OPT3_OFF.ppi_fifo_rd_data_count_UNCONNECTED ;
  wire [4:0]\NLW_CSI_OPT3_OFF.ppi_fifo_wr_data_count_UNCONNECTED ;

  (* CASCADE_HEIGHT = "0" *) 
  (* DOUT_RESET_VALUE = "0" *) 
  (* ECC_MODE = "no_ecc" *) 
  (* EN_ADV_FEATURE_SYNC = "16'b0000011100000111" *) 
  (* FIFO_MEMORY_TYPE = "distributed" *) 
  (* FIFO_READ_LATENCY = "1" *) 
  (* FIFO_WRITE_DEPTH = "16" *) 
  (* FULL_RESET_VALUE = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* PROG_EMPTY_THRESH = "5" *) 
  (* PROG_FULL_THRESH = "11" *) 
  (* P_COMMON_CLOCK = "1" *) 
  (* P_ECC_MODE = "0" *) 
  (* P_FIFO_MEMORY_TYPE = "1" *) 
  (* P_READ_MODE = "1" *) 
  (* P_WAKEUP_TIME = "2" *) 
  (* RD_DATA_COUNT_WIDTH = "5" *) 
  (* READ_DATA_WIDTH = "12" *) 
  (* READ_MODE = "fwft" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* USE_ADV_FEATURES = "0707" *) 
  (* WAKEUP_TIME = "0" *) 
  (* WRITE_DATA_WIDTH = "12" *) 
  (* WR_DATA_COUNT_WIDTH = "5" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_fifo_sync__2 \CSI_OPT3_OFF.ppi_fifo 
       (.almost_empty(\NLW_CSI_OPT3_OFF.ppi_fifo_almost_empty_UNCONNECTED ),
        .almost_full(\NLW_CSI_OPT3_OFF.ppi_fifo_almost_full_UNCONNECTED ),
        .data_valid(\NLW_CSI_OPT3_OFF.ppi_fifo_data_valid_UNCONNECTED ),
        .dbiterr(\NLW_CSI_OPT3_OFF.ppi_fifo_dbiterr_UNCONNECTED ),
        .din(din),
        .dout(dout),
        .empty(empty),
        .full(ppi_fifo0_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .overflow(\NLW_CSI_OPT3_OFF.ppi_fifo_overflow_UNCONNECTED ),
        .prog_empty(\NLW_CSI_OPT3_OFF.ppi_fifo_prog_empty_UNCONNECTED ),
        .prog_full(\NLW_CSI_OPT3_OFF.ppi_fifo_prog_full_UNCONNECTED ),
        .rd_data_count(\NLW_CSI_OPT3_OFF.ppi_fifo_rd_data_count_UNCONNECTED [4:0]),
        .rd_en(rd_en),
        .rd_rst_busy(\NLW_CSI_OPT3_OFF.ppi_fifo_rd_rst_busy_UNCONNECTED ),
        .rst(rst),
        .sbiterr(\NLW_CSI_OPT3_OFF.ppi_fifo_sbiterr_UNCONNECTED ),
        .sleep(1'b0),
        .underflow(\NLW_CSI_OPT3_OFF.ppi_fifo_underflow_UNCONNECTED ),
        .wr_ack(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_ack_UNCONNECTED ),
        .wr_clk(dl0_rxbyteclkhs),
        .wr_data_count(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_data_count_UNCONNECTED [4:0]),
        .wr_en(ppi_fifo_wen),
        .wr_rst_busy(\NLW_CSI_OPT3_OFF.ppi_fifo_wr_rst_busy_UNCONNECTED ));
  LUT4 #(
    .INIT(16'h0020)) 
    o_pkt_prcng_d1_i_2
       (.I0(dout[10]),
        .I1(o_pkt_prcng_d1_reg),
        .I2(o_pkt_prcng_d1_reg_0),
        .I3(empty),
        .O(p_26_in));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_ppi_inf" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_inf
   (ppi_fifo_wdata,
    ppi_fifo_wen,
    dest_arst,
    pkt_wr_in_progress_d1_reg_0,
    dl0_rxactivehs,
    dl0_rxbyteclkhs,
    dl0_rxvalidhs,
    dl0_rxdatahs,
    dl0_errsotsynchs,
    dl0_errsoths,
    dl0_rxsynchs);
  output [11:0]ppi_fifo_wdata;
  output ppi_fifo_wen;
  input dest_arst;
  input pkt_wr_in_progress_d1_reg_0;
  input dl0_rxactivehs;
  input dl0_rxbyteclkhs;
  input dl0_rxvalidhs;
  input [7:0]dl0_rxdatahs;
  input dl0_errsotsynchs;
  input dl0_errsoths;
  input dl0_rxsynchs;

  wire activefall;
  wire dest_arst;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire dl0_rxbyteclkhs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxvalidhs;
  wire errsoths_i;
  wire errsotsynchs_i;
  wire errsotsynchs_i1;
  wire pkt_fst_data;
  wire pkt_fst_data_d1;
  wire pkt_start1;
  wire pkt_wr_in_progress_d1;
  wire pkt_wr_in_progress_d1_i_1_n_0;
  wire pkt_wr_in_progress_d1_i_2_n_0;
  wire pkt_wr_in_progress_d1_reg_0;
  wire [11:0]ppi_fifo_wdata;
  wire ppi_fifo_wen;
  wire ppi_fifo_wen_i;
  wire rxactivehs_d1;
  wire [7:0]rxdatahs_d1;
  wire rxvalidhs_d1;
  wire valid_hunt;
  wire valid_hunt_i_1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h00F00020)) 
    pkt_fst_data_d1_i_1
       (.I0(dl0_rxactivehs),
        .I1(rxactivehs_d1),
        .I2(dl0_rxvalidhs),
        .I3(rxvalidhs_d1),
        .I4(valid_hunt),
        .O(pkt_fst_data));
  FDRE pkt_fst_data_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_fst_data),
        .Q(pkt_fst_data_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEBEAAAA)) 
    pkt_wr_in_progress_d1_i_1
       (.I0(pkt_wr_in_progress_d1_i_2_n_0),
        .I1(dl0_rxsynchs),
        .I2(dl0_errsotsynchs),
        .I3(dl0_errsoths),
        .I4(dl0_rxactivehs),
        .I5(rxactivehs_d1),
        .O(pkt_wr_in_progress_d1_i_1_n_0));
  LUT6 #(
    .INIT(64'h0080000000000080)) 
    pkt_wr_in_progress_d1_i_2
       (.I0(pkt_wr_in_progress_d1),
        .I1(dest_arst),
        .I2(pkt_wr_in_progress_d1_reg_0),
        .I3(ppi_fifo_wdata[8]),
        .I4(rxactivehs_d1),
        .I5(dl0_rxactivehs),
        .O(pkt_wr_in_progress_d1_i_2_n_0));
  FDRE pkt_wr_in_progress_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_wr_in_progress_d1_i_1_n_0),
        .Q(pkt_wr_in_progress_d1),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    \ppi_fifo_wdata[11]_i_1 
       (.I0(rxactivehs_d1),
        .I1(dl0_rxactivehs),
        .I2(dl0_errsotsynchs),
        .O(errsotsynchs_i1));
  LUT2 #(
    .INIT(4'h2)) 
    \ppi_fifo_wdata[11]_i_2 
       (.I0(rxactivehs_d1),
        .I1(dl0_rxactivehs),
        .O(activefall));
  LUT5 #(
    .INIT(32'h55C500C0)) 
    \ppi_fifo_wdata[8]_i_1 
       (.I0(ppi_fifo_wen),
        .I1(dl0_errsotsynchs),
        .I2(dl0_rxactivehs),
        .I3(rxactivehs_d1),
        .I4(ppi_fifo_wdata[8]),
        .O(errsotsynchs_i));
  LUT5 #(
    .INIT(32'h55C500C0)) 
    \ppi_fifo_wdata[9]_i_1 
       (.I0(ppi_fifo_wen),
        .I1(dl0_errsoths),
        .I2(dl0_rxactivehs),
        .I3(rxactivehs_d1),
        .I4(ppi_fifo_wdata[9]),
        .O(errsoths_i));
  FDRE \ppi_fifo_wdata_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[0]),
        .Q(ppi_fifo_wdata[0]),
        .R(1'b0));
  FDSE \ppi_fifo_wdata_reg[10] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_fst_data_d1),
        .Q(ppi_fifo_wdata[10]),
        .S(errsotsynchs_i1));
  FDSE \ppi_fifo_wdata_reg[11] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(activefall),
        .Q(ppi_fifo_wdata[11]),
        .S(errsotsynchs_i1));
  FDRE \ppi_fifo_wdata_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[1]),
        .Q(ppi_fifo_wdata[1]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[2] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[2]),
        .Q(ppi_fifo_wdata[2]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[3] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[3]),
        .Q(ppi_fifo_wdata[3]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[4] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[4]),
        .Q(ppi_fifo_wdata[4]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[5] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[5]),
        .Q(ppi_fifo_wdata[5]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[6] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[6]),
        .Q(ppi_fifo_wdata[6]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[7] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[7]),
        .Q(ppi_fifo_wdata[7]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[8] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(errsotsynchs_i),
        .Q(ppi_fifo_wdata[8]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[9] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(errsoths_i),
        .Q(ppi_fifo_wdata[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2020FF2020202020)) 
    ppi_wen_done_i_1
       (.I0(rxvalidhs_d1),
        .I1(ppi_fifo_wdata[8]),
        .I2(pkt_wr_in_progress_d1),
        .I3(dl0_rxactivehs),
        .I4(rxactivehs_d1),
        .I5(pkt_start1),
        .O(ppi_fifo_wen_i));
  LUT3 #(
    .INIT(8'h04)) 
    ppi_wen_done_i_2
       (.I0(dl0_errsoths),
        .I1(dl0_errsotsynchs),
        .I2(dl0_rxsynchs),
        .O(pkt_start1));
  FDRE ppi_wen_done_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(ppi_fifo_wen_i),
        .Q(ppi_fifo_wen),
        .R(1'b0));
  FDRE rxactivehs_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxactivehs),
        .Q(rxactivehs_d1),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[0]),
        .Q(rxdatahs_d1[0]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[1]),
        .Q(rxdatahs_d1[1]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[2] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[2]),
        .Q(rxdatahs_d1[2]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[3] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[3]),
        .Q(rxdatahs_d1[3]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[4] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[4]),
        .Q(rxdatahs_d1[4]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[5] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[5]),
        .Q(rxdatahs_d1[5]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[6] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[6]),
        .Q(rxdatahs_d1[6]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[7] 
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxdatahs[7]),
        .Q(rxdatahs_d1[7]),
        .R(1'b0));
  FDRE rxvalidhs_d1_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(dl0_rxvalidhs),
        .Q(rxvalidhs_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'h8A8A8F8A)) 
    valid_hunt_i_1
       (.I0(valid_hunt),
        .I1(rxvalidhs_d1),
        .I2(dl0_rxvalidhs),
        .I3(dl0_rxactivehs),
        .I4(rxactivehs_d1),
        .O(valid_hunt_i_1_n_0));
  FDRE valid_hunt_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(valid_hunt_i_1_n_0),
        .Q(valid_hunt),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_ppi_inf" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_inf_0
   (ppi_fifo_wdata,
    ppi_fifo_wen,
    dest_arst,
    pkt_wr_in_progress_d1_reg_0,
    dl1_rxactivehs,
    dl1_rxbyteclkhs,
    dl1_rxvalidhs,
    dl1_rxdatahs,
    dl1_errsotsynchs,
    dl1_errsoths,
    dl1_rxsynchs);
  output [11:0]ppi_fifo_wdata;
  output ppi_fifo_wen;
  input dest_arst;
  input pkt_wr_in_progress_d1_reg_0;
  input dl1_rxactivehs;
  input dl1_rxbyteclkhs;
  input dl1_rxvalidhs;
  input [7:0]dl1_rxdatahs;
  input dl1_errsotsynchs;
  input dl1_errsoths;
  input dl1_rxsynchs;

  wire activefall;
  wire dest_arst;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire dl1_rxbyteclkhs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire errsoths_i;
  wire errsotsynchs_i;
  wire errsotsynchs_i1;
  wire pkt_fst_data;
  wire pkt_fst_data_d1;
  wire pkt_start1;
  wire pkt_wr_in_progress_d1;
  wire pkt_wr_in_progress_d1_i_1__0_n_0;
  wire pkt_wr_in_progress_d1_i_2__0_n_0;
  wire pkt_wr_in_progress_d1_reg_0;
  wire [11:0]ppi_fifo_wdata;
  wire ppi_fifo_wen;
  wire ppi_fifo_wen_i;
  wire rxactivehs_d1;
  wire [7:0]rxdatahs_d1;
  wire rxvalidhs_d1;
  wire valid_hunt;
  wire valid_hunt_i_1__0_n_0;

  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h00F00020)) 
    pkt_fst_data_d1_i_1__0
       (.I0(dl1_rxactivehs),
        .I1(rxactivehs_d1),
        .I2(dl1_rxvalidhs),
        .I3(rxvalidhs_d1),
        .I4(valid_hunt),
        .O(pkt_fst_data));
  FDRE pkt_fst_data_d1_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_fst_data),
        .Q(pkt_fst_data_d1),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAEBEAAAA)) 
    pkt_wr_in_progress_d1_i_1__0
       (.I0(pkt_wr_in_progress_d1_i_2__0_n_0),
        .I1(dl1_rxsynchs),
        .I2(dl1_errsotsynchs),
        .I3(dl1_errsoths),
        .I4(dl1_rxactivehs),
        .I5(rxactivehs_d1),
        .O(pkt_wr_in_progress_d1_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0080000000000080)) 
    pkt_wr_in_progress_d1_i_2__0
       (.I0(pkt_wr_in_progress_d1),
        .I1(dest_arst),
        .I2(pkt_wr_in_progress_d1_reg_0),
        .I3(ppi_fifo_wdata[8]),
        .I4(rxactivehs_d1),
        .I5(dl1_rxactivehs),
        .O(pkt_wr_in_progress_d1_i_2__0_n_0));
  FDRE pkt_wr_in_progress_d1_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_wr_in_progress_d1_i_1__0_n_0),
        .Q(pkt_wr_in_progress_d1),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    \ppi_fifo_wdata[11]_i_1__0 
       (.I0(rxactivehs_d1),
        .I1(dl1_rxactivehs),
        .I2(dl1_errsotsynchs),
        .O(errsotsynchs_i1));
  LUT2 #(
    .INIT(4'h2)) 
    \ppi_fifo_wdata[11]_i_2__0 
       (.I0(rxactivehs_d1),
        .I1(dl1_rxactivehs),
        .O(activefall));
  LUT5 #(
    .INIT(32'h55C500C0)) 
    \ppi_fifo_wdata[8]_i_1__0 
       (.I0(ppi_fifo_wen),
        .I1(dl1_errsotsynchs),
        .I2(dl1_rxactivehs),
        .I3(rxactivehs_d1),
        .I4(ppi_fifo_wdata[8]),
        .O(errsotsynchs_i));
  LUT5 #(
    .INIT(32'h55C500C0)) 
    \ppi_fifo_wdata[9]_i_1__0 
       (.I0(ppi_fifo_wen),
        .I1(dl1_errsoths),
        .I2(dl1_rxactivehs),
        .I3(rxactivehs_d1),
        .I4(ppi_fifo_wdata[9]),
        .O(errsoths_i));
  FDRE \ppi_fifo_wdata_reg[0] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[0]),
        .Q(ppi_fifo_wdata[0]),
        .R(1'b0));
  FDSE \ppi_fifo_wdata_reg[10] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(pkt_fst_data_d1),
        .Q(ppi_fifo_wdata[10]),
        .S(errsotsynchs_i1));
  FDSE \ppi_fifo_wdata_reg[11] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(activefall),
        .Q(ppi_fifo_wdata[11]),
        .S(errsotsynchs_i1));
  FDRE \ppi_fifo_wdata_reg[1] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[1]),
        .Q(ppi_fifo_wdata[1]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[2] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[2]),
        .Q(ppi_fifo_wdata[2]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[3] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[3]),
        .Q(ppi_fifo_wdata[3]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[4] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[4]),
        .Q(ppi_fifo_wdata[4]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[5] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[5]),
        .Q(ppi_fifo_wdata[5]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[6] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[6]),
        .Q(ppi_fifo_wdata[6]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[7] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(rxdatahs_d1[7]),
        .Q(ppi_fifo_wdata[7]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[8] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(errsotsynchs_i),
        .Q(ppi_fifo_wdata[8]),
        .R(1'b0));
  FDRE \ppi_fifo_wdata_reg[9] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(errsoths_i),
        .Q(ppi_fifo_wdata[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2020FF2020202020)) 
    ppi_wen_done_i_1__0
       (.I0(rxvalidhs_d1),
        .I1(ppi_fifo_wdata[8]),
        .I2(pkt_wr_in_progress_d1),
        .I3(dl1_rxactivehs),
        .I4(rxactivehs_d1),
        .I5(pkt_start1),
        .O(ppi_fifo_wen_i));
  LUT3 #(
    .INIT(8'h04)) 
    ppi_wen_done_i_2__0
       (.I0(dl1_errsoths),
        .I1(dl1_errsotsynchs),
        .I2(dl1_rxsynchs),
        .O(pkt_start1));
  FDRE ppi_wen_done_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(ppi_fifo_wen_i),
        .Q(ppi_fifo_wen),
        .R(1'b0));
  FDRE rxactivehs_d1_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxactivehs),
        .Q(rxactivehs_d1),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[0] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[0]),
        .Q(rxdatahs_d1[0]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[1] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[1]),
        .Q(rxdatahs_d1[1]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[2] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[2]),
        .Q(rxdatahs_d1[2]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[3] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[3]),
        .Q(rxdatahs_d1[3]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[4] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[4]),
        .Q(rxdatahs_d1[4]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[5] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[5]),
        .Q(rxdatahs_d1[5]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[6] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[6]),
        .Q(rxdatahs_d1[6]),
        .R(1'b0));
  FDRE \rxdatahs_d1_reg[7] 
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxdatahs[7]),
        .Q(rxdatahs_d1[7]),
        .R(1'b0));
  FDRE rxvalidhs_d1_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(dl1_rxvalidhs),
        .Q(rxvalidhs_d1),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h8A8A8F8A)) 
    valid_hunt_i_1__0
       (.I0(valid_hunt),
        .I1(rxvalidhs_d1),
        .I2(dl1_rxvalidhs),
        .I3(dl1_rxactivehs),
        .I4(rxactivehs_d1),
        .O(valid_hunt_i_1__0_n_0));
  FDRE valid_hunt_reg
       (.C(dl1_rxbyteclkhs),
        .CE(1'b1),
        .D(valid_hunt_i_1__0_n_0),
        .Q(valid_hunt),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_reg_inf" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_reg_inf
   (Q,
    dest_out,
    \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ,
    src_rcv,
    src_send,
    SS,
    out,
    cl_enable,
    pktnppi_fifo_rst_reg_0,
    \core_config_reg[1]_0 ,
    s_axi_bvalid_reg_0,
    s_axi_rvalid_reg_0,
    E,
    wr2_isr1,
    wr2_isr2,
    D,
    interrupt,
    \ier_reg[9]_0 ,
    s_axi_arready,
    s_axi_awready,
    s_axi_wready,
    m_axis_aresetn_0,
    lp_data,
    \syncstages_ff_reg[2] ,
    s_axi_rdata,
    m_axis_aclk,
    src_in,
    s_axi_aclk,
    full,
    dl0_rxbyteclkhs,
    dl0_stopstate,
    dl1_stopstate,
    dl2_stopstate,
    dl3_stopstate,
    \src_hsdata_ff_reg[25] ,
    \syncstages_ff_reg[0] ,
    wr_en,
    lp_count_en,
    SR,
    s_axi_aresetn,
    cl_info_reg_0,
    \active_lanes_reg[1]_0 ,
    img_send_reg_0,
    s_axi_wdata,
    interrupt_0,
    vcx_err,
    interrupt_1,
    interrupt_2,
    p_0_in39_in,
    p_0_in34_in,
    p_0_in8_in,
    p_0_in33_in,
    p_0_in30_in,
    p_0_in29_in,
    p_0_in28_in,
    p_0_in27_in,
    p_0_in7_in,
    p_0_in5_in,
    p_0_in6_in,
    \s_axi_rdata_reg[20]_0 ,
    isr_55,
    dest_pulse,
    s_axi_arvalid,
    s_axi_bready,
    s_axi_awvalid,
    s_axi_awaddr,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_araddr,
    m_axis_aresetn,
    end_mem_wr2,
    lx_info_all);
  output [0:0]Q;
  output dest_out;
  output \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  output src_rcv;
  output src_send;
  output [0:0]SS;
  output [3:0]out;
  output cl_enable;
  output pktnppi_fifo_rst_reg_0;
  output [0:0]\core_config_reg[1]_0 ;
  output s_axi_bvalid_reg_0;
  output s_axi_rvalid_reg_0;
  output [1:0]E;
  output wr2_isr1;
  output wr2_isr2;
  output [1:0]D;
  output interrupt;
  output [2:0]\ier_reg[9]_0 ;
  output s_axi_arready;
  output s_axi_awready;
  output s_axi_wready;
  output m_axis_aresetn_0;
  output lp_data;
  output \syncstages_ff_reg[2] ;
  output [31:0]s_axi_rdata;
  input m_axis_aclk;
  input [41:0]src_in;
  input s_axi_aclk;
  input full;
  input dl0_rxbyteclkhs;
  input dl0_stopstate;
  input dl1_stopstate;
  input dl2_stopstate;
  input dl3_stopstate;
  input [25:0]\src_hsdata_ff_reg[25] ;
  input \syncstages_ff_reg[0] ;
  input wr_en;
  input [3:0]lp_count_en;
  input [0:0]SR;
  input s_axi_aresetn;
  input cl_info_reg_0;
  input \active_lanes_reg[1]_0 ;
  input img_send_reg_0;
  input [25:0]s_axi_wdata;
  input [16:0]interrupt_0;
  input vcx_err;
  input [36:0]interrupt_1;
  input interrupt_2;
  input p_0_in39_in;
  input p_0_in34_in;
  input p_0_in8_in;
  input p_0_in33_in;
  input p_0_in30_in;
  input p_0_in29_in;
  input p_0_in28_in;
  input p_0_in27_in;
  input p_0_in7_in;
  input p_0_in5_in;
  input p_0_in6_in;
  input [1:0]\s_axi_rdata_reg[20]_0 ;
  input isr_55;
  input dest_pulse;
  input s_axi_arvalid;
  input s_axi_bready;
  input s_axi_awvalid;
  input [5:0]s_axi_awaddr;
  input s_axi_wvalid;
  input s_axi_rready;
  input [5:0]s_axi_araddr;
  input m_axis_aresetn;
  input end_mem_wr2;
  input [7:0]lx_info_all;

  wire [1:0]D;
  wire [1:0]E;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_2 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_3 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_4 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_5 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_6 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_7 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_0 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_1 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_2 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_3 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_4 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_5 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_6 ;
  wire \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_7 ;
  wire [15:0]\LP_CNT_C2R[0].lp_count_reg[0]_5 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_2 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_3 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_4 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_5 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_6 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_7 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_0 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_1 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_2 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_3 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_4 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_5 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_6 ;
  wire \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_7 ;
  wire [15:0]\LP_CNT_C2R[1].lp_count_reg[1]_4 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_2 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_3 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_4 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_5 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_6 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_7 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_0 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_1 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_2 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_3 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_4 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_5 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_6 ;
  wire \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_7 ;
  wire [15:0]\LP_CNT_C2R[2].lp_count_reg[2]_3 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_2 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_3 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_4 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_5 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_6 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_7 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_0 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_1 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_2 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_3 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_4 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_5 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_6 ;
  wire \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_7 ;
  wire [15:0]\LP_CNT_C2R[3].lp_count_reg[3]_2 ;
  wire [5:2]\LX_INFO_GEN[0].lx_info_reg[0]_0 ;
  wire [5:2]\LX_INFO_GEN[1].lx_info_reg[1]_1 ;
  wire [0:0]Q;
  wire \SD_INV_1.shutdown_i[3]_i_1_n_0 ;
  wire [0:0]SR;
  wire [0:0]SS;
  wire [1:0]active_lanes_r2p;
  wire \active_lanes_reg[1]_0 ;
  wire \active_lanes_reg_n_0_[0] ;
  wire \active_lanes_reg_n_0_[1] ;
  (* DONT_TOUCH *) wire cl_enable_i;
  wire cl_info_reg_0;
  wire \core_config[1]_i_1_n_0 ;
  wire \core_config[1]_i_2_n_0 ;
  wire [0:0]\core_config_reg[1]_0 ;
  wire \core_config_reg_n_0_[0] ;
  wire core_en_d1;
  wire core_men;
  wire \data/mem_wr_err20 ;
  wire [1:1]data9;
  wire data_dis_done;
  wire data_dis_done_i_2_n_0;
  wire data_shutdown_c2r;
  wire dest_out;
  wire dest_pulse;
  wire disable_in_progress;
  wire disable_in_progress_d1;
  wire disable_in_progress_d1_i_2_n_0;
  wire dl0_rxbyteclkhs;
  wire dl0_stopstate;
  wire dl1_stopstate;
  wire dl2_stopstate;
  wire dl3_stopstate;
  wire end_mem_wr2;
  wire full;
  wire \gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ;
  wire gen_spkt_fifo_n_10;
  wire gen_spkt_fifo_n_11;
  wire gen_spkt_fifo_n_12;
  wire gen_spkt_fifo_n_13;
  wire gen_spkt_fifo_n_14;
  wire gen_spkt_fifo_n_15;
  wire gen_spkt_fifo_n_16;
  wire gen_spkt_fifo_n_17;
  wire gen_spkt_fifo_n_18;
  wire gen_spkt_fifo_n_19;
  wire gen_spkt_fifo_n_20;
  wire gen_spkt_fifo_n_21;
  wire gen_spkt_fifo_n_22;
  wire gen_spkt_fifo_n_23;
  wire gen_spkt_fifo_n_24;
  wire gen_spkt_fifo_n_25;
  wire gen_spkt_fifo_n_26;
  wire gen_spkt_fifo_n_27;
  wire gen_spkt_fifo_n_28;
  wire gen_spkt_fifo_n_3;
  wire gen_spkt_fifo_n_4;
  wire gen_spkt_fifo_n_5;
  wire gen_spkt_fifo_n_6;
  wire gen_spkt_fifo_n_7;
  wire gen_spkt_fifo_n_8;
  wire gen_spkt_fifo_n_9;
  wire \gie[0]_i_1_n_0 ;
  wire \gie[0]_i_2_n_0 ;
  wire \gie_reg_n_0_[0] ;
  wire [31:0]ier;
  wire \ier[31]_i_1_n_0 ;
  wire [2:0]\ier_reg[9]_0 ;
  wire [31:0]img_info1_vc0;
  wire \img_info1_vc0[15]_i_1_n_0 ;
  wire [31:0]img_info1_vc1;
  wire [15:0]img_info1_vc10;
  wire \img_info1_vc10[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc11;
  wire \img_info1_vc11[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc12;
  wire \img_info1_vc12[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc13;
  wire \img_info1_vc13[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc14;
  wire \img_info1_vc14[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc15;
  wire \img_info1_vc15[15]_i_1_n_0 ;
  wire \img_info1_vc1[15]_i_1_n_0 ;
  wire \img_info1_vc1[31]_i_1_n_0 ;
  wire [31:0]img_info1_vc2;
  wire \img_info1_vc2[15]_i_1_n_0 ;
  wire \img_info1_vc2[31]_i_1_n_0 ;
  wire [31:0]img_info1_vc3;
  wire \img_info1_vc3[15]_i_1_n_0 ;
  wire \img_info1_vc3[31]_i_1_n_0 ;
  wire [15:0]img_info1_vc4;
  wire \img_info1_vc4[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc5;
  wire \img_info1_vc5[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc6;
  wire \img_info1_vc6[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc7;
  wire \img_info1_vc7[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc8;
  wire \img_info1_vc8[15]_i_1_n_0 ;
  wire [15:0]img_info1_vc9;
  wire \img_info1_vc9[15]_i_1_n_0 ;
  wire \img_info2_vc0_reg_n_0_[0] ;
  wire \img_info2_vc0_reg_n_0_[1] ;
  wire \img_info2_vc0_reg_n_0_[2] ;
  wire \img_info2_vc0_reg_n_0_[3] ;
  wire \img_info2_vc0_reg_n_0_[4] ;
  wire \img_info2_vc0_reg_n_0_[5] ;
  wire \img_info2_vc10_reg_n_0_[0] ;
  wire \img_info2_vc10_reg_n_0_[1] ;
  wire \img_info2_vc10_reg_n_0_[2] ;
  wire \img_info2_vc10_reg_n_0_[3] ;
  wire \img_info2_vc10_reg_n_0_[4] ;
  wire \img_info2_vc10_reg_n_0_[5] ;
  wire \img_info2_vc11_reg_n_0_[0] ;
  wire \img_info2_vc11_reg_n_0_[1] ;
  wire \img_info2_vc11_reg_n_0_[2] ;
  wire \img_info2_vc11_reg_n_0_[3] ;
  wire \img_info2_vc11_reg_n_0_[4] ;
  wire \img_info2_vc11_reg_n_0_[5] ;
  wire \img_info2_vc12_reg_n_0_[0] ;
  wire \img_info2_vc12_reg_n_0_[1] ;
  wire \img_info2_vc12_reg_n_0_[2] ;
  wire \img_info2_vc12_reg_n_0_[3] ;
  wire \img_info2_vc12_reg_n_0_[4] ;
  wire \img_info2_vc12_reg_n_0_[5] ;
  wire \img_info2_vc13_reg_n_0_[0] ;
  wire \img_info2_vc13_reg_n_0_[1] ;
  wire \img_info2_vc13_reg_n_0_[2] ;
  wire \img_info2_vc13_reg_n_0_[3] ;
  wire \img_info2_vc13_reg_n_0_[4] ;
  wire \img_info2_vc13_reg_n_0_[5] ;
  wire \img_info2_vc14_reg_n_0_[0] ;
  wire \img_info2_vc14_reg_n_0_[1] ;
  wire \img_info2_vc14_reg_n_0_[2] ;
  wire \img_info2_vc14_reg_n_0_[3] ;
  wire \img_info2_vc14_reg_n_0_[4] ;
  wire \img_info2_vc14_reg_n_0_[5] ;
  wire \img_info2_vc15_reg_n_0_[0] ;
  wire \img_info2_vc15_reg_n_0_[1] ;
  wire \img_info2_vc15_reg_n_0_[2] ;
  wire \img_info2_vc15_reg_n_0_[3] ;
  wire \img_info2_vc15_reg_n_0_[4] ;
  wire \img_info2_vc15_reg_n_0_[5] ;
  wire \img_info2_vc1_reg_n_0_[0] ;
  wire \img_info2_vc1_reg_n_0_[1] ;
  wire \img_info2_vc1_reg_n_0_[2] ;
  wire \img_info2_vc1_reg_n_0_[3] ;
  wire \img_info2_vc1_reg_n_0_[4] ;
  wire \img_info2_vc1_reg_n_0_[5] ;
  wire \img_info2_vc2_reg_n_0_[0] ;
  wire \img_info2_vc2_reg_n_0_[1] ;
  wire \img_info2_vc2_reg_n_0_[2] ;
  wire \img_info2_vc2_reg_n_0_[3] ;
  wire \img_info2_vc2_reg_n_0_[4] ;
  wire \img_info2_vc2_reg_n_0_[5] ;
  wire \img_info2_vc3_reg_n_0_[0] ;
  wire \img_info2_vc3_reg_n_0_[1] ;
  wire \img_info2_vc3_reg_n_0_[2] ;
  wire \img_info2_vc3_reg_n_0_[3] ;
  wire \img_info2_vc3_reg_n_0_[4] ;
  wire \img_info2_vc3_reg_n_0_[5] ;
  wire \img_info2_vc4_reg_n_0_[0] ;
  wire \img_info2_vc4_reg_n_0_[1] ;
  wire \img_info2_vc4_reg_n_0_[2] ;
  wire \img_info2_vc4_reg_n_0_[3] ;
  wire \img_info2_vc4_reg_n_0_[4] ;
  wire \img_info2_vc4_reg_n_0_[5] ;
  wire \img_info2_vc5_reg_n_0_[0] ;
  wire \img_info2_vc5_reg_n_0_[1] ;
  wire \img_info2_vc5_reg_n_0_[2] ;
  wire \img_info2_vc5_reg_n_0_[3] ;
  wire \img_info2_vc5_reg_n_0_[4] ;
  wire \img_info2_vc5_reg_n_0_[5] ;
  wire \img_info2_vc6_reg_n_0_[0] ;
  wire \img_info2_vc6_reg_n_0_[1] ;
  wire \img_info2_vc6_reg_n_0_[2] ;
  wire \img_info2_vc6_reg_n_0_[3] ;
  wire \img_info2_vc6_reg_n_0_[4] ;
  wire \img_info2_vc6_reg_n_0_[5] ;
  wire \img_info2_vc7_reg_n_0_[0] ;
  wire \img_info2_vc7_reg_n_0_[1] ;
  wire \img_info2_vc7_reg_n_0_[2] ;
  wire \img_info2_vc7_reg_n_0_[3] ;
  wire \img_info2_vc7_reg_n_0_[4] ;
  wire \img_info2_vc7_reg_n_0_[5] ;
  wire \img_info2_vc8_reg_n_0_[0] ;
  wire \img_info2_vc8_reg_n_0_[1] ;
  wire \img_info2_vc8_reg_n_0_[2] ;
  wire \img_info2_vc8_reg_n_0_[3] ;
  wire \img_info2_vc8_reg_n_0_[4] ;
  wire \img_info2_vc8_reg_n_0_[5] ;
  wire \img_info2_vc9_reg_n_0_[0] ;
  wire \img_info2_vc9_reg_n_0_[1] ;
  wire \img_info2_vc9_reg_n_0_[2] ;
  wire \img_info2_vc9_reg_n_0_[3] ;
  wire \img_info2_vc9_reg_n_0_[4] ;
  wire \img_info2_vc9_reg_n_0_[5] ;
  wire img_send_reg_0;
  wire img_vld;
  wire img_vld_i;
  wire [25:0]img_vld_out_i;
  wire \img_vld_out_reg_n_0_[0] ;
  wire \img_vld_out_reg_n_0_[1] ;
  wire \img_vld_out_reg_n_0_[2] ;
  wire \img_vld_out_reg_n_0_[3] ;
  wire \img_vld_out_reg_n_0_[4] ;
  wire \img_vld_out_reg_n_0_[5] ;
  wire incorrect_lanes;
  wire interrupt;
  wire [16:0]interrupt_0;
  wire [36:0]interrupt_1;
  wire interrupt_2;
  wire interrupt_INST_0_i_16_n_0;
  wire interrupt_INST_0_i_17_n_0;
  wire interrupt_INST_0_i_19_n_0;
  wire interrupt_INST_0_i_1_n_0;
  wire interrupt_INST_0_i_20_n_0;
  wire interrupt_INST_0_i_4_n_0;
  wire interrupt_INST_0_i_6_n_0;
  wire interrupt_INST_0_i_7_n_0;
  wire interrupt_INST_0_i_8_n_0;
  wire interrupt_INST_0_i_9_n_0;
  wire isr_55;
  wire l0_ppiclk_ss1;
  wire [15:0]lp_count_all;
  wire [3:0]lp_count_en;
  wire lp_count_en_c2r_0;
  wire lp_count_en_c2r_1;
  wire lp_count_en_c2r_2;
  wire lp_count_en_c2r_3;
  wire lp_count_pulse_0;
  wire lp_count_pulse_1;
  wire lp_count_pulse_2;
  wire lp_count_pulse_3;
  wire lp_data;
  wire lx_info;
  wire [7:0]lx_info_all;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire m_axis_aresetn_0;
  wire [5:0]p_0_in;
  wire p_0_in27_in;
  wire p_0_in28_in;
  wire p_0_in29_in;
  wire p_0_in30_in;
  wire p_0_in33_in;
  wire p_0_in34_in;
  wire p_0_in39_in;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire p_0_in7_in;
  wire p_0_in8_in;
  wire [15:0]p_0_in__0;
  wire [31:31]p_0_in__0__0;
  wire [15:0]p_0_in__1;
  wire [15:0]p_0_in__2;
  wire [15:0]p_0_in__3;
  wire p_19_in;
  wire [15:0]p_1_in;
  wire p_21_in;
  wire [1:0]p_25_in;
  wire [7:2]p_2_in;
  wire pkt_dis_done;
  wire pktnppi_fifo_rst0;
  wire pktnppi_fifo_rst_ack;
  wire pktnppi_fifo_rst_ack_i;
  wire pktnppi_fifo_rst_reg_0;
  wire ppi_dis_done_i_1_n_0;
  wire \prot_config[1]_i_1_n_0 ;
  wire rd_req;
  wire rd_req_i_1_n_0;
  wire reset_released;
  wire s_axi_aclk;
  wire [5:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [5:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_2_n_0;
  wire s_axi_bvalid_reg_0;
  wire [31:0]s_axi_rdata;
  wire \s_axi_rdata[0]_i_10_n_0 ;
  wire \s_axi_rdata[0]_i_11_n_0 ;
  wire \s_axi_rdata[0]_i_12_n_0 ;
  wire \s_axi_rdata[0]_i_13_n_0 ;
  wire \s_axi_rdata[0]_i_14_n_0 ;
  wire \s_axi_rdata[0]_i_15_n_0 ;
  wire \s_axi_rdata[0]_i_16_n_0 ;
  wire \s_axi_rdata[0]_i_18_n_0 ;
  wire \s_axi_rdata[0]_i_19_n_0 ;
  wire \s_axi_rdata[0]_i_20_n_0 ;
  wire \s_axi_rdata[0]_i_21_n_0 ;
  wire \s_axi_rdata[0]_i_22_n_0 ;
  wire \s_axi_rdata[0]_i_23_n_0 ;
  wire \s_axi_rdata[0]_i_2_n_0 ;
  wire \s_axi_rdata[0]_i_3_n_0 ;
  wire \s_axi_rdata[0]_i_4_n_0 ;
  wire \s_axi_rdata[0]_i_6_n_0 ;
  wire \s_axi_rdata[0]_i_7_n_0 ;
  wire \s_axi_rdata[0]_i_8_n_0 ;
  wire \s_axi_rdata[0]_i_9_n_0 ;
  wire \s_axi_rdata[10]_i_10_n_0 ;
  wire \s_axi_rdata[10]_i_11_n_0 ;
  wire \s_axi_rdata[10]_i_3_n_0 ;
  wire \s_axi_rdata[10]_i_4_n_0 ;
  wire \s_axi_rdata[10]_i_5_n_0 ;
  wire \s_axi_rdata[10]_i_7_n_0 ;
  wire \s_axi_rdata[10]_i_8_n_0 ;
  wire \s_axi_rdata[10]_i_9_n_0 ;
  wire \s_axi_rdata[11]_i_10_n_0 ;
  wire \s_axi_rdata[11]_i_12_n_0 ;
  wire \s_axi_rdata[11]_i_3_n_0 ;
  wire \s_axi_rdata[11]_i_4_n_0 ;
  wire \s_axi_rdata[11]_i_5_n_0 ;
  wire \s_axi_rdata[11]_i_7_n_0 ;
  wire \s_axi_rdata[11]_i_8_n_0 ;
  wire \s_axi_rdata[11]_i_9_n_0 ;
  wire \s_axi_rdata[12]_i_10_n_0 ;
  wire \s_axi_rdata[12]_i_11_n_0 ;
  wire \s_axi_rdata[12]_i_3_n_0 ;
  wire \s_axi_rdata[12]_i_4_n_0 ;
  wire \s_axi_rdata[12]_i_5_n_0 ;
  wire \s_axi_rdata[12]_i_6_n_0 ;
  wire \s_axi_rdata[12]_i_8_n_0 ;
  wire \s_axi_rdata[12]_i_9_n_0 ;
  wire \s_axi_rdata[13]_i_10_n_0 ;
  wire \s_axi_rdata[13]_i_11_n_0 ;
  wire \s_axi_rdata[13]_i_12_n_0 ;
  wire \s_axi_rdata[13]_i_13_n_0 ;
  wire \s_axi_rdata[13]_i_14_n_0 ;
  wire \s_axi_rdata[13]_i_15_n_0 ;
  wire \s_axi_rdata[13]_i_16_n_0 ;
  wire \s_axi_rdata[13]_i_3_n_0 ;
  wire \s_axi_rdata[13]_i_4_n_0 ;
  wire \s_axi_rdata[13]_i_5_n_0 ;
  wire \s_axi_rdata[13]_i_6_n_0 ;
  wire \s_axi_rdata[13]_i_8_n_0 ;
  wire \s_axi_rdata[13]_i_9_n_0 ;
  wire \s_axi_rdata[14]_i_10_n_0 ;
  wire \s_axi_rdata[14]_i_11_n_0 ;
  wire \s_axi_rdata[14]_i_3_n_0 ;
  wire \s_axi_rdata[14]_i_4_n_0 ;
  wire \s_axi_rdata[14]_i_5_n_0 ;
  wire \s_axi_rdata[14]_i_7_n_0 ;
  wire \s_axi_rdata[14]_i_8_n_0 ;
  wire \s_axi_rdata[14]_i_9_n_0 ;
  wire \s_axi_rdata[15]_i_10_n_0 ;
  wire \s_axi_rdata[15]_i_11_n_0 ;
  wire \s_axi_rdata[15]_i_12_n_0 ;
  wire \s_axi_rdata[15]_i_13_n_0 ;
  wire \s_axi_rdata[15]_i_15_n_0 ;
  wire \s_axi_rdata[15]_i_3_n_0 ;
  wire \s_axi_rdata[15]_i_4_n_0 ;
  wire \s_axi_rdata[15]_i_5_n_0 ;
  wire \s_axi_rdata[15]_i_7_n_0 ;
  wire \s_axi_rdata[15]_i_8_n_0 ;
  wire \s_axi_rdata[15]_i_9_n_0 ;
  wire \s_axi_rdata[16]_i_2_n_0 ;
  wire \s_axi_rdata[16]_i_3_n_0 ;
  wire \s_axi_rdata[16]_i_4_n_0 ;
  wire \s_axi_rdata[17]_i_2_n_0 ;
  wire \s_axi_rdata[17]_i_3_n_0 ;
  wire \s_axi_rdata[17]_i_4_n_0 ;
  wire \s_axi_rdata[18]_i_2_n_0 ;
  wire \s_axi_rdata[18]_i_3_n_0 ;
  wire \s_axi_rdata[18]_i_4_n_0 ;
  wire \s_axi_rdata[19]_i_2_n_0 ;
  wire \s_axi_rdata[19]_i_3_n_0 ;
  wire \s_axi_rdata[1]_i_10_n_0 ;
  wire \s_axi_rdata[1]_i_12_n_0 ;
  wire \s_axi_rdata[1]_i_13_n_0 ;
  wire \s_axi_rdata[1]_i_14_n_0 ;
  wire \s_axi_rdata[1]_i_15_n_0 ;
  wire \s_axi_rdata[1]_i_16_n_0 ;
  wire \s_axi_rdata[1]_i_17_n_0 ;
  wire \s_axi_rdata[1]_i_18_n_0 ;
  wire \s_axi_rdata[1]_i_19_n_0 ;
  wire \s_axi_rdata[1]_i_20_n_0 ;
  wire \s_axi_rdata[1]_i_21_n_0 ;
  wire \s_axi_rdata[1]_i_22_n_0 ;
  wire \s_axi_rdata[1]_i_2_n_0 ;
  wire \s_axi_rdata[1]_i_3_n_0 ;
  wire \s_axi_rdata[1]_i_5_n_0 ;
  wire \s_axi_rdata[1]_i_6_n_0 ;
  wire \s_axi_rdata[1]_i_7_n_0 ;
  wire \s_axi_rdata[1]_i_8_n_0 ;
  wire \s_axi_rdata[1]_i_9_n_0 ;
  wire \s_axi_rdata[20]_i_2_n_0 ;
  wire \s_axi_rdata[20]_i_3_n_0 ;
  wire \s_axi_rdata[20]_i_4_n_0 ;
  wire \s_axi_rdata[21]_i_2_n_0 ;
  wire \s_axi_rdata[21]_i_3_n_0 ;
  wire \s_axi_rdata[21]_i_4_n_0 ;
  wire \s_axi_rdata[22]_i_2_n_0 ;
  wire \s_axi_rdata[22]_i_3_n_0 ;
  wire \s_axi_rdata[22]_i_4_n_0 ;
  wire \s_axi_rdata[22]_i_7_n_0 ;
  wire \s_axi_rdata[23]_i_2_n_0 ;
  wire \s_axi_rdata[23]_i_5_n_0 ;
  wire \s_axi_rdata[23]_i_6_n_0 ;
  wire \s_axi_rdata[24]_i_2_n_0 ;
  wire \s_axi_rdata[24]_i_3_n_0 ;
  wire \s_axi_rdata[25]_i_2_n_0 ;
  wire \s_axi_rdata[25]_i_3_n_0 ;
  wire \s_axi_rdata[25]_i_4_n_0 ;
  wire \s_axi_rdata[25]_i_5_n_0 ;
  wire \s_axi_rdata[26]_i_1_n_0 ;
  wire \s_axi_rdata[26]_i_2_n_0 ;
  wire \s_axi_rdata[26]_i_3_n_0 ;
  wire \s_axi_rdata[27]_i_1_n_0 ;
  wire \s_axi_rdata[27]_i_2_n_0 ;
  wire \s_axi_rdata[27]_i_3_n_0 ;
  wire \s_axi_rdata[28]_i_1_n_0 ;
  wire \s_axi_rdata[28]_i_2_n_0 ;
  wire \s_axi_rdata[28]_i_3_n_0 ;
  wire \s_axi_rdata[28]_i_4_n_0 ;
  wire \s_axi_rdata[29]_i_100_n_0 ;
  wire \s_axi_rdata[29]_i_101_n_0 ;
  wire \s_axi_rdata[29]_i_10_n_0 ;
  wire \s_axi_rdata[29]_i_11_n_0 ;
  wire \s_axi_rdata[29]_i_12_n_0 ;
  wire \s_axi_rdata[29]_i_13_n_0 ;
  wire \s_axi_rdata[29]_i_14_n_0 ;
  wire \s_axi_rdata[29]_i_15_n_0 ;
  wire \s_axi_rdata[29]_i_16_n_0 ;
  wire \s_axi_rdata[29]_i_17_n_0 ;
  wire \s_axi_rdata[29]_i_18_n_0 ;
  wire \s_axi_rdata[29]_i_19_n_0 ;
  wire \s_axi_rdata[29]_i_1_n_0 ;
  wire \s_axi_rdata[29]_i_20_n_0 ;
  wire \s_axi_rdata[29]_i_21_n_0 ;
  wire \s_axi_rdata[29]_i_22_n_0 ;
  wire \s_axi_rdata[29]_i_23_n_0 ;
  wire \s_axi_rdata[29]_i_24_n_0 ;
  wire \s_axi_rdata[29]_i_25_n_0 ;
  wire \s_axi_rdata[29]_i_26_n_0 ;
  wire \s_axi_rdata[29]_i_27_n_0 ;
  wire \s_axi_rdata[29]_i_28_n_0 ;
  wire \s_axi_rdata[29]_i_29_n_0 ;
  wire \s_axi_rdata[29]_i_2_n_0 ;
  wire \s_axi_rdata[29]_i_30_n_0 ;
  wire \s_axi_rdata[29]_i_31_n_0 ;
  wire \s_axi_rdata[29]_i_32_n_0 ;
  wire \s_axi_rdata[29]_i_33_n_0 ;
  wire \s_axi_rdata[29]_i_34_n_0 ;
  wire \s_axi_rdata[29]_i_35_n_0 ;
  wire \s_axi_rdata[29]_i_36_n_0 ;
  wire \s_axi_rdata[29]_i_37_n_0 ;
  wire \s_axi_rdata[29]_i_42_n_0 ;
  wire \s_axi_rdata[29]_i_43_n_0 ;
  wire \s_axi_rdata[29]_i_44_n_0 ;
  wire \s_axi_rdata[29]_i_45_n_0 ;
  wire \s_axi_rdata[29]_i_46_n_0 ;
  wire \s_axi_rdata[29]_i_47_n_0 ;
  wire \s_axi_rdata[29]_i_48_n_0 ;
  wire \s_axi_rdata[29]_i_49_n_0 ;
  wire \s_axi_rdata[29]_i_4_n_0 ;
  wire \s_axi_rdata[29]_i_50_n_0 ;
  wire \s_axi_rdata[29]_i_51_n_0 ;
  wire \s_axi_rdata[29]_i_52_n_0 ;
  wire \s_axi_rdata[29]_i_53_n_0 ;
  wire \s_axi_rdata[29]_i_54_n_0 ;
  wire \s_axi_rdata[29]_i_55_n_0 ;
  wire \s_axi_rdata[29]_i_56_n_0 ;
  wire \s_axi_rdata[29]_i_57_n_0 ;
  wire \s_axi_rdata[29]_i_58_n_0 ;
  wire \s_axi_rdata[29]_i_59_n_0 ;
  wire \s_axi_rdata[29]_i_5_n_0 ;
  wire \s_axi_rdata[29]_i_60_n_0 ;
  wire \s_axi_rdata[29]_i_61_n_0 ;
  wire \s_axi_rdata[29]_i_62_n_0 ;
  wire \s_axi_rdata[29]_i_63_n_0 ;
  wire \s_axi_rdata[29]_i_64_n_0 ;
  wire \s_axi_rdata[29]_i_65_n_0 ;
  wire \s_axi_rdata[29]_i_66_n_0 ;
  wire \s_axi_rdata[29]_i_67_n_0 ;
  wire \s_axi_rdata[29]_i_68_n_0 ;
  wire \s_axi_rdata[29]_i_69_n_0 ;
  wire \s_axi_rdata[29]_i_70_n_0 ;
  wire \s_axi_rdata[29]_i_71_n_0 ;
  wire \s_axi_rdata[29]_i_72_n_0 ;
  wire \s_axi_rdata[29]_i_73_n_0 ;
  wire \s_axi_rdata[29]_i_74_n_0 ;
  wire \s_axi_rdata[29]_i_75_n_0 ;
  wire \s_axi_rdata[29]_i_76_n_0 ;
  wire \s_axi_rdata[29]_i_77_n_0 ;
  wire \s_axi_rdata[29]_i_78_n_0 ;
  wire \s_axi_rdata[29]_i_79_n_0 ;
  wire \s_axi_rdata[29]_i_7_n_0 ;
  wire \s_axi_rdata[29]_i_80_n_0 ;
  wire \s_axi_rdata[29]_i_81_n_0 ;
  wire \s_axi_rdata[29]_i_82_n_0 ;
  wire \s_axi_rdata[29]_i_83_n_0 ;
  wire \s_axi_rdata[29]_i_84_n_0 ;
  wire \s_axi_rdata[29]_i_85_n_0 ;
  wire \s_axi_rdata[29]_i_86_n_0 ;
  wire \s_axi_rdata[29]_i_87_n_0 ;
  wire \s_axi_rdata[29]_i_88_n_0 ;
  wire \s_axi_rdata[29]_i_89_n_0 ;
  wire \s_axi_rdata[29]_i_8_n_0 ;
  wire \s_axi_rdata[29]_i_90_n_0 ;
  wire \s_axi_rdata[29]_i_91_n_0 ;
  wire \s_axi_rdata[29]_i_92_n_0 ;
  wire \s_axi_rdata[29]_i_93_n_0 ;
  wire \s_axi_rdata[29]_i_94_n_0 ;
  wire \s_axi_rdata[29]_i_95_n_0 ;
  wire \s_axi_rdata[29]_i_96_n_0 ;
  wire \s_axi_rdata[29]_i_97_n_0 ;
  wire \s_axi_rdata[29]_i_98_n_0 ;
  wire \s_axi_rdata[29]_i_99_n_0 ;
  wire \s_axi_rdata[29]_i_9_n_0 ;
  wire \s_axi_rdata[2]_i_10_n_0 ;
  wire \s_axi_rdata[2]_i_11_n_0 ;
  wire \s_axi_rdata[2]_i_12_n_0 ;
  wire \s_axi_rdata[2]_i_15_n_0 ;
  wire \s_axi_rdata[2]_i_16_n_0 ;
  wire \s_axi_rdata[2]_i_17_n_0 ;
  wire \s_axi_rdata[2]_i_18_n_0 ;
  wire \s_axi_rdata[2]_i_19_n_0 ;
  wire \s_axi_rdata[2]_i_20_n_0 ;
  wire \s_axi_rdata[2]_i_2_n_0 ;
  wire \s_axi_rdata[2]_i_3_n_0 ;
  wire \s_axi_rdata[2]_i_6_n_0 ;
  wire \s_axi_rdata[2]_i_7_n_0 ;
  wire \s_axi_rdata[2]_i_8_n_0 ;
  wire \s_axi_rdata[2]_i_9_n_0 ;
  wire \s_axi_rdata[30]_i_1_n_0 ;
  wire \s_axi_rdata[30]_i_2_n_0 ;
  wire \s_axi_rdata[30]_i_3_n_0 ;
  wire \s_axi_rdata[30]_i_4_n_0 ;
  wire \s_axi_rdata[30]_i_5_n_0 ;
  wire \s_axi_rdata[30]_i_6_n_0 ;
  wire \s_axi_rdata[31]_i_1_n_0 ;
  wire \s_axi_rdata[31]_i_2_n_0 ;
  wire \s_axi_rdata[31]_i_4_n_0 ;
  wire \s_axi_rdata[31]_i_5_n_0 ;
  wire \s_axi_rdata[31]_i_6_n_0 ;
  wire \s_axi_rdata[31]_i_7_n_0 ;
  wire \s_axi_rdata[3]_i_10_n_0 ;
  wire \s_axi_rdata[3]_i_11_n_0 ;
  wire \s_axi_rdata[3]_i_12_n_0 ;
  wire \s_axi_rdata[3]_i_13_n_0 ;
  wire \s_axi_rdata[3]_i_14_n_0 ;
  wire \s_axi_rdata[3]_i_15_n_0 ;
  wire \s_axi_rdata[3]_i_16_n_0 ;
  wire \s_axi_rdata[3]_i_18_n_0 ;
  wire \s_axi_rdata[3]_i_19_n_0 ;
  wire \s_axi_rdata[3]_i_20_n_0 ;
  wire \s_axi_rdata[3]_i_21_n_0 ;
  wire \s_axi_rdata[3]_i_22_n_0 ;
  wire \s_axi_rdata[3]_i_23_n_0 ;
  wire \s_axi_rdata[3]_i_2_n_0 ;
  wire \s_axi_rdata[3]_i_3_n_0 ;
  wire \s_axi_rdata[3]_i_4_n_0 ;
  wire \s_axi_rdata[3]_i_5_n_0 ;
  wire \s_axi_rdata[3]_i_7_n_0 ;
  wire \s_axi_rdata[3]_i_8_n_0 ;
  wire \s_axi_rdata[3]_i_9_n_0 ;
  wire \s_axi_rdata[4]_i_10_n_0 ;
  wire \s_axi_rdata[4]_i_11_n_0 ;
  wire \s_axi_rdata[4]_i_12_n_0 ;
  wire \s_axi_rdata[4]_i_14_n_0 ;
  wire \s_axi_rdata[4]_i_15_n_0 ;
  wire \s_axi_rdata[4]_i_16_n_0 ;
  wire \s_axi_rdata[4]_i_17_n_0 ;
  wire \s_axi_rdata[4]_i_18_n_0 ;
  wire \s_axi_rdata[4]_i_19_n_0 ;
  wire \s_axi_rdata[4]_i_20_n_0 ;
  wire \s_axi_rdata[4]_i_21_n_0 ;
  wire \s_axi_rdata[4]_i_2_n_0 ;
  wire \s_axi_rdata[4]_i_3_n_0 ;
  wire \s_axi_rdata[4]_i_5_n_0 ;
  wire \s_axi_rdata[4]_i_6_n_0 ;
  wire \s_axi_rdata[4]_i_7_n_0 ;
  wire \s_axi_rdata[4]_i_8_n_0 ;
  wire \s_axi_rdata[4]_i_9_n_0 ;
  wire \s_axi_rdata[5]_i_10_n_0 ;
  wire \s_axi_rdata[5]_i_11_n_0 ;
  wire \s_axi_rdata[5]_i_12_n_0 ;
  wire \s_axi_rdata[5]_i_14_n_0 ;
  wire \s_axi_rdata[5]_i_15_n_0 ;
  wire \s_axi_rdata[5]_i_16_n_0 ;
  wire \s_axi_rdata[5]_i_17_n_0 ;
  wire \s_axi_rdata[5]_i_18_n_0 ;
  wire \s_axi_rdata[5]_i_19_n_0 ;
  wire \s_axi_rdata[5]_i_20_n_0 ;
  wire \s_axi_rdata[5]_i_21_n_0 ;
  wire \s_axi_rdata[5]_i_2_n_0 ;
  wire \s_axi_rdata[5]_i_3_n_0 ;
  wire \s_axi_rdata[5]_i_5_n_0 ;
  wire \s_axi_rdata[5]_i_6_n_0 ;
  wire \s_axi_rdata[5]_i_7_n_0 ;
  wire \s_axi_rdata[5]_i_8_n_0 ;
  wire \s_axi_rdata[5]_i_9_n_0 ;
  wire \s_axi_rdata[6]_i_10_n_0 ;
  wire \s_axi_rdata[6]_i_11_n_0 ;
  wire \s_axi_rdata[6]_i_3_n_0 ;
  wire \s_axi_rdata[6]_i_4_n_0 ;
  wire \s_axi_rdata[6]_i_5_n_0 ;
  wire \s_axi_rdata[6]_i_6_n_0 ;
  wire \s_axi_rdata[6]_i_8_n_0 ;
  wire \s_axi_rdata[6]_i_9_n_0 ;
  wire \s_axi_rdata[7]_i_10_n_0 ;
  wire \s_axi_rdata[7]_i_11_n_0 ;
  wire \s_axi_rdata[7]_i_3_n_0 ;
  wire \s_axi_rdata[7]_i_4_n_0 ;
  wire \s_axi_rdata[7]_i_5_n_0 ;
  wire \s_axi_rdata[7]_i_6_n_0 ;
  wire \s_axi_rdata[7]_i_8_n_0 ;
  wire \s_axi_rdata[7]_i_9_n_0 ;
  wire \s_axi_rdata[8]_i_10_n_0 ;
  wire \s_axi_rdata[8]_i_11_n_0 ;
  wire \s_axi_rdata[8]_i_3_n_0 ;
  wire \s_axi_rdata[8]_i_4_n_0 ;
  wire \s_axi_rdata[8]_i_5_n_0 ;
  wire \s_axi_rdata[8]_i_6_n_0 ;
  wire \s_axi_rdata[8]_i_8_n_0 ;
  wire \s_axi_rdata[8]_i_9_n_0 ;
  wire \s_axi_rdata[9]_i_10_n_0 ;
  wire \s_axi_rdata[9]_i_11_n_0 ;
  wire \s_axi_rdata[9]_i_3_n_0 ;
  wire \s_axi_rdata[9]_i_4_n_0 ;
  wire \s_axi_rdata[9]_i_5_n_0 ;
  wire \s_axi_rdata[9]_i_6_n_0 ;
  wire \s_axi_rdata[9]_i_8_n_0 ;
  wire \s_axi_rdata[9]_i_9_n_0 ;
  wire [1:0]\s_axi_rdata_reg[20]_0 ;
  wire \s_axi_rdata_reg[29]_i_38_n_1 ;
  wire \s_axi_rdata_reg[29]_i_38_n_10 ;
  wire \s_axi_rdata_reg[29]_i_38_n_11 ;
  wire \s_axi_rdata_reg[29]_i_38_n_12 ;
  wire \s_axi_rdata_reg[29]_i_38_n_13 ;
  wire \s_axi_rdata_reg[29]_i_38_n_14 ;
  wire \s_axi_rdata_reg[29]_i_38_n_15 ;
  wire \s_axi_rdata_reg[29]_i_38_n_2 ;
  wire \s_axi_rdata_reg[29]_i_38_n_3 ;
  wire \s_axi_rdata_reg[29]_i_38_n_4 ;
  wire \s_axi_rdata_reg[29]_i_38_n_5 ;
  wire \s_axi_rdata_reg[29]_i_38_n_6 ;
  wire \s_axi_rdata_reg[29]_i_38_n_7 ;
  wire \s_axi_rdata_reg[29]_i_38_n_8 ;
  wire \s_axi_rdata_reg[29]_i_38_n_9 ;
  wire \s_axi_rdata_reg[29]_i_39_n_1 ;
  wire \s_axi_rdata_reg[29]_i_39_n_10 ;
  wire \s_axi_rdata_reg[29]_i_39_n_11 ;
  wire \s_axi_rdata_reg[29]_i_39_n_12 ;
  wire \s_axi_rdata_reg[29]_i_39_n_13 ;
  wire \s_axi_rdata_reg[29]_i_39_n_14 ;
  wire \s_axi_rdata_reg[29]_i_39_n_15 ;
  wire \s_axi_rdata_reg[29]_i_39_n_2 ;
  wire \s_axi_rdata_reg[29]_i_39_n_3 ;
  wire \s_axi_rdata_reg[29]_i_39_n_4 ;
  wire \s_axi_rdata_reg[29]_i_39_n_5 ;
  wire \s_axi_rdata_reg[29]_i_39_n_6 ;
  wire \s_axi_rdata_reg[29]_i_39_n_7 ;
  wire \s_axi_rdata_reg[29]_i_39_n_8 ;
  wire \s_axi_rdata_reg[29]_i_39_n_9 ;
  wire \s_axi_rdata_reg[29]_i_3_n_1 ;
  wire \s_axi_rdata_reg[29]_i_3_n_2 ;
  wire \s_axi_rdata_reg[29]_i_3_n_3 ;
  wire \s_axi_rdata_reg[29]_i_3_n_4 ;
  wire \s_axi_rdata_reg[29]_i_3_n_5 ;
  wire \s_axi_rdata_reg[29]_i_3_n_6 ;
  wire \s_axi_rdata_reg[29]_i_3_n_7 ;
  wire \s_axi_rdata_reg[29]_i_40_n_0 ;
  wire \s_axi_rdata_reg[29]_i_40_n_1 ;
  wire \s_axi_rdata_reg[29]_i_40_n_10 ;
  wire \s_axi_rdata_reg[29]_i_40_n_11 ;
  wire \s_axi_rdata_reg[29]_i_40_n_12 ;
  wire \s_axi_rdata_reg[29]_i_40_n_13 ;
  wire \s_axi_rdata_reg[29]_i_40_n_14 ;
  wire \s_axi_rdata_reg[29]_i_40_n_15 ;
  wire \s_axi_rdata_reg[29]_i_40_n_2 ;
  wire \s_axi_rdata_reg[29]_i_40_n_3 ;
  wire \s_axi_rdata_reg[29]_i_40_n_4 ;
  wire \s_axi_rdata_reg[29]_i_40_n_5 ;
  wire \s_axi_rdata_reg[29]_i_40_n_6 ;
  wire \s_axi_rdata_reg[29]_i_40_n_7 ;
  wire \s_axi_rdata_reg[29]_i_40_n_8 ;
  wire \s_axi_rdata_reg[29]_i_40_n_9 ;
  wire \s_axi_rdata_reg[29]_i_41_n_0 ;
  wire \s_axi_rdata_reg[29]_i_41_n_1 ;
  wire \s_axi_rdata_reg[29]_i_41_n_10 ;
  wire \s_axi_rdata_reg[29]_i_41_n_11 ;
  wire \s_axi_rdata_reg[29]_i_41_n_12 ;
  wire \s_axi_rdata_reg[29]_i_41_n_13 ;
  wire \s_axi_rdata_reg[29]_i_41_n_14 ;
  wire \s_axi_rdata_reg[29]_i_41_n_15 ;
  wire \s_axi_rdata_reg[29]_i_41_n_2 ;
  wire \s_axi_rdata_reg[29]_i_41_n_3 ;
  wire \s_axi_rdata_reg[29]_i_41_n_4 ;
  wire \s_axi_rdata_reg[29]_i_41_n_5 ;
  wire \s_axi_rdata_reg[29]_i_41_n_6 ;
  wire \s_axi_rdata_reg[29]_i_41_n_7 ;
  wire \s_axi_rdata_reg[29]_i_41_n_8 ;
  wire \s_axi_rdata_reg[29]_i_41_n_9 ;
  wire \s_axi_rdata_reg[29]_i_6_n_0 ;
  wire \s_axi_rdata_reg[29]_i_6_n_1 ;
  wire \s_axi_rdata_reg[29]_i_6_n_2 ;
  wire \s_axi_rdata_reg[29]_i_6_n_3 ;
  wire \s_axi_rdata_reg[29]_i_6_n_4 ;
  wire \s_axi_rdata_reg[29]_i_6_n_5 ;
  wire \s_axi_rdata_reg[29]_i_6_n_6 ;
  wire \s_axi_rdata_reg[29]_i_6_n_7 ;
  wire \s_axi_rdata_reg[31]_i_3_n_0 ;
  wire s_axi_rready;
  wire s_axi_rvalid_i_1_n_0;
  wire s_axi_rvalid_reg_0;
  wire [25:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [5:0]sel0;
  (* DONT_TOUCH *) wire [3:0]shutdown_i;
  wire soft_rst_d1;
  wire spkt_fifo_dis_done;
  wire spkt_fifo_dis_done_i_1_n_0;
  wire spkt_fifo_dis_done_reg_n_0;
  wire spkt_fifo_rst_ack;
  wire [25:0]\src_hsdata_ff_reg[25] ;
  wire [41:0]src_in;
  wire src_rcv;
  wire src_send;
  wire \syncstages_ff_reg[0] ;
  wire \syncstages_ff_reg[2] ;
  wire [3:0]vc_num;
  wire vcx_err;
  wire wr2_isr1;
  wire wr2_isr2;
  wire \wr_addr[7]_i_1_n_0 ;
  wire wr_en;
  wire wr_req;
  wire wr_req016_out;
  wire xpm_array_single_02_n_0;
  wire xpm_array_single_02_n_1;
  wire [7:6]\NLW_LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_CO_UNCONNECTED ;
  wire [7:7]\NLW_LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_O_UNCONNECTED ;
  wire [7:6]\NLW_LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_CO_UNCONNECTED ;
  wire [7:7]\NLW_LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_O_UNCONNECTED ;
  wire [7:6]\NLW_LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_CO_UNCONNECTED ;
  wire [7:7]\NLW_LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_O_UNCONNECTED ;
  wire [7:6]\NLW_LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_CO_UNCONNECTED ;
  wire [7:7]\NLW_LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_O_UNCONNECTED ;
  wire [7:7]\NLW_s_axi_rdata_reg[29]_i_3_CO_UNCONNECTED ;
  wire [7:7]\NLW_s_axi_rdata_reg[29]_i_38_CO_UNCONNECTED ;
  wire [7:7]\NLW_s_axi_rdata_reg[29]_i_39_CO_UNCONNECTED ;
  wire [45:0]NLW_xpm_array_single_01_dest_out_UNCONNECTED;
  wire NLW_xpm_single_01_dest_out_UNCONNECTED;
  wire NLW_xpm_single_05_dest_out_UNCONNECTED;
  wire NLW_xpm_single_18_dest_out_UNCONNECTED;
  wire NLW_xpm_single_19_dest_out_UNCONNECTED;
  wire NLW_xpm_single_20_dest_out_UNCONNECTED;

  assign cl_enable = cl_enable_i;
  assign out[3:0] = shutdown_i;
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_cur_state[2]_i_1 
       (.I0(dest_out),
        .I1(m_axis_aresetn),
        .O(\syncstages_ff_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    \LINE_BUF_WR_64.mem_wdata_i[64]_i_4 
       (.I0(m_axis_aresetn),
        .I1(dest_out),
        .I2(end_mem_wr2),
        .O(m_axis_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \LP_CNTS[0].lp_data[0]_i_1 
       (.I0(m_axis_aresetn),
        .I1(dest_out),
        .I2(full),
        .O(lp_data));
  LUT1 #(
    .INIT(2'h1)) 
    \LP_CNT_C2R[0].lp_count[0][0]_i_1 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .O(p_0_in__3[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNT_C2R[0].lp_count[0][15]_i_1 
       (.I0(reset_released),
        .I1(lp_count_en_c2r_0),
        .O(lp_count_pulse_0));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][0] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[0]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][10] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[10]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][11] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[11]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][12] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[12]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][13] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[13]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][14] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[14]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][15] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[15]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [15]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[0].lp_count_reg[0][15]_i_2 
       (.CI(\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_CO_UNCONNECTED [7:6],\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_2 ,\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_3 ,\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_4 ,\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_5 ,\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_6 ,\LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_LP_CNT_C2R[0].lp_count_reg[0][15]_i_2_O_UNCONNECTED [7],p_0_in__3[15:9]}),
        .S({1'b0,\LP_CNT_C2R[0].lp_count_reg[0]_5 [15:9]}));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][1] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[1]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][2] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[2]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][3] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[3]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][4] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[4]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][5] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[5]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][6] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[6]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][7] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[7]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][8] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[8]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[0].lp_count_reg[0][8]_i_1 
       (.CI(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .CI_TOP(1'b0),
        .CO({\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_0 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_1 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_2 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_3 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_4 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_5 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_6 ,\LP_CNT_C2R[0].lp_count_reg[0][8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__3[8:1]),
        .S(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8:1]));
  FDRE \LP_CNT_C2R[0].lp_count_reg[0][9] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_0),
        .D(p_0_in__3[9]),
        .Q(\LP_CNT_C2R[0].lp_count_reg[0]_5 [9]),
        .R(\core_config_reg[1]_0 ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* RST_USED = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "PULSE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__2 \LP_CNT_C2R[0].xpm_pulse_01 
       (.dest_clk(s_axi_aclk),
        .dest_pulse(lp_count_en_c2r_0),
        .dest_rst(SS),
        .src_clk(m_axis_aclk),
        .src_pulse(lp_count_en[0]),
        .src_rst(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \LP_CNT_C2R[1].lp_count[1][0]_i_1 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .O(p_0_in__2[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNT_C2R[1].lp_count[1][15]_i_1 
       (.I0(reset_released),
        .I1(lp_count_en_c2r_1),
        .O(lp_count_pulse_1));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][0] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[0]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][10] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[10]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][11] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[11]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][12] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[12]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][13] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[13]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][14] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[14]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][15] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[15]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [15]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[1].lp_count_reg[1][15]_i_2 
       (.CI(\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_CO_UNCONNECTED [7:6],\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_2 ,\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_3 ,\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_4 ,\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_5 ,\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_6 ,\LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_LP_CNT_C2R[1].lp_count_reg[1][15]_i_2_O_UNCONNECTED [7],p_0_in__2[15:9]}),
        .S({1'b0,\LP_CNT_C2R[1].lp_count_reg[1]_4 [15:9]}));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][1] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[1]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][2] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[2]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][3] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[3]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][4] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[4]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][5] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[5]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][6] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[6]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][7] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[7]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][8] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[8]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[1].lp_count_reg[1][8]_i_1 
       (.CI(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .CI_TOP(1'b0),
        .CO({\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_0 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_1 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_2 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_3 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_4 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_5 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_6 ,\LP_CNT_C2R[1].lp_count_reg[1][8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__2[8:1]),
        .S(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8:1]));
  FDRE \LP_CNT_C2R[1].lp_count_reg[1][9] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_1),
        .D(p_0_in__2[9]),
        .Q(\LP_CNT_C2R[1].lp_count_reg[1]_4 [9]),
        .R(\core_config_reg[1]_0 ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* RST_USED = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "PULSE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__3 \LP_CNT_C2R[1].xpm_pulse_01 
       (.dest_clk(s_axi_aclk),
        .dest_pulse(lp_count_en_c2r_1),
        .dest_rst(SS),
        .src_clk(m_axis_aclk),
        .src_pulse(lp_count_en[1]),
        .src_rst(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \LP_CNT_C2R[2].lp_count[2][0]_i_1 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .O(p_0_in__1[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNT_C2R[2].lp_count[2][15]_i_1 
       (.I0(reset_released),
        .I1(lp_count_en_c2r_2),
        .O(lp_count_pulse_2));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][0] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[0]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][10] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[10]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][11] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[11]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][12] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[12]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][13] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[13]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][14] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[14]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][15] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[15]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [15]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[2].lp_count_reg[2][15]_i_2 
       (.CI(\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_CO_UNCONNECTED [7:6],\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_2 ,\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_3 ,\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_4 ,\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_5 ,\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_6 ,\LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_LP_CNT_C2R[2].lp_count_reg[2][15]_i_2_O_UNCONNECTED [7],p_0_in__1[15:9]}),
        .S({1'b0,\LP_CNT_C2R[2].lp_count_reg[2]_3 [15:9]}));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][1] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[1]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][2] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[2]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][3] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[3]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][4] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[4]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][5] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[5]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][6] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[6]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][7] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[7]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][8] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[8]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[2].lp_count_reg[2][8]_i_1 
       (.CI(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .CI_TOP(1'b0),
        .CO({\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_0 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_1 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_2 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_3 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_4 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_5 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_6 ,\LP_CNT_C2R[2].lp_count_reg[2][8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__1[8:1]),
        .S(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8:1]));
  FDRE \LP_CNT_C2R[2].lp_count_reg[2][9] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_2),
        .D(p_0_in__1[9]),
        .Q(\LP_CNT_C2R[2].lp_count_reg[2]_3 [9]),
        .R(\core_config_reg[1]_0 ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* RST_USED = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "PULSE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_pulse__xdcDup__4 \LP_CNT_C2R[2].xpm_pulse_01 
       (.dest_clk(s_axi_aclk),
        .dest_pulse(lp_count_en_c2r_2),
        .dest_rst(SS),
        .src_clk(m_axis_aclk),
        .src_pulse(lp_count_en[2]),
        .src_rst(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \LP_CNT_C2R[3].lp_count[3][0]_i_1 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .O(p_0_in__0[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \LP_CNT_C2R[3].lp_count[3][15]_i_1 
       (.I0(reset_released),
        .I1(lp_count_en_c2r_3),
        .O(lp_count_pulse_3));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][0] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[0]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][10] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[10]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][11] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[11]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][12] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[12]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][13] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[13]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][14] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[14]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][15] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[15]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [15]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[3].lp_count_reg[3][15]_i_2 
       (.CI(\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_CO_UNCONNECTED [7:6],\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_2 ,\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_3 ,\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_4 ,\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_5 ,\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_6 ,\LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_LP_CNT_C2R[3].lp_count_reg[3][15]_i_2_O_UNCONNECTED [7],p_0_in__0[15:9]}),
        .S({1'b0,\LP_CNT_C2R[3].lp_count_reg[3]_2 [15:9]}));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][1] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[1]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][2] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[2]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][3] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[3]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][4] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[4]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][5] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[5]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][6] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[6]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][7] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[7]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][8] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[8]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8]),
        .R(\core_config_reg[1]_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \LP_CNT_C2R[3].lp_count_reg[3][8]_i_1 
       (.CI(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .CI_TOP(1'b0),
        .CO({\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_0 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_1 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_2 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_3 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_4 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_5 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_6 ,\LP_CNT_C2R[3].lp_count_reg[3][8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__0[8:1]),
        .S(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8:1]));
  FDRE \LP_CNT_C2R[3].lp_count_reg[3][9] 
       (.C(s_axi_aclk),
        .CE(lp_count_pulse_3),
        .D(p_0_in__0[9]),
        .Q(\LP_CNT_C2R[3].lp_count_reg[3]_2 [9]),
        .R(\core_config_reg[1]_0 ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* REG_OUTPUT = "0" *) 
  (* RST_USED = "1" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "PULSE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_pulse \LP_CNT_C2R[3].xpm_pulse_01 
       (.dest_clk(s_axi_aclk),
        .dest_pulse(lp_count_en_c2r_3),
        .dest_rst(SS),
        .src_clk(m_axis_aclk),
        .src_pulse(lp_count_en[3]),
        .src_rst(SR));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAEAA)) 
    \LX_INFO_GEN[0].lx_info[0][5]_i_1 
       (.I0(\core_config_reg[1]_0 ),
        .I1(\core_config[1]_i_2_n_0 ),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[4]),
        .I5(p_0_in[5]),
        .O(lx_info));
  FDRE \LX_INFO_GEN[0].lx_info_reg[0][2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[0]),
        .Q(\LX_INFO_GEN[0].lx_info_reg[0]_0 [2]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[0].lx_info_reg[0][3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[1]),
        .Q(\LX_INFO_GEN[0].lx_info_reg[0]_0 [3]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[0].lx_info_reg[0][4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[2]),
        .Q(\LX_INFO_GEN[0].lx_info_reg[0]_0 [4]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[0].lx_info_reg[0][5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[3]),
        .Q(\LX_INFO_GEN[0].lx_info_reg[0]_0 [5]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[1].lx_info_reg[1][2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[4]),
        .Q(\LX_INFO_GEN[1].lx_info_reg[1]_1 [2]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[1].lx_info_reg[1][3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[5]),
        .Q(\LX_INFO_GEN[1].lx_info_reg[1]_1 [3]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[1].lx_info_reg[1][4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[6]),
        .Q(\LX_INFO_GEN[1].lx_info_reg[1]_1 [4]),
        .R(lx_info));
  FDRE \LX_INFO_GEN[1].lx_info_reg[1][5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(lx_info_all[7]),
        .Q(\LX_INFO_GEN[1].lx_info_reg[1]_1 [5]),
        .R(lx_info));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE \SD_INV_1.cl_enable_i_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SD_INV_1.shutdown_i[3]_i_1_n_0 ),
        .Q(cl_enable_i),
        .S(SS));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \SD_INV_1.shutdown_i[3]_i_1 
       (.I0(\core_config_reg_n_0_[0] ),
        .I1(pkt_dis_done),
        .O(\SD_INV_1.shutdown_i[3]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE \SD_INV_1.shutdown_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SD_INV_1.shutdown_i[3]_i_1_n_0 ),
        .Q(shutdown_i[0]),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE \SD_INV_1.shutdown_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SD_INV_1.shutdown_i[3]_i_1_n_0 ),
        .Q(shutdown_i[1]),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE \SD_INV_1.shutdown_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SD_INV_1.shutdown_i[3]_i_1_n_0 ),
        .Q(shutdown_i[2]),
        .S(SS));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDSE \SD_INV_1.shutdown_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\SD_INV_1.shutdown_i[3]_i_1_n_0 ),
        .Q(shutdown_i[3]),
        .S(SS));
  FDPE \active_lanes_reg[0] 
       (.C(dl0_rxbyteclkhs),
        .CE(l0_ppiclk_ss1),
        .D(active_lanes_r2p[0]),
        .PRE(\active_lanes_reg[1]_0 ),
        .Q(\active_lanes_reg_n_0_[0] ));
  FDCE \active_lanes_reg[1] 
       (.C(dl0_rxbyteclkhs),
        .CE(l0_ppiclk_ss1),
        .CLR(\active_lanes_reg[1]_0 ),
        .D(active_lanes_r2p[1]),
        .Q(\active_lanes_reg_n_0_[1] ));
  FDRE cl_info_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(cl_info_reg_0),
        .Q(data9),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \core_config[1]_i_1 
       (.I0(p_0_in[5]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(\core_config[1]_i_2_n_0 ),
        .O(\core_config[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h00001000)) 
    \core_config[1]_i_2 
       (.I0(p_0_in[1]),
        .I1(s_axi_bvalid_reg_0),
        .I2(wr_req),
        .I3(s_axi_wvalid),
        .I4(p_0_in[2]),
        .O(\core_config[1]_i_2_n_0 ));
  FDSE \core_config_reg[0] 
       (.C(s_axi_aclk),
        .CE(\core_config[1]_i_1_n_0 ),
        .D(s_axi_wdata[0]),
        .Q(\core_config_reg_n_0_[0] ),
        .S(SS));
  FDRE \core_config_reg[1] 
       (.C(s_axi_aclk),
        .CE(\core_config[1]_i_1_n_0 ),
        .D(s_axi_wdata[1]),
        .Q(Q),
        .R(SS));
  FDRE core_en_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\core_config_reg_n_0_[0] ),
        .Q(core_en_d1),
        .R(SS));
  LUT3 #(
    .INIT(8'h2F)) 
    data_dis_done_i_1
       (.I0(\core_config_reg_n_0_[0] ),
        .I1(Q),
        .I2(s_axi_aresetn),
        .O(spkt_fifo_dis_done));
  LUT2 #(
    .INIT(4'hE)) 
    data_dis_done_i_2
       (.I0(data_shutdown_c2r),
        .I1(data_dis_done),
        .O(data_dis_done_i_2_n_0));
  FDRE data_dis_done_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(data_dis_done_i_2_n_0),
        .Q(data_dis_done),
        .R(spkt_fifo_dis_done));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT5 #(
    .INIT(32'hFFFF22F2)) 
    disable_in_progress_d1_i_1
       (.I0(core_en_d1),
        .I1(\core_config_reg_n_0_[0] ),
        .I2(Q),
        .I3(soft_rst_d1),
        .I4(disable_in_progress_d1_i_2_n_0),
        .O(disable_in_progress));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h2AAA)) 
    disable_in_progress_d1_i_2
       (.I0(disable_in_progress_d1),
        .I1(spkt_fifo_dis_done_reg_n_0),
        .I2(data_dis_done),
        .I3(pkt_dis_done),
        .O(disable_in_progress_d1_i_2_n_0));
  FDRE disable_in_progress_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(disable_in_progress),
        .Q(disable_in_progress_d1),
        .R(SS));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_gen_spkt_fifo gen_spkt_fifo
       (.D(D[0]),
        .Q({ier[30],ier[19]}),
        .dest_out(dest_out),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ),
        .\gen_rd_b.doutb_reg_reg[15] (\src_hsdata_ff_reg[25] ),
        .\gen_rd_b.doutb_reg_reg[25] ({gen_spkt_fifo_n_3,gen_spkt_fifo_n_4,gen_spkt_fifo_n_5,gen_spkt_fifo_n_6,gen_spkt_fifo_n_7,gen_spkt_fifo_n_8,gen_spkt_fifo_n_9,gen_spkt_fifo_n_10,gen_spkt_fifo_n_11,gen_spkt_fifo_n_12,gen_spkt_fifo_n_13,gen_spkt_fifo_n_14,gen_spkt_fifo_n_15,gen_spkt_fifo_n_16,gen_spkt_fifo_n_17,gen_spkt_fifo_n_18,gen_spkt_fifo_n_19,gen_spkt_fifo_n_20,gen_spkt_fifo_n_21,gen_spkt_fifo_n_22,gen_spkt_fifo_n_23,gen_spkt_fifo_n_24,gen_spkt_fifo_n_25,gen_spkt_fifo_n_26,gen_spkt_fifo_n_27,gen_spkt_fifo_n_28}),
        .interrupt(interrupt),
        .interrupt_0(interrupt_INST_0_i_1_n_0),
        .interrupt_1(interrupt_INST_0_i_4_n_0),
        .interrupt_2(\gie_reg_n_0_[0] ),
        .interrupt_3(interrupt_INST_0_i_16_n_0),
        .interrupt_4(interrupt_INST_0_i_17_n_0),
        .interrupt_5(interrupt_2),
        .interrupt_6(interrupt_INST_0_i_19_n_0),
        .interrupt_7(interrupt_INST_0_i_20_n_0),
        .\isr_i_reg[43] (wr2_isr1),
        .\isr_i_reg[43]_0 (interrupt_0[12]),
        .lp_count_all(lp_count_all[9:0]),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .rd_req(rd_req),
        .reset_released(reset_released),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_arvalid(s_axi_arvalid),
        .\s_axi_rdata[13]_i_2_0 (\s_axi_rdata[13]_i_15_n_0 ),
        .\s_axi_rdata[15]_i_2_0 (img_info1_vc10),
        .\s_axi_rdata[1]_i_4_0 ({\img_info2_vc10_reg_n_0_[1] ,\img_info2_vc10_reg_n_0_[0] }),
        .\s_axi_rdata[2]_i_4_0 (img_info1_vc6[2]),
        .\s_axi_rdata[2]_i_4_1 (\img_info2_vc6_reg_n_0_[2] ),
        .\s_axi_rdata[2]_i_5_0 (\s_axi_rdata[2]_i_20_n_0 ),
        .\s_axi_rdata[3]_i_6_0 (\s_axi_rdata[3]_i_23_n_0 ),
        .\s_axi_rdata_reg[0] (sel0),
        .\s_axi_rdata_reg[0]_0 (\s_axi_rdata[0]_i_2_n_0 ),
        .\s_axi_rdata_reg[0]_1 (\s_axi_rdata[0]_i_3_n_0 ),
        .\s_axi_rdata_reg[0]_2 (\s_axi_rdata[0]_i_4_n_0 ),
        .\s_axi_rdata_reg[0]_3 (\s_axi_rdata[0]_i_6_n_0 ),
        .\s_axi_rdata_reg[10] (\s_axi_rdata[10]_i_3_n_0 ),
        .\s_axi_rdata_reg[10]_0 (\s_axi_rdata[10]_i_4_n_0 ),
        .\s_axi_rdata_reg[10]_1 (\s_axi_rdata[10]_i_5_n_0 ),
        .\s_axi_rdata_reg[10]_2 (\s_axi_rdata[10]_i_7_n_0 ),
        .\s_axi_rdata_reg[11] (\s_axi_rdata[11]_i_3_n_0 ),
        .\s_axi_rdata_reg[11]_0 (\s_axi_rdata[11]_i_4_n_0 ),
        .\s_axi_rdata_reg[11]_1 (\s_axi_rdata[11]_i_5_n_0 ),
        .\s_axi_rdata_reg[11]_2 (\s_axi_rdata[11]_i_7_n_0 ),
        .\s_axi_rdata_reg[12] (\s_axi_rdata[12]_i_3_n_0 ),
        .\s_axi_rdata_reg[12]_0 (\s_axi_rdata[12]_i_4_n_0 ),
        .\s_axi_rdata_reg[12]_1 (\s_axi_rdata[12]_i_5_n_0 ),
        .\s_axi_rdata_reg[12]_2 (\s_axi_rdata[12]_i_6_n_0 ),
        .\s_axi_rdata_reg[12]_3 (\s_axi_rdata[12]_i_8_n_0 ),
        .\s_axi_rdata_reg[13] (\s_axi_rdata[13]_i_3_n_0 ),
        .\s_axi_rdata_reg[13]_0 (\s_axi_rdata[13]_i_4_n_0 ),
        .\s_axi_rdata_reg[13]_1 (\s_axi_rdata[13]_i_5_n_0 ),
        .\s_axi_rdata_reg[13]_2 (\s_axi_rdata[13]_i_6_n_0 ),
        .\s_axi_rdata_reg[13]_3 (\s_axi_rdata[13]_i_9_n_0 ),
        .\s_axi_rdata_reg[14] (\s_axi_rdata[14]_i_3_n_0 ),
        .\s_axi_rdata_reg[14]_0 (\s_axi_rdata[14]_i_4_n_0 ),
        .\s_axi_rdata_reg[14]_1 (\s_axi_rdata[14]_i_5_n_0 ),
        .\s_axi_rdata_reg[14]_2 (\s_axi_rdata[14]_i_7_n_0 ),
        .\s_axi_rdata_reg[15] (\s_axi_rdata[15]_i_3_n_0 ),
        .\s_axi_rdata_reg[15]_0 (\s_axi_rdata[15]_i_4_n_0 ),
        .\s_axi_rdata_reg[15]_1 (\s_axi_rdata[15]_i_5_n_0 ),
        .\s_axi_rdata_reg[15]_2 ({img_info1_vc11[15:2],img_info1_vc11[0]}),
        .\s_axi_rdata_reg[15]_3 (\s_axi_rdata[15]_i_8_n_0 ),
        .\s_axi_rdata_reg[16] (\s_axi_rdata[16]_i_2_n_0 ),
        .\s_axi_rdata_reg[16]_0 (\s_axi_rdata[16]_i_3_n_0 ),
        .\s_axi_rdata_reg[16]_1 (\s_axi_rdata[16]_i_4_n_0 ),
        .\s_axi_rdata_reg[16]_2 (\s_axi_rdata[22]_i_7_n_0 ),
        .\s_axi_rdata_reg[17] (\s_axi_rdata[17]_i_2_n_0 ),
        .\s_axi_rdata_reg[17]_0 (\s_axi_rdata[17]_i_3_n_0 ),
        .\s_axi_rdata_reg[17]_1 (\s_axi_rdata[17]_i_4_n_0 ),
        .\s_axi_rdata_reg[18] (\s_axi_rdata[18]_i_2_n_0 ),
        .\s_axi_rdata_reg[18]_0 (\s_axi_rdata[18]_i_3_n_0 ),
        .\s_axi_rdata_reg[18]_1 (\s_axi_rdata[18]_i_4_n_0 ),
        .\s_axi_rdata_reg[19] (\s_axi_rdata[19]_i_2_n_0 ),
        .\s_axi_rdata_reg[19]_0 (\s_axi_rdata[19]_i_3_n_0 ),
        .\s_axi_rdata_reg[19]_1 (Q),
        .\s_axi_rdata_reg[19]_2 (\s_axi_rdata[30]_i_5_n_0 ),
        .\s_axi_rdata_reg[19]_3 (\s_axi_rdata[29]_i_4_n_0 ),
        .\s_axi_rdata_reg[1] (\s_axi_rdata[1]_i_2_n_0 ),
        .\s_axi_rdata_reg[1]_0 (\s_axi_rdata[1]_i_3_n_0 ),
        .\s_axi_rdata_reg[1]_1 (\s_axi_rdata[1]_i_5_n_0 ),
        .\s_axi_rdata_reg[1]_2 (\s_axi_rdata[1]_i_10_n_0 ),
        .\s_axi_rdata_reg[1]_3 (\s_axi_rdata[1]_i_12_n_0 ),
        .\s_axi_rdata_reg[20] (\s_axi_rdata[20]_i_2_n_0 ),
        .\s_axi_rdata_reg[20]_0 (\s_axi_rdata[20]_i_3_n_0 ),
        .\s_axi_rdata_reg[20]_1 (\s_axi_rdata[20]_i_4_n_0 ),
        .\s_axi_rdata_reg[21] (\s_axi_rdata[21]_i_2_n_0 ),
        .\s_axi_rdata_reg[21]_0 (\s_axi_rdata[21]_i_3_n_0 ),
        .\s_axi_rdata_reg[21]_1 (\s_axi_rdata[21]_i_4_n_0 ),
        .\s_axi_rdata_reg[22] (\s_axi_rdata[22]_i_2_n_0 ),
        .\s_axi_rdata_reg[22]_0 (\s_axi_rdata[22]_i_3_n_0 ),
        .\s_axi_rdata_reg[22]_1 (\s_axi_rdata[22]_i_4_n_0 ),
        .\s_axi_rdata_reg[23] (interrupt_1[26:7]),
        .\s_axi_rdata_reg[23]_0 (\s_axi_rdata[25]_i_2_n_0 ),
        .\s_axi_rdata_reg[23]_1 (\s_axi_rdata[23]_i_2_n_0 ),
        .\s_axi_rdata_reg[23]_2 (\s_axi_rdata[23]_i_5_n_0 ),
        .\s_axi_rdata_reg[23]_3 (\s_axi_rdata[30]_i_6_n_0 ),
        .\s_axi_rdata_reg[24] (\s_axi_rdata[28]_i_4_n_0 ),
        .\s_axi_rdata_reg[24]_0 (\s_axi_rdata[25]_i_3_n_0 ),
        .\s_axi_rdata_reg[24]_1 (\s_axi_rdata[24]_i_2_n_0 ),
        .\s_axi_rdata_reg[25] (\s_axi_rdata[25]_i_4_n_0 ),
        .\s_axi_rdata_reg[2] (\s_axi_rdata[2]_i_2_n_0 ),
        .\s_axi_rdata_reg[2]_0 (\s_axi_rdata[2]_i_3_n_0 ),
        .\s_axi_rdata_reg[2]_1 (\s_axi_rdata[3]_i_4_n_0 ),
        .\s_axi_rdata_reg[2]_2 (\s_axi_rdata[3]_i_15_n_0 ),
        .\s_axi_rdata_reg[2]_3 (\s_axi_rdata[3]_i_16_n_0 ),
        .\s_axi_rdata_reg[2]_4 (img_info1_vc7[2]),
        .\s_axi_rdata_reg[2]_5 (\img_info2_vc7_reg_n_0_[2] ),
        .\s_axi_rdata_reg[3] (\s_axi_rdata[3]_i_2_n_0 ),
        .\s_axi_rdata_reg[3]_0 (\s_axi_rdata[3]_i_3_n_0 ),
        .\s_axi_rdata_reg[3]_1 (\s_axi_rdata[3]_i_5_n_0 ),
        .\s_axi_rdata_reg[3]_2 ({\img_info2_vc11_reg_n_0_[3] ,\img_info2_vc11_reg_n_0_[2] ,\img_info2_vc11_reg_n_0_[0] }),
        .\s_axi_rdata_reg[4] (\s_axi_rdata[4]_i_2_n_0 ),
        .\s_axi_rdata_reg[4]_0 (\s_axi_rdata[4]_i_3_n_0 ),
        .\s_axi_rdata_reg[4]_1 (\s_axi_rdata[4]_i_14_n_0 ),
        .\s_axi_rdata_reg[4]_2 (\s_axi_rdata[15]_i_7_n_0 ),
        .\s_axi_rdata_reg[4]_3 (\s_axi_rdata[4]_i_15_n_0 ),
        .\s_axi_rdata_reg[5] (\s_axi_rdata[5]_i_2_n_0 ),
        .\s_axi_rdata_reg[5]_0 (\s_axi_rdata[5]_i_3_n_0 ),
        .\s_axi_rdata_reg[5]_1 (\s_axi_rdata[5]_i_14_n_0 ),
        .\s_axi_rdata_reg[5]_2 (\s_axi_rdata[5]_i_15_n_0 ),
        .\s_axi_rdata_reg[6] (\s_axi_rdata[6]_i_3_n_0 ),
        .\s_axi_rdata_reg[6]_0 (\s_axi_rdata[6]_i_4_n_0 ),
        .\s_axi_rdata_reg[6]_1 (\s_axi_rdata[6]_i_5_n_0 ),
        .\s_axi_rdata_reg[6]_2 (\s_axi_rdata[6]_i_6_n_0 ),
        .\s_axi_rdata_reg[6]_3 (\s_axi_rdata[13]_i_8_n_0 ),
        .\s_axi_rdata_reg[6]_4 (\s_axi_rdata[6]_i_8_n_0 ),
        .\s_axi_rdata_reg[7] (\s_axi_rdata[7]_i_3_n_0 ),
        .\s_axi_rdata_reg[7]_0 (\s_axi_rdata[7]_i_4_n_0 ),
        .\s_axi_rdata_reg[7]_1 (\s_axi_rdata[7]_i_5_n_0 ),
        .\s_axi_rdata_reg[7]_2 (\s_axi_rdata[7]_i_6_n_0 ),
        .\s_axi_rdata_reg[7]_3 (\s_axi_rdata[7]_i_8_n_0 ),
        .\s_axi_rdata_reg[8] (\s_axi_rdata[8]_i_3_n_0 ),
        .\s_axi_rdata_reg[8]_0 (\s_axi_rdata[8]_i_4_n_0 ),
        .\s_axi_rdata_reg[8]_1 (\s_axi_rdata[8]_i_5_n_0 ),
        .\s_axi_rdata_reg[8]_2 (\s_axi_rdata[8]_i_6_n_0 ),
        .\s_axi_rdata_reg[8]_3 (\s_axi_rdata[8]_i_8_n_0 ),
        .\s_axi_rdata_reg[9] (\s_axi_rdata[9]_i_3_n_0 ),
        .\s_axi_rdata_reg[9]_0 (\s_axi_rdata[9]_i_4_n_0 ),
        .\s_axi_rdata_reg[9]_1 (\s_axi_rdata[9]_i_5_n_0 ),
        .\s_axi_rdata_reg[9]_2 (\s_axi_rdata[9]_i_6_n_0 ),
        .\s_axi_rdata_reg[9]_3 (\s_axi_rdata[9]_i_8_n_0 ),
        .s_axi_wdata(s_axi_wdata[19]),
        .vcx_err(vcx_err),
        .wr_en(wr_en),
        .wr_req(wr_req));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \gie[0]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(\gie[0]_i_2_n_0 ),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(\core_config[1]_i_2_n_0 ),
        .I5(\gie_reg_n_0_[0] ),
        .O(\gie[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \gie[0]_i_2 
       (.I0(p_0_in[5]),
        .I1(p_0_in[4]),
        .O(\gie[0]_i_2_n_0 ));
  FDRE \gie_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gie[0]_i_1_n_0 ),
        .Q(\gie_reg_n_0_[0] ),
        .R(SS));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \ier[31]_i_1 
       (.I0(\gie[0]_i_2_n_0 ),
        .I1(p_0_in[0]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(p_0_in[3]),
        .I5(p_21_in),
        .O(\ier[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \ier[31]_i_2 
       (.I0(s_axi_bvalid_reg_0),
        .I1(wr_req),
        .I2(s_axi_wvalid),
        .O(p_21_in));
  FDRE \ier_reg[0] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[0]),
        .Q(ier[0]),
        .R(SS));
  FDRE \ier_reg[10] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[10]),
        .Q(ier[10]),
        .R(SS));
  FDRE \ier_reg[11] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[11]),
        .Q(ier[11]),
        .R(SS));
  FDRE \ier_reg[12] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[12]),
        .Q(ier[12]),
        .R(SS));
  FDRE \ier_reg[13] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[13]),
        .Q(ier[13]),
        .R(SS));
  FDRE \ier_reg[14] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[14]),
        .Q(ier[14]),
        .R(SS));
  FDRE \ier_reg[15] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[15]),
        .Q(ier[15]),
        .R(SS));
  FDRE \ier_reg[16] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[16]),
        .Q(ier[16]),
        .R(SS));
  FDRE \ier_reg[17] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[17]),
        .Q(ier[17]),
        .R(SS));
  FDRE \ier_reg[18] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[18]),
        .Q(ier[18]),
        .R(SS));
  FDRE \ier_reg[19] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[19]),
        .Q(ier[19]),
        .R(SS));
  FDRE \ier_reg[1] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[1]),
        .Q(ier[1]),
        .R(SS));
  FDRE \ier_reg[20] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[20]),
        .Q(ier[20]),
        .R(SS));
  FDRE \ier_reg[21] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[21]),
        .Q(ier[21]),
        .R(SS));
  FDRE \ier_reg[22] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[22]),
        .Q(ier[22]),
        .R(SS));
  FDRE \ier_reg[29] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[23]),
        .Q(ier[29]),
        .R(SS));
  FDRE \ier_reg[2] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[2]),
        .Q(ier[2]),
        .R(SS));
  FDRE \ier_reg[30] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[24]),
        .Q(ier[30]),
        .R(SS));
  FDRE \ier_reg[31] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[25]),
        .Q(ier[31]),
        .R(SS));
  FDRE \ier_reg[3] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[3]),
        .Q(\ier_reg[9]_0 [0]),
        .R(SS));
  FDRE \ier_reg[4] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[4]),
        .Q(\ier_reg[9]_0 [1]),
        .R(SS));
  FDRE \ier_reg[5] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[5]),
        .Q(ier[5]),
        .R(SS));
  FDRE \ier_reg[6] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[6]),
        .Q(ier[6]),
        .R(SS));
  FDRE \ier_reg[7] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[7]),
        .Q(ier[7]),
        .R(SS));
  FDRE \ier_reg[8] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[8]),
        .Q(ier[8]),
        .R(SS));
  FDRE \ier_reg[9] 
       (.C(s_axi_aclk),
        .CE(\ier[31]_i_1_n_0 ),
        .D(s_axi_wdata[9]),
        .Q(\ier_reg[9]_0 [2]),
        .R(SS));
  LUT5 #(
    .INIT(32'h00000002)) 
    \img_info1_vc0[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc0[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \img_info1_vc0[31]_i_1 
       (.I0(vc_num[1]),
        .I1(vc_num[0]),
        .I2(vc_num[2]),
        .I3(vc_num[3]),
        .I4(img_vld),
        .O(p_0_in__0__0));
  FDRE \img_info1_vc0_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc0[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc0[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc0[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc0[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc0[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc0[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc0[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[16] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .Q(img_info1_vc0[16]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[17] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [1]),
        .Q(img_info1_vc0[17]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[18] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [2]),
        .Q(img_info1_vc0[18]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[19] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [3]),
        .Q(img_info1_vc0[19]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc0[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[20] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [4]),
        .Q(img_info1_vc0[20]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[21] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [5]),
        .Q(img_info1_vc0[21]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[22] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [6]),
        .Q(img_info1_vc0[22]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[23] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [7]),
        .Q(img_info1_vc0[23]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[24] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8]),
        .Q(img_info1_vc0[24]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[25] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [9]),
        .Q(img_info1_vc0[25]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[26] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [10]),
        .Q(img_info1_vc0[26]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[27] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [11]),
        .Q(img_info1_vc0[27]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[28] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [12]),
        .Q(img_info1_vc0[28]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[29] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [13]),
        .Q(img_info1_vc0[29]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc0[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[30] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [14]),
        .Q(img_info1_vc0[30]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[31] 
       (.C(s_axi_aclk),
        .CE(p_0_in__0__0),
        .D(\LP_CNT_C2R[0].lp_count_reg[0]_5 [15]),
        .Q(img_info1_vc0[31]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc0[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc0[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc0[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc0[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc0[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc0[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc0_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc0[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc10[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[3]),
        .I2(vc_num[1]),
        .I3(vc_num[2]),
        .I4(vc_num[0]),
        .O(\img_info1_vc10[15]_i_1_n_0 ));
  FDRE \img_info1_vc10_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc10[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc10[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc10[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc10[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc10[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc10[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc10[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc10[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc10[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc10[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc10[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc10[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc10[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc10[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc10[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc10_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc10[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00800000)) 
    \img_info1_vc11[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc11[15]_i_1_n_0 ));
  FDRE \img_info1_vc11_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc11[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc11[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc11[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc11[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc11[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc11[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc11[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc11[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc11[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc11[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc11[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc11[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc11[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc11[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc11[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc11_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc11[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc12[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[2]),
        .I2(vc_num[3]),
        .I3(vc_num[1]),
        .I4(vc_num[0]),
        .O(\img_info1_vc12[15]_i_1_n_0 ));
  FDRE \img_info1_vc12_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc12[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc12[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc12[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc12[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc12[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc12[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc12[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc12[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc12[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc12[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc12[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc12[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc12[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc12[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc12[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc12_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc12[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00800000)) 
    \img_info1_vc13[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[3]),
        .I2(vc_num[0]),
        .I3(vc_num[1]),
        .I4(vc_num[2]),
        .O(\img_info1_vc13[15]_i_1_n_0 ));
  FDRE \img_info1_vc13_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc13[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc13[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc13[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc13[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc13[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc13[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc13[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc13[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc13[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc13[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc13[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc13[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc13[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc13[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc13[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc13_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc13[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00800000)) 
    \img_info1_vc14[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[3]),
        .I3(vc_num[0]),
        .I4(vc_num[2]),
        .O(\img_info1_vc14[15]_i_1_n_0 ));
  FDRE \img_info1_vc14_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc14[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc14[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc14[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc14[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc14[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc14[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc14[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc14[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc14[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc14[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc14[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc14[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc14[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc14[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc14[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc14_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc14[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \img_info1_vc15[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc15[15]_i_1_n_0 ));
  FDRE \img_info1_vc15_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc15[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc15[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc15[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc15[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc15[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc15[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc15[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc15[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc15[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc15[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc15[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc15[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc15[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc15[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc15[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc15_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc15[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \img_info1_vc1[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc1[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0004FFFF)) 
    \img_info1_vc1[31]_i_1 
       (.I0(vc_num[1]),
        .I1(vc_num[0]),
        .I2(vc_num[2]),
        .I3(vc_num[3]),
        .I4(img_vld),
        .O(\img_info1_vc1[31]_i_1_n_0 ));
  FDRE \img_info1_vc1_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc1[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc1[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc1[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc1[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc1[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc1[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc1[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[16] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .Q(img_info1_vc1[16]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[17] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [1]),
        .Q(img_info1_vc1[17]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[18] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [2]),
        .Q(img_info1_vc1[18]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[19] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [3]),
        .Q(img_info1_vc1[19]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc1[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[20] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [4]),
        .Q(img_info1_vc1[20]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[21] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [5]),
        .Q(img_info1_vc1[21]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[22] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [6]),
        .Q(img_info1_vc1[22]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[23] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [7]),
        .Q(img_info1_vc1[23]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[24] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8]),
        .Q(img_info1_vc1[24]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[25] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [9]),
        .Q(img_info1_vc1[25]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[26] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [10]),
        .Q(img_info1_vc1[26]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[27] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [11]),
        .Q(img_info1_vc1[27]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[28] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [12]),
        .Q(img_info1_vc1[28]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[29] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [13]),
        .Q(img_info1_vc1[29]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc1[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[30] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [14]),
        .Q(img_info1_vc1[30]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[31] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[1].lp_count_reg[1]_4 [15]),
        .Q(img_info1_vc1[31]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc1[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc1[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc1[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc1[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc1[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc1[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc1_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc1[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \img_info1_vc2[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[0]),
        .I2(vc_num[1]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc2[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0004FFFF)) 
    \img_info1_vc2[31]_i_1 
       (.I0(vc_num[0]),
        .I1(vc_num[1]),
        .I2(vc_num[2]),
        .I3(vc_num[3]),
        .I4(img_vld),
        .O(\img_info1_vc2[31]_i_1_n_0 ));
  FDRE \img_info1_vc2_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc2[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc2[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc2[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc2[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc2[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc2[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc2[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[16] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .Q(img_info1_vc2[16]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[17] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [1]),
        .Q(img_info1_vc2[17]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[18] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [2]),
        .Q(img_info1_vc2[18]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[19] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [3]),
        .Q(img_info1_vc2[19]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc2[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[20] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [4]),
        .Q(img_info1_vc2[20]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[21] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [5]),
        .Q(img_info1_vc2[21]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[22] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [6]),
        .Q(img_info1_vc2[22]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[23] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [7]),
        .Q(img_info1_vc2[23]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[24] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8]),
        .Q(img_info1_vc2[24]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[25] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [9]),
        .Q(img_info1_vc2[25]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[26] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [10]),
        .Q(img_info1_vc2[26]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[27] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [11]),
        .Q(img_info1_vc2[27]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[28] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [12]),
        .Q(img_info1_vc2[28]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[29] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [13]),
        .Q(img_info1_vc2[29]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc2[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[30] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [14]),
        .Q(img_info1_vc2[30]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[31] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[2].lp_count_reg[2]_3 [15]),
        .Q(img_info1_vc2[31]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc2[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc2[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc2[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc2[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc2[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc2[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc2_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc2[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc3[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[3]),
        .O(\img_info1_vc3[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0008FFFF)) 
    \img_info1_vc3[31]_i_1 
       (.I0(vc_num[1]),
        .I1(vc_num[0]),
        .I2(vc_num[2]),
        .I3(vc_num[3]),
        .I4(img_vld),
        .O(\img_info1_vc3[31]_i_1_n_0 ));
  FDRE \img_info1_vc3_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc3[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc3[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc3[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc3[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc3[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc3[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc3[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[16] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .Q(img_info1_vc3[16]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[17] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [1]),
        .Q(img_info1_vc3[17]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[18] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [2]),
        .Q(img_info1_vc3[18]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[19] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [3]),
        .Q(img_info1_vc3[19]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc3[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[20] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [4]),
        .Q(img_info1_vc3[20]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[21] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [5]),
        .Q(img_info1_vc3[21]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[22] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [6]),
        .Q(img_info1_vc3[22]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[23] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [7]),
        .Q(img_info1_vc3[23]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[24] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8]),
        .Q(img_info1_vc3[24]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[25] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [9]),
        .Q(img_info1_vc3[25]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[26] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [10]),
        .Q(img_info1_vc3[26]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[27] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [11]),
        .Q(img_info1_vc3[27]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[28] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [12]),
        .Q(img_info1_vc3[28]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[29] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [13]),
        .Q(img_info1_vc3[29]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc3[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[30] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [14]),
        .Q(img_info1_vc3[30]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[31] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[31]_i_1_n_0 ),
        .D(\LP_CNT_C2R[3].lp_count_reg[3]_2 [15]),
        .Q(img_info1_vc3[31]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc3[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc3[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc3[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc3[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc3[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc3[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc3_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc3[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \img_info1_vc4[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[2]),
        .I3(vc_num[0]),
        .I4(vc_num[3]),
        .O(\img_info1_vc4[15]_i_1_n_0 ));
  FDRE \img_info1_vc4_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc4[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc4[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc4[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc4[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc4[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc4[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc4[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc4[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc4[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc4[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc4[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc4[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc4[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc4[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc4[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc4_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc4[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc5[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[2]),
        .I2(vc_num[0]),
        .I3(vc_num[1]),
        .I4(vc_num[3]),
        .O(\img_info1_vc5[15]_i_1_n_0 ));
  FDRE \img_info1_vc5_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc5[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc5[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc5[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc5[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc5[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc5[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc5[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc5[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc5[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc5[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc5[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc5[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc5[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc5[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc5[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc5_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc5[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc6[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[2]),
        .I2(vc_num[1]),
        .I3(vc_num[0]),
        .I4(vc_num[3]),
        .O(\img_info1_vc6[15]_i_1_n_0 ));
  FDRE \img_info1_vc6_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc6[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc6[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc6[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc6[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc6[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc6[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc6[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc6[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc6[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc6[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc6[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc6[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc6[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc6[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc6[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc6_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc6[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00800000)) 
    \img_info1_vc7[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[0]),
        .I3(vc_num[3]),
        .I4(vc_num[2]),
        .O(\img_info1_vc7[15]_i_1_n_0 ));
  FDRE \img_info1_vc7_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc7[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc7[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc7[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc7[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc7[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc7[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc7[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc7[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc7[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc7[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc7[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc7[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc7[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc7[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc7[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc7_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc7[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \img_info1_vc8[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[1]),
        .I2(vc_num[3]),
        .I3(vc_num[2]),
        .I4(vc_num[0]),
        .O(\img_info1_vc8[15]_i_1_n_0 ));
  FDRE \img_info1_vc8_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc8[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc8[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc8[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc8[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc8[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc8[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc8[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc8[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc8[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc8[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc8[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc8[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc8[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc8[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc8[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc8_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc8[9]),
        .R(\core_config_reg[1]_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \img_info1_vc9[15]_i_1 
       (.I0(img_vld),
        .I1(vc_num[3]),
        .I2(vc_num[0]),
        .I3(vc_num[2]),
        .I4(vc_num[1]),
        .O(\img_info1_vc9[15]_i_1_n_0 ));
  FDRE \img_info1_vc9_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[0]),
        .Q(img_info1_vc9[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[10] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(img_info1_vc9[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[11] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(img_info1_vc9[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[12] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(img_info1_vc9[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[13] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(img_info1_vc9[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[14] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(img_info1_vc9[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[15] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(img_info1_vc9[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(img_info1_vc9[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(img_info1_vc9[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(img_info1_vc9[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(img_info1_vc9[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(img_info1_vc9[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[6] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(img_info1_vc9[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[7] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(img_info1_vc9[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[8] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(img_info1_vc9[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info1_vc9_reg[9] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(img_info1_vc9[9]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc0_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc0_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc0_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc0_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc0_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc0_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc0[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc0_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc10_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc10_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc10_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc10_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc10_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc10_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc10[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc10_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc11_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc11_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc11_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc11_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc11_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc11_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc11[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc11_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc12_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc12_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc12_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc12_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc12_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc12_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc12[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc12_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc13_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc13_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc13_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc13_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc13_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc13_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc13[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc13_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc14_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc14_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc14_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc14_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc14_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc14_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc14[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc14_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc15_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc15_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc15_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc15_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc15_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc15_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc15[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc15_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc1_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc1_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc1_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc1_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc1_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc1_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc1[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc1_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc2_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc2_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc2_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc2_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc2_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc2_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc2[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc2_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc3_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc3_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc3_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc3_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc3_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc3_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc3[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc3_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc4_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc4_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc4_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc4_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc4_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc4_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc4[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc4_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc5_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc5_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc5_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc5_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc5_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc5_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc5[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc5_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc6_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc6_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc6_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc6_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc6_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc6_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc6[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc6_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc7_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc7_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc7_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc7_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc7_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc7_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc7[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc7_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc8_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc8_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc8_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc8_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc8_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc8_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc8[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc8_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[0] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[0] ),
        .Q(\img_info2_vc9_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[1] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[1] ),
        .Q(\img_info2_vc9_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[2] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[2] ),
        .Q(\img_info2_vc9_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[3] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[3] ),
        .Q(\img_info2_vc9_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[4] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[4] ),
        .Q(\img_info2_vc9_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_info2_vc9_reg[5] 
       (.C(s_axi_aclk),
        .CE(\img_info1_vc9[15]_i_1_n_0 ),
        .D(\img_vld_out_reg_n_0_[5] ),
        .Q(\img_info2_vc9_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  (* DEST_EXT_HSK = "0" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_SYNC_FF = "3" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "26" *) 
  (* XPM_CDC = "HANDSHAKE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_handshake__parameterized1 img_info_cdc
       (.dest_ack(1'b0),
        .dest_clk(s_axi_aclk),
        .dest_out(img_vld_out_i),
        .dest_req(img_vld_i),
        .src_clk(m_axis_aclk),
        .src_in(\src_hsdata_ff_reg[25] ),
        .src_rcv(src_rcv),
        .src_send(src_send));
  FDRE img_send_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(img_send_reg_0),
        .Q(src_send),
        .R(1'b0));
  FDRE \img_vld_out_reg[0] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[0]),
        .Q(\img_vld_out_reg_n_0_[0] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[10] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[10]),
        .Q(p_1_in[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[11] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[11]),
        .Q(p_1_in[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[12] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[12]),
        .Q(p_1_in[4]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[13] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[13]),
        .Q(p_1_in[5]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[14] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[14]),
        .Q(p_1_in[6]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[15] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[15]),
        .Q(p_1_in[7]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[16] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[16]),
        .Q(p_1_in[8]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[17] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[17]),
        .Q(p_1_in[9]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[18] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[18]),
        .Q(p_1_in[10]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[19] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[19]),
        .Q(p_1_in[11]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[1] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[1]),
        .Q(\img_vld_out_reg_n_0_[1] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[20] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[20]),
        .Q(p_1_in[12]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[21] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[21]),
        .Q(p_1_in[13]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[22] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[22]),
        .Q(p_1_in[14]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[23] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[23]),
        .Q(p_1_in[15]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[24] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[24]),
        .Q(vc_num[2]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[25] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[25]),
        .Q(vc_num[3]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[2] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[2]),
        .Q(\img_vld_out_reg_n_0_[2] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[3] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[3]),
        .Q(\img_vld_out_reg_n_0_[3] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[4] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[4]),
        .Q(\img_vld_out_reg_n_0_[4] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[5] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[5]),
        .Q(\img_vld_out_reg_n_0_[5] ),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[6] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[6]),
        .Q(vc_num[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[7] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[7]),
        .Q(vc_num[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[8] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[8]),
        .Q(p_1_in[0]),
        .R(\core_config_reg[1]_0 ));
  FDRE \img_vld_out_reg[9] 
       (.C(s_axi_aclk),
        .CE(img_vld_i),
        .D(img_vld_out_i[9]),
        .Q(p_1_in[1]),
        .R(\core_config_reg[1]_0 ));
  FDRE img_vld_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(img_vld_i),
        .Q(img_vld),
        .R(\core_config_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF8)) 
    interrupt_INST_0_i_1
       (.I0(ier[18]),
        .I1(interrupt_1[34]),
        .I2(interrupt_INST_0_i_6_n_0),
        .I3(interrupt_INST_0_i_7_n_0),
        .I4(interrupt_INST_0_i_8_n_0),
        .I5(interrupt_INST_0_i_9_n_0),
        .O(interrupt_INST_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF00A800A800A8)) 
    interrupt_INST_0_i_16
       (.I0(ier[21]),
        .I1(incorrect_lanes),
        .I2(interrupt_0[14]),
        .I3(Q),
        .I4(ier[20]),
        .I5(interrupt_1[35]),
        .O(interrupt_INST_0_i_16_n_0));
  LUT6 #(
    .INIT(64'hFFFF00A800A800A8)) 
    interrupt_INST_0_i_17
       (.I0(ier[8]),
        .I1(p_0_in8_in),
        .I2(interrupt_0[7]),
        .I3(Q),
        .I4(ier[7]),
        .I5(interrupt_1[6]),
        .O(interrupt_INST_0_i_17_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    interrupt_INST_0_i_19
       (.I0(ier[2]),
        .I1(interrupt_1[2]),
        .I2(interrupt_1[0]),
        .I3(ier[0]),
        .I4(interrupt_1[1]),
        .I5(ier[1]),
        .O(interrupt_INST_0_i_19_n_0));
  LUT6 #(
    .INIT(64'hFFFF00A800A800A8)) 
    interrupt_INST_0_i_20
       (.I0(ier[6]),
        .I1(p_0_in34_in),
        .I2(interrupt_0[1]),
        .I3(Q),
        .I4(ier[5]),
        .I5(interrupt_1[5]),
        .O(interrupt_INST_0_i_20_n_0));
  LUT6 #(
    .INIT(64'hFFFF00A800A800A8)) 
    interrupt_INST_0_i_4
       (.I0(ier[31]),
        .I1(isr_55),
        .I2(interrupt_0[16]),
        .I3(Q),
        .I4(ier[22]),
        .I5(interrupt_1[36]),
        .O(interrupt_INST_0_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFF00A800A800A8)) 
    interrupt_INST_0_i_6
       (.I0(ier[13]),
        .I1(p_0_in5_in),
        .I2(interrupt_0[10]),
        .I3(Q),
        .I4(ier[12]),
        .I5(interrupt_1[29]),
        .O(interrupt_INST_0_i_6_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    interrupt_INST_0_i_7
       (.I0(ier[11]),
        .I1(interrupt_1[28]),
        .I2(ier[10]),
        .I3(interrupt_1[27]),
        .O(interrupt_INST_0_i_7_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    interrupt_INST_0_i_8
       (.I0(ier[17]),
        .I1(interrupt_1[33]),
        .I2(ier[16]),
        .I3(interrupt_1[32]),
        .O(interrupt_INST_0_i_8_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    interrupt_INST_0_i_9
       (.I0(ier[15]),
        .I1(interrupt_1[31]),
        .I2(ier[14]),
        .I3(interrupt_1[30]),
        .O(interrupt_INST_0_i_9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \isr_i[31]_i_1 
       (.I0(wr2_isr1),
        .O(E[0]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT4 #(
    .INIT(16'hF7F0)) 
    \isr_i[45]_i_1 
       (.I0(s_axi_wdata[21]),
        .I1(wr2_isr1),
        .I2(incorrect_lanes),
        .I3(interrupt_0[14]),
        .O(D[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \isr_i[55]_i_1 
       (.I0(Q),
        .I1(s_axi_aresetn),
        .O(\core_config_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \isr_i[55]_i_2 
       (.I0(wr2_isr1),
        .I1(wr2_isr2),
        .O(E[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \isr_i[55]_i_4 
       (.I0(p_0_in[5]),
        .I1(p_0_in[4]),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(\core_config[1]_i_2_n_0 ),
        .O(wr2_isr1));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \isr_i[55]_i_5 
       (.I0(p_21_in),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(p_0_in[0]),
        .I5(\gie[0]_i_2_n_0 ),
        .O(wr2_isr2));
  FDRE pktnppi_fifo_rst_ack_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pktnppi_fifo_rst_reg_0),
        .Q(pktnppi_fifo_rst_ack_i),
        .R(SS));
  FDRE pktnppi_fifo_rst_ack_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pktnppi_fifo_rst_ack_i),
        .Q(pktnppi_fifo_rst_ack),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'hB)) 
    pktnppi_fifo_rst_i_1
       (.I0(Q),
        .I1(\core_config_reg_n_0_[0] ),
        .O(pktnppi_fifo_rst0));
  FDRE pktnppi_fifo_rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pktnppi_fifo_rst0),
        .Q(pktnppi_fifo_rst_reg_0),
        .R(SS));
  LUT2 #(
    .INIT(4'hE)) 
    ppi_dis_done_i_1
       (.I0(pktnppi_fifo_rst_ack),
        .I1(pkt_dis_done),
        .O(ppi_dis_done_i_1_n_0));
  FDRE ppi_dis_done_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ppi_dis_done_i_1_n_0),
        .Q(pkt_dis_done),
        .R(spkt_fifo_dis_done));
  LUT6 #(
    .INIT(64'hFFEFFFFF00200000)) 
    \prot_config[1]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(\gie[0]_i_2_n_0 ),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(\core_config[1]_i_2_n_0 ),
        .I5(incorrect_lanes),
        .O(\prot_config[1]_i_1_n_0 ));
  FDRE \prot_config_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\prot_config[1]_i_1_n_0 ),
        .Q(incorrect_lanes),
        .R(SS));
  LUT4 #(
    .INIT(16'h0400)) 
    \rd_addr[7]_i_1 
       (.I0(rd_req),
        .I1(reset_released),
        .I2(wr_req),
        .I3(s_axi_arvalid),
        .O(p_19_in));
  FDRE \rd_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[0]),
        .Q(sel0[0]),
        .R(SS));
  FDRE \rd_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[1]),
        .Q(sel0[1]),
        .R(SS));
  FDRE \rd_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[2]),
        .Q(sel0[2]),
        .R(SS));
  FDRE \rd_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[3]),
        .Q(sel0[3]),
        .R(SS));
  FDRE \rd_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[4]),
        .Q(sel0[4]),
        .R(SS));
  FDRE \rd_addr_reg[7] 
       (.C(s_axi_aclk),
        .CE(p_19_in),
        .D(s_axi_araddr[5]),
        .Q(sel0[5]),
        .R(SS));
  LUT6 #(
    .INIT(64'h7777777700F00000)) 
    rd_req_i_1
       (.I0(s_axi_rvalid_reg_0),
        .I1(s_axi_rready),
        .I2(s_axi_arvalid),
        .I3(wr_req),
        .I4(reset_released),
        .I5(rd_req),
        .O(rd_req_i_1_n_0));
  FDRE rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_req_i_1_n_0),
        .Q(rd_req),
        .R(SS));
  FDRE reset_released_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_aresetn),
        .Q(reset_released),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h04)) 
    s_axi_arready_INST_0
       (.I0(wr_req),
        .I1(reset_released),
        .I2(rd_req),
        .O(s_axi_arready));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    s_axi_awready_INST_0
       (.I0(s_axi_arvalid),
        .I1(rd_req),
        .I2(wr_req),
        .I3(reset_released),
        .O(s_axi_awready));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_bvalid_i_1
       (.I0(s_axi_aresetn),
        .O(SS));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h08F8)) 
    s_axi_bvalid_i_2
       (.I0(s_axi_wvalid),
        .I1(wr_req),
        .I2(s_axi_bvalid_reg_0),
        .I3(s_axi_bready),
        .O(s_axi_bvalid_i_2_n_0));
  FDRE s_axi_bvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_2_n_0),
        .Q(s_axi_bvalid_reg_0),
        .R(SS));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[0]_i_10 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[0] ),
        .I4(\img_info2_vc15_reg_n_0_[0] ),
        .I5(\s_axi_rdata[0]_i_21_n_0 ),
        .O(\s_axi_rdata[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF0CC00AA)) 
    \s_axi_rdata[0]_i_11 
       (.I0(ier[0]),
        .I1(img_info1_vc9[0]),
        .I2(\img_info2_vc9_reg_n_0_[0] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[0]_i_12 
       (.I0(interrupt_1[0]),
        .I1(\img_info2_vc8_reg_n_0_[0] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\gie_reg_n_0_[0] ),
        .I5(img_info1_vc8[0]),
        .O(\s_axi_rdata[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[0]_i_13 
       (.I0(img_info1_vc5[0]),
        .I1(\img_info2_vc5_reg_n_0_[0] ),
        .I2(\s_axi_rdata[0]_i_22_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[0]_i_13_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h8F)) 
    \s_axi_rdata[0]_i_14 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\s_axi_rdata[0]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \s_axi_rdata[0]_i_15 
       (.I0(sel0[1]),
        .I1(sel0[5]),
        .O(\s_axi_rdata[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFF00F0F00000EEEE)) 
    \s_axi_rdata[0]_i_16 
       (.I0(disable_in_progress_d1_i_2_n_0),
        .I1(\s_axi_rdata[0]_i_23_n_0 ),
        .I2(img_info1_vc6[0]),
        .I3(\img_info2_vc6_reg_n_0_[0] ),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[0]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[0]_i_18 
       (.I0(img_info1_vc1[0]),
        .I1(img_info1_vc0[0]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[0]_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[0]_i_19 
       (.I0(img_info1_vc3[0]),
        .I1(img_info1_vc2[0]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[0]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[0]_i_2 
       (.I0(\s_axi_rdata[0]_i_7_n_0 ),
        .I1(\s_axi_rdata[0]_i_8_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[0]_i_9_n_0 ),
        .I5(\s_axi_rdata[0]_i_10_n_0 ),
        .O(\s_axi_rdata[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[0]_i_20 
       (.I0(\img_info2_vc13_reg_n_0_[0] ),
        .I1(img_info1_vc13[0]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[0]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[0]_i_21 
       (.I0(img_info1_vc15[0]),
        .I1(img_info1_vc14[0]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[0]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[0]_i_22 
       (.I0(p_25_in[0]),
        .I1(\img_info2_vc4_reg_n_0_[0] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\core_config_reg_n_0_[0] ),
        .I5(img_info1_vc4[0]),
        .O(\s_axi_rdata[0]_i_22_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    \s_axi_rdata[0]_i_23 
       (.I0(soft_rst_d1),
        .I1(Q),
        .I2(\core_config_reg_n_0_[0] ),
        .I3(core_en_d1),
        .O(\s_axi_rdata[0]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F7B3C480)) 
    \s_axi_rdata[0]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(\s_axi_rdata[0]_i_11_n_0 ),
        .I3(\s_axi_rdata[0]_i_12_n_0 ),
        .I4(\s_axi_rdata[0]_i_13_n_0 ),
        .I5(sel0[2]),
        .O(\s_axi_rdata[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8A0A820288088000)) 
    \s_axi_rdata[0]_i_4 
       (.I0(\s_axi_rdata[3]_i_4_n_0 ),
        .I1(\s_axi_rdata[0]_i_14_n_0 ),
        .I2(\s_axi_rdata[0]_i_15_n_0 ),
        .I3(\s_axi_rdata[0]_i_16_n_0 ),
        .I4(\img_info2_vc7_reg_n_0_[0] ),
        .I5(img_info1_vc7[0]),
        .O(\s_axi_rdata[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[0]_i_6 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .O(\s_axi_rdata[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[0]_i_7 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[0] ),
        .I4(\img_info2_vc1_reg_n_0_[0] ),
        .I5(\s_axi_rdata[0]_i_18_n_0 ),
        .O(\s_axi_rdata[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[0]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[0] ),
        .I4(\img_info2_vc3_reg_n_0_[0] ),
        .I5(\s_axi_rdata[0]_i_19_n_0 ),
        .O(\s_axi_rdata[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[0]_i_9 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc12[0]),
        .I4(\img_info2_vc12_reg_n_0_[0] ),
        .I5(\s_axi_rdata[0]_i_20_n_0 ),
        .O(\s_axi_rdata[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[10]_i_10 
       (.I0(img_info1_vc12[10]),
        .I1(img_info1_vc13[10]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[10]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[10]_i_11 
       (.I0(img_info1_vc9[10]),
        .I1(img_info1_vc8[10]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[10]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[10]_i_3 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[15]_i_7_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc14[10]),
        .I4(img_info1_vc15[10]),
        .I5(\s_axi_rdata[10]_i_8_n_0 ),
        .O(\s_axi_rdata[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[10]_i_4 
       (.I0(\s_axi_rdata[15]_i_10_n_0 ),
        .I1(img_info1_vc5[10]),
        .I2(\s_axi_rdata[15]_i_11_n_0 ),
        .I3(img_info1_vc4[10]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[10]_i_9_n_0 ),
        .O(\s_axi_rdata[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[10]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[10]),
        .I4(img_info1_vc1[10]),
        .I5(\s_axi_rdata[10]_i_10_n_0 ),
        .O(\s_axi_rdata[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[10]_i_7 
       (.I0(img_info1_vc6[10]),
        .I1(img_info1_vc7[10]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h000000A0000000C0)) 
    \s_axi_rdata[10]_i_8 
       (.I0(img_info1_vc3[10]),
        .I1(img_info1_vc2[10]),
        .I2(sel0[3]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAABEAABAAAAEAAAA)) 
    \s_axi_rdata[10]_i_9 
       (.I0(\s_axi_rdata[10]_i_11_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(ier[10]),
        .I5(interrupt_1[27]),
        .O(\s_axi_rdata[10]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[11]_i_10 
       (.I0(img_info1_vc12[11]),
        .I1(img_info1_vc13[11]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[11]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[11]_i_12 
       (.I0(img_info1_vc9[11]),
        .I1(img_info1_vc8[11]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[11]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[11]_i_3 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[15]_i_7_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc14[11]),
        .I4(img_info1_vc15[11]),
        .I5(\s_axi_rdata[11]_i_8_n_0 ),
        .O(\s_axi_rdata[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[11]_i_4 
       (.I0(\s_axi_rdata[15]_i_10_n_0 ),
        .I1(img_info1_vc5[11]),
        .I2(\s_axi_rdata[15]_i_11_n_0 ),
        .I3(img_info1_vc4[11]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[11]_i_9_n_0 ),
        .O(\s_axi_rdata[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[11]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[11]),
        .I4(img_info1_vc1[11]),
        .I5(\s_axi_rdata[11]_i_10_n_0 ),
        .O(\s_axi_rdata[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[11]_i_7 
       (.I0(img_info1_vc6[11]),
        .I1(img_info1_vc7[11]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h000000A0000000C0)) 
    \s_axi_rdata[11]_i_8 
       (.I0(img_info1_vc3[11]),
        .I1(img_info1_vc2[11]),
        .I2(sel0[3]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAABEAABAAAAEAAAA)) 
    \s_axi_rdata[11]_i_9 
       (.I0(\s_axi_rdata[11]_i_12_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(ier[11]),
        .I5(interrupt_1[28]),
        .O(\s_axi_rdata[11]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[12]_i_10 
       (.I0(img_info1_vc12[12]),
        .I1(img_info1_vc13[12]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[12]_i_11 
       (.I0(img_info1_vc15[12]),
        .I1(img_info1_vc14[12]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[12]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[12]_i_3 
       (.I0(\s_axi_rdata[12]_i_9_n_0 ),
        .I1(img_info1_vc9[12]),
        .I2(img_info1_vc8[12]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[12]_i_4 
       (.I0(img_info1_vc4[12]),
        .I1(img_info1_vc5[12]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[12]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[12]),
        .I4(img_info1_vc1[12]),
        .I5(\s_axi_rdata[12]_i_10_n_0 ),
        .O(\s_axi_rdata[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[12]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[12]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[12]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[12]_i_11_n_0 ),
        .O(\s_axi_rdata[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[12]_i_8 
       (.I0(img_info1_vc6[12]),
        .I1(img_info1_vc7[12]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[12]_i_9 
       (.I0(p_0_in6_in),
        .I1(interrupt_0[9]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(ier[12]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[13]_i_10 
       (.I0(p_0_in5_in),
        .I1(interrupt_0[10]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(ier[13]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[13]_i_11 
       (.I0(img_info1_vc12[13]),
        .I1(img_info1_vc13[13]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[13]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[13]_i_12 
       (.I0(sel0[4]),
        .I1(sel0[2]),
        .O(\s_axi_rdata[13]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h0200)) 
    \s_axi_rdata[13]_i_13 
       (.I0(sel0[3]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(sel0[1]),
        .O(\s_axi_rdata[13]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[13]_i_14 
       (.I0(img_info1_vc15[13]),
        .I1(img_info1_vc14[13]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[13]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata[13]_i_15 
       (.I0(sel0[3]),
        .I1(sel0[1]),
        .O(\s_axi_rdata[13]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \s_axi_rdata[13]_i_16 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\s_axi_rdata[13]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[13]_i_3 
       (.I0(\s_axi_rdata[13]_i_10_n_0 ),
        .I1(img_info1_vc9[13]),
        .I2(img_info1_vc8[13]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[13]_i_4 
       (.I0(img_info1_vc4[13]),
        .I1(img_info1_vc5[13]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[13]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[13]),
        .I4(img_info1_vc1[13]),
        .I5(\s_axi_rdata[13]_i_11_n_0 ),
        .O(\s_axi_rdata[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[13]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[13]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[13]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[13]_i_14_n_0 ),
        .O(\s_axi_rdata[13]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \s_axi_rdata[13]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(sel0[3]),
        .O(\s_axi_rdata[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[13]_i_9 
       (.I0(img_info1_vc6[13]),
        .I1(img_info1_vc7[13]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[13]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[14]_i_10 
       (.I0(img_info1_vc12[14]),
        .I1(img_info1_vc13[14]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[14]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[14]_i_11 
       (.I0(img_info1_vc9[14]),
        .I1(img_info1_vc8[14]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[14]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[14]_i_3 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[15]_i_7_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc14[14]),
        .I4(img_info1_vc15[14]),
        .I5(\s_axi_rdata[14]_i_8_n_0 ),
        .O(\s_axi_rdata[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[14]_i_4 
       (.I0(\s_axi_rdata[15]_i_10_n_0 ),
        .I1(img_info1_vc5[14]),
        .I2(\s_axi_rdata[15]_i_11_n_0 ),
        .I3(img_info1_vc4[14]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[14]_i_9_n_0 ),
        .O(\s_axi_rdata[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[14]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[14]),
        .I4(img_info1_vc1[14]),
        .I5(\s_axi_rdata[14]_i_10_n_0 ),
        .O(\s_axi_rdata[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[14]_i_7 
       (.I0(img_info1_vc6[14]),
        .I1(img_info1_vc7[14]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h000000A0000000C0)) 
    \s_axi_rdata[14]_i_8 
       (.I0(img_info1_vc3[14]),
        .I1(img_info1_vc2[14]),
        .I2(sel0[3]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAABEAABAAAAEAAAA)) 
    \s_axi_rdata[14]_i_9 
       (.I0(\s_axi_rdata[14]_i_11_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(ier[14]),
        .I5(interrupt_1[30]),
        .O(\s_axi_rdata[14]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \s_axi_rdata[15]_i_10 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(sel0[3]),
        .O(\s_axi_rdata[15]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \s_axi_rdata[15]_i_11 
       (.I0(sel0[3]),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .O(\s_axi_rdata[15]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAABEAABAAAAEAAAA)) 
    \s_axi_rdata[15]_i_12 
       (.I0(\s_axi_rdata[15]_i_15_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(ier[15]),
        .I5(interrupt_1[31]),
        .O(\s_axi_rdata[15]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[15]_i_13 
       (.I0(img_info1_vc12[15]),
        .I1(img_info1_vc13[15]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[15]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[15]_i_15 
       (.I0(img_info1_vc9[15]),
        .I1(img_info1_vc8[15]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[15]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[15]_i_3 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[15]_i_7_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc14[15]),
        .I4(img_info1_vc15[15]),
        .I5(\s_axi_rdata[15]_i_9_n_0 ),
        .O(\s_axi_rdata[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \s_axi_rdata[15]_i_4 
       (.I0(\s_axi_rdata[15]_i_10_n_0 ),
        .I1(img_info1_vc5[15]),
        .I2(\s_axi_rdata[15]_i_11_n_0 ),
        .I3(img_info1_vc4[15]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[15]_i_12_n_0 ),
        .O(\s_axi_rdata[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[15]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[15]),
        .I4(img_info1_vc1[15]),
        .I5(\s_axi_rdata[15]_i_13_n_0 ),
        .O(\s_axi_rdata[15]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata[15]_i_7 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .O(\s_axi_rdata[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[15]_i_8 
       (.I0(img_info1_vc6[15]),
        .I1(img_info1_vc7[15]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h000000A0000000C0)) 
    \s_axi_rdata[15]_i_9 
       (.I0(img_info1_vc3[15]),
        .I1(img_info1_vc2[15]),
        .I2(sel0[3]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[15]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[16]_i_2 
       (.I0(img_info1_vc3[16]),
        .I1(img_info1_vc1[16]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[16]_i_3 
       (.I0(img_info1_vc2[16]),
        .I1(img_info1_vc0[16]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF008000800080)) 
    \s_axi_rdata[16]_i_4 
       (.I0(interrupt_1[32]),
        .I1(sel0[3]),
        .I2(\s_axi_rdata[23]_i_5_n_0 ),
        .I3(sel0[2]),
        .I4(ier[16]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[17]_i_2 
       (.I0(img_info1_vc3[17]),
        .I1(img_info1_vc1[17]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[17]_i_3 
       (.I0(img_info1_vc2[17]),
        .I1(img_info1_vc0[17]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF008000800080)) 
    \s_axi_rdata[17]_i_4 
       (.I0(interrupt_1[33]),
        .I1(sel0[3]),
        .I2(\s_axi_rdata[23]_i_5_n_0 ),
        .I3(sel0[2]),
        .I4(ier[17]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[18]_i_2 
       (.I0(img_info1_vc3[18]),
        .I1(img_info1_vc1[18]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[18]_i_3 
       (.I0(img_info1_vc2[18]),
        .I1(img_info1_vc0[18]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[18]_i_4 
       (.I0(\s_axi_rdata_reg[20]_0 [0]),
        .I1(interrupt_0[11]),
        .I2(Q),
        .I3(\s_axi_rdata[30]_i_5_n_0 ),
        .I4(ier[18]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[19]_i_2 
       (.I0(img_info1_vc3[19]),
        .I1(img_info1_vc1[19]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[19]_i_3 
       (.I0(img_info1_vc2[19]),
        .I1(img_info1_vc0[19]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[1]_i_10 
       (.I0(img_info1_vc7[1]),
        .I1(\img_info2_vc7_reg_n_0_[1] ),
        .I2(\s_axi_rdata[1]_i_18_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF0AACC00)) 
    \s_axi_rdata[1]_i_12 
       (.I0(img_info1_vc11[1]),
        .I1(data9),
        .I2(\img_info2_vc11_reg_n_0_[1] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[1]_i_13 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[1] ),
        .I4(\img_info2_vc1_reg_n_0_[1] ),
        .I5(\s_axi_rdata[1]_i_19_n_0 ),
        .O(\s_axi_rdata[1]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[1]_i_14 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[1] ),
        .I4(\img_info2_vc3_reg_n_0_[1] ),
        .I5(\s_axi_rdata[1]_i_20_n_0 ),
        .O(\s_axi_rdata[1]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[1]_i_15 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc12[1]),
        .I4(\img_info2_vc12_reg_n_0_[1] ),
        .I5(\s_axi_rdata[1]_i_21_n_0 ),
        .O(\s_axi_rdata[1]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[1]_i_16 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[1] ),
        .I4(\img_info2_vc15_reg_n_0_[1] ),
        .I5(\s_axi_rdata[1]_i_22_n_0 ),
        .O(\s_axi_rdata[1]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[1]_i_17 
       (.I0(p_25_in[1]),
        .I1(\img_info2_vc4_reg_n_0_[1] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(Q),
        .I5(img_info1_vc4[1]),
        .O(\s_axi_rdata[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFF00F0F000004444)) 
    \s_axi_rdata[1]_i_18 
       (.I0(Q),
        .I1(\s_axi_rdata_reg[20]_0 [0]),
        .I2(img_info1_vc6[1]),
        .I3(\img_info2_vc6_reg_n_0_[1] ),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[1]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[1]_i_19 
       (.I0(img_info1_vc1[1]),
        .I1(img_info1_vc0[1]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[1]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8A0A820288088000)) 
    \s_axi_rdata[1]_i_2 
       (.I0(\s_axi_rdata[1]_i_6_n_0 ),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(\img_info2_vc9_reg_n_0_[1] ),
        .I4(img_info1_vc9[1]),
        .I5(ier[1]),
        .O(\s_axi_rdata[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[1]_i_20 
       (.I0(img_info1_vc3[1]),
        .I1(img_info1_vc2[1]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[1]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[1]_i_21 
       (.I0(\img_info2_vc13_reg_n_0_[1] ),
        .I1(img_info1_vc13[1]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[1]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[1]_i_22 
       (.I0(img_info1_vc15[1]),
        .I1(img_info1_vc14[1]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[1]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h00EAFFFF00EA0000)) 
    \s_axi_rdata[1]_i_3 
       (.I0(\s_axi_rdata[1]_i_7_n_0 ),
        .I1(\img_info2_vc8_reg_n_0_[1] ),
        .I2(\s_axi_rdata[1]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[1]_i_9_n_0 ),
        .O(\s_axi_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[1]_i_5 
       (.I0(\s_axi_rdata[1]_i_13_n_0 ),
        .I1(\s_axi_rdata[1]_i_14_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[1]_i_15_n_0 ),
        .I5(\s_axi_rdata[1]_i_16_n_0 ),
        .O(\s_axi_rdata[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[1]_i_6 
       (.I0(sel0[3]),
        .I1(sel0[1]),
        .O(\s_axi_rdata[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000E0EFF000000)) 
    \s_axi_rdata[1]_i_7 
       (.I0(p_0_in39_in),
        .I1(interrupt_0[0]),
        .I2(Q),
        .I3(img_info1_vc8[1]),
        .I4(sel0[5]),
        .I5(sel0[0]),
        .O(\s_axi_rdata[1]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[1]_i_8 
       (.I0(sel0[0]),
        .I1(sel0[5]),
        .O(\s_axi_rdata[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[1]_i_9 
       (.I0(img_info1_vc5[1]),
        .I1(\img_info2_vc5_reg_n_0_[1] ),
        .I2(\s_axi_rdata[1]_i_17_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[20]_i_2 
       (.I0(img_info1_vc3[20]),
        .I1(img_info1_vc1[20]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[20]_i_3 
       (.I0(img_info1_vc2[20]),
        .I1(img_info1_vc0[20]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[20]_i_4 
       (.I0(\s_axi_rdata_reg[20]_0 [1]),
        .I1(interrupt_0[13]),
        .I2(Q),
        .I3(\s_axi_rdata[30]_i_5_n_0 ),
        .I4(ier[20]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[21]_i_2 
       (.I0(img_info1_vc3[21]),
        .I1(img_info1_vc1[21]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[21]_i_3 
       (.I0(img_info1_vc2[21]),
        .I1(img_info1_vc0[21]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[21]_i_4 
       (.I0(incorrect_lanes),
        .I1(interrupt_0[14]),
        .I2(Q),
        .I3(\s_axi_rdata[30]_i_5_n_0 ),
        .I4(ier[21]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[22]_i_2 
       (.I0(img_info1_vc3[22]),
        .I1(img_info1_vc1[22]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[22]_i_3 
       (.I0(img_info1_vc2[22]),
        .I1(img_info1_vc0[22]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[22]_i_4 
       (.I0(dest_pulse),
        .I1(interrupt_0[15]),
        .I2(Q),
        .I3(\s_axi_rdata[30]_i_5_n_0 ),
        .I4(ier[22]),
        .I5(\s_axi_rdata[29]_i_4_n_0 ),
        .O(\s_axi_rdata[22]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT4 #(
    .INIT(16'h0400)) 
    \s_axi_rdata[22]_i_7 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(sel0[3]),
        .O(\s_axi_rdata[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0C000000000)) 
    \s_axi_rdata[23]_i_2 
       (.I0(img_info1_vc2[23]),
        .I1(img_info1_vc0[23]),
        .I2(\s_axi_rdata[25]_i_3_n_0 ),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[23]_i_6_n_0 ),
        .I5(sel0[4]),
        .O(\s_axi_rdata[23]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \s_axi_rdata[23]_i_5 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\s_axi_rdata[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[23]_i_6 
       (.I0(img_info1_vc3[23]),
        .I1(img_info1_vc1[23]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0C000000000)) 
    \s_axi_rdata[24]_i_2 
       (.I0(img_info1_vc2[24]),
        .I1(img_info1_vc0[24]),
        .I2(\s_axi_rdata[25]_i_3_n_0 ),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[24]_i_3_n_0 ),
        .I5(sel0[4]),
        .O(\s_axi_rdata[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[24]_i_3 
       (.I0(img_info1_vc3[24]),
        .I1(img_info1_vc1[24]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[24]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata[25]_i_2 
       (.I0(sel0[2]),
        .I1(sel0[4]),
        .O(\s_axi_rdata[25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \s_axi_rdata[25]_i_3 
       (.I0(sel0[3]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(sel0[1]),
        .O(\s_axi_rdata[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0C000000000)) 
    \s_axi_rdata[25]_i_4 
       (.I0(img_info1_vc2[25]),
        .I1(img_info1_vc0[25]),
        .I2(\s_axi_rdata[25]_i_3_n_0 ),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[25]_i_5_n_0 ),
        .I5(sel0[4]),
        .O(\s_axi_rdata[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[25]_i_5 
       (.I0(img_info1_vc3[25]),
        .I1(img_info1_vc1[25]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEF000EEEE0000)) 
    \s_axi_rdata[26]_i_1 
       (.I0(\s_axi_rdata[26]_i_2_n_0 ),
        .I1(\s_axi_rdata[26]_i_3_n_0 ),
        .I2(lp_count_all[10]),
        .I3(\s_axi_rdata[28]_i_4_n_0 ),
        .I4(sel0[4]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[26]_i_2 
       (.I0(img_info1_vc3[26]),
        .I1(img_info1_vc1[26]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[26]_i_3 
       (.I0(img_info1_vc2[26]),
        .I1(img_info1_vc0[26]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEF000EEEE0000)) 
    \s_axi_rdata[27]_i_1 
       (.I0(\s_axi_rdata[27]_i_2_n_0 ),
        .I1(\s_axi_rdata[27]_i_3_n_0 ),
        .I2(lp_count_all[11]),
        .I3(\s_axi_rdata[28]_i_4_n_0 ),
        .I4(sel0[4]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[27]_i_2 
       (.I0(img_info1_vc3[27]),
        .I1(img_info1_vc1[27]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[27]_i_3 
       (.I0(img_info1_vc2[27]),
        .I1(img_info1_vc0[27]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEF000EEEE0000)) 
    \s_axi_rdata[28]_i_1 
       (.I0(\s_axi_rdata[28]_i_2_n_0 ),
        .I1(\s_axi_rdata[28]_i_3_n_0 ),
        .I2(lp_count_all[12]),
        .I3(\s_axi_rdata[28]_i_4_n_0 ),
        .I4(sel0[4]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[28]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[28]_i_2 
       (.I0(img_info1_vc3[28]),
        .I1(img_info1_vc1[28]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[28]_i_3 
       (.I0(img_info1_vc2[28]),
        .I1(img_info1_vc0[28]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[28]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \s_axi_rdata[28]_i_4 
       (.I0(sel0[3]),
        .I1(sel0[1]),
        .I2(Q),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF8F888888)) 
    \s_axi_rdata[29]_i_1 
       (.I0(\s_axi_rdata[29]_i_2_n_0 ),
        .I1(lp_count_all[13]),
        .I2(sel0[4]),
        .I3(ier[29]),
        .I4(\s_axi_rdata[29]_i_4_n_0 ),
        .I5(\s_axi_rdata[29]_i_5_n_0 ),
        .O(\s_axi_rdata[29]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_10 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_13 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_13 ),
        .O(\s_axi_rdata[29]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_100 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [1]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [1]),
        .O(\s_axi_rdata[29]_i_100_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \s_axi_rdata[29]_i_101 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .O(\s_axi_rdata[29]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_11 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_14 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_14 ),
        .O(\s_axi_rdata[29]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_12 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_15 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_15 ),
        .O(\s_axi_rdata[29]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_13 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_8 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_8 ),
        .O(\s_axi_rdata[29]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_14 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_9 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_9 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_8 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_8 ),
        .O(\s_axi_rdata[29]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_15 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_10 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_10 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_9 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_9 ),
        .O(\s_axi_rdata[29]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_16 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_11 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_11 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_10 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_10 ),
        .O(\s_axi_rdata[29]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_17 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_12 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_12 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_11 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_11 ),
        .O(\s_axi_rdata[29]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_18 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_13 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_13 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_12 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_12 ),
        .O(\s_axi_rdata[29]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_19 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_14 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_14 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_13 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_13 ),
        .O(\s_axi_rdata[29]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \s_axi_rdata[29]_i_2 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(Q),
        .I3(sel0[1]),
        .I4(sel0[3]),
        .I5(\s_axi_rdata[25]_i_2_n_0 ),
        .O(\s_axi_rdata[29]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_20 
       (.I0(\s_axi_rdata_reg[29]_i_39_n_15 ),
        .I1(\s_axi_rdata_reg[29]_i_38_n_15 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_14 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_14 ),
        .O(\s_axi_rdata[29]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_21 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_8 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_8 ),
        .I2(\s_axi_rdata_reg[29]_i_38_n_15 ),
        .I3(\s_axi_rdata_reg[29]_i_39_n_15 ),
        .O(\s_axi_rdata[29]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[29]_i_22 
       (.I0(img_info1_vc3[29]),
        .I1(img_info1_vc1[29]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[29]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_23 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_9 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_9 ),
        .O(\s_axi_rdata[29]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_24 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_10 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_10 ),
        .O(\s_axi_rdata[29]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_25 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_11 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_11 ),
        .O(\s_axi_rdata[29]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_26 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_12 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_12 ),
        .O(\s_axi_rdata[29]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_27 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_13 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_13 ),
        .O(\s_axi_rdata[29]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_28 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_14 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_14 ),
        .O(\s_axi_rdata[29]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_29 
       (.I0(\s_axi_rdata_reg[29]_i_40_n_15 ),
        .I1(\s_axi_rdata_reg[29]_i_41_n_15 ),
        .O(\s_axi_rdata[29]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_30 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_9 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_9 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_8 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_8 ),
        .O(\s_axi_rdata[29]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_31 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_10 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_10 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_9 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_9 ),
        .O(\s_axi_rdata[29]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_32 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_11 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_11 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_10 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_10 ),
        .O(\s_axi_rdata[29]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_33 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_12 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_12 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_11 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_11 ),
        .O(\s_axi_rdata[29]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_34 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_13 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_13 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_12 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_12 ),
        .O(\s_axi_rdata[29]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_35 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_14 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_14 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_13 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_13 ),
        .O(\s_axi_rdata[29]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_36 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_15 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_15 ),
        .I2(\s_axi_rdata_reg[29]_i_40_n_14 ),
        .I3(\s_axi_rdata_reg[29]_i_41_n_14 ),
        .O(\s_axi_rdata[29]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \s_axi_rdata[29]_i_37 
       (.I0(\s_axi_rdata_reg[29]_i_41_n_15 ),
        .I1(\s_axi_rdata_reg[29]_i_40_n_15 ),
        .O(\s_axi_rdata[29]_i_37_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    \s_axi_rdata[29]_i_4 
       (.I0(sel0[1]),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(sel0[3]),
        .I4(sel0[2]),
        .O(\s_axi_rdata[29]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_42 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [13]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [13]),
        .O(\s_axi_rdata[29]_i_42_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_43 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [12]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [12]),
        .O(\s_axi_rdata[29]_i_43_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_44 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [11]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [11]),
        .O(\s_axi_rdata[29]_i_44_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_45 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [10]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [10]),
        .O(\s_axi_rdata[29]_i_45_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_46 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [9]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [9]),
        .O(\s_axi_rdata[29]_i_46_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_47 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8]),
        .O(\s_axi_rdata[29]_i_47_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_48 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [7]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [7]),
        .O(\s_axi_rdata[29]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_49 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [14]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [14]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [15]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [15]),
        .O(\s_axi_rdata[29]_i_49_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFA0C000000000)) 
    \s_axi_rdata[29]_i_5 
       (.I0(img_info1_vc2[29]),
        .I1(img_info1_vc0[29]),
        .I2(\s_axi_rdata[25]_i_3_n_0 ),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[29]_i_22_n_0 ),
        .I5(sel0[4]),
        .O(\s_axi_rdata[29]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_50 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [13]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [13]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [14]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [14]),
        .O(\s_axi_rdata[29]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_51 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [12]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [12]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [13]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [13]),
        .O(\s_axi_rdata[29]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_52 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [11]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [11]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [12]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [12]),
        .O(\s_axi_rdata[29]_i_52_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_53 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [10]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [10]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [11]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [11]),
        .O(\s_axi_rdata[29]_i_53_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_54 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [9]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [9]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [10]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [10]),
        .O(\s_axi_rdata[29]_i_54_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_55 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [9]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [9]),
        .O(\s_axi_rdata[29]_i_55_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_56 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [7]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [7]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [8]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [8]),
        .O(\s_axi_rdata[29]_i_56_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_57 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [13]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [13]),
        .O(\s_axi_rdata[29]_i_57_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_58 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [12]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [12]),
        .O(\s_axi_rdata[29]_i_58_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_59 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [11]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [11]),
        .O(\s_axi_rdata[29]_i_59_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_60 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [10]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [10]),
        .O(\s_axi_rdata[29]_i_60_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_61 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [9]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [9]),
        .O(\s_axi_rdata[29]_i_61_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_62 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8]),
        .O(\s_axi_rdata[29]_i_62_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_63 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [7]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [7]),
        .O(\s_axi_rdata[29]_i_63_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_64 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [14]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [14]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [15]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [15]),
        .O(\s_axi_rdata[29]_i_64_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_65 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [13]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [13]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [14]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [14]),
        .O(\s_axi_rdata[29]_i_65_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_66 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [12]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [12]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [13]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [13]),
        .O(\s_axi_rdata[29]_i_66_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_67 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [11]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [11]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [12]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [12]),
        .O(\s_axi_rdata[29]_i_67_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_68 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [10]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [10]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [11]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [11]),
        .O(\s_axi_rdata[29]_i_68_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_69 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [9]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [9]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [10]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [10]),
        .O(\s_axi_rdata[29]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_7 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_10 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_10 ),
        .O(\s_axi_rdata[29]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_70 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [9]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [9]),
        .O(\s_axi_rdata[29]_i_70_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_71 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [7]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [7]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [8]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [8]),
        .O(\s_axi_rdata[29]_i_71_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_72 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [6]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [6]),
        .O(\s_axi_rdata[29]_i_72_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_73 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [5]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [5]),
        .O(\s_axi_rdata[29]_i_73_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_74 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [4]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [4]),
        .O(\s_axi_rdata[29]_i_74_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_75 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [3]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [3]),
        .O(\s_axi_rdata[29]_i_75_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_76 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [2]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [2]),
        .O(\s_axi_rdata[29]_i_76_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_77 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [1]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [1]),
        .O(\s_axi_rdata[29]_i_77_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_78 
       (.I0(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .I1(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .O(\s_axi_rdata[29]_i_78_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_79 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [6]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [6]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [7]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [7]),
        .O(\s_axi_rdata[29]_i_79_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_8 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_11 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_11 ),
        .O(\s_axi_rdata[29]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_80 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [5]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [5]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [6]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [6]),
        .O(\s_axi_rdata[29]_i_80_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_81 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [4]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [4]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [5]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [5]),
        .O(\s_axi_rdata[29]_i_81_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_82 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [3]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [3]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [4]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [4]),
        .O(\s_axi_rdata[29]_i_82_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_83 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [2]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [2]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [3]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [3]),
        .O(\s_axi_rdata[29]_i_83_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_84 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [1]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [1]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [2]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [2]),
        .O(\s_axi_rdata[29]_i_84_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_85 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .I2(\LP_CNT_C2R[3].lp_count_reg[3]_2 [1]),
        .I3(\LP_CNT_C2R[2].lp_count_reg[2]_3 [1]),
        .O(\s_axi_rdata[29]_i_85_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \s_axi_rdata[29]_i_86 
       (.I0(\LP_CNT_C2R[2].lp_count_reg[2]_3 [0]),
        .I1(\LP_CNT_C2R[3].lp_count_reg[3]_2 [0]),
        .O(\s_axi_rdata[29]_i_86_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_87 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [6]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [6]),
        .O(\s_axi_rdata[29]_i_87_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_88 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [5]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [5]),
        .O(\s_axi_rdata[29]_i_88_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_89 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [4]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [4]),
        .O(\s_axi_rdata[29]_i_89_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_9 
       (.I0(\s_axi_rdata_reg[29]_i_38_n_12 ),
        .I1(\s_axi_rdata_reg[29]_i_39_n_12 ),
        .O(\s_axi_rdata[29]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_90 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [3]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [3]),
        .O(\s_axi_rdata[29]_i_90_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_91 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [2]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [2]),
        .O(\s_axi_rdata[29]_i_91_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_92 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [1]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [1]),
        .O(\s_axi_rdata[29]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata[29]_i_93 
       (.I0(\LP_CNT_C2R[1].lp_count_reg[1]_4 [0]),
        .I1(\LP_CNT_C2R[0].lp_count_reg[0]_5 [0]),
        .O(\s_axi_rdata[29]_i_93_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_94 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [6]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [6]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [7]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [7]),
        .O(\s_axi_rdata[29]_i_94_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_95 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [5]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [5]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [6]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [6]),
        .O(\s_axi_rdata[29]_i_95_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_96 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [4]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [4]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [5]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [5]),
        .O(\s_axi_rdata[29]_i_96_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_97 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [3]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [3]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [4]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [4]),
        .O(\s_axi_rdata[29]_i_97_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_98 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [2]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [2]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [3]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [3]),
        .O(\s_axi_rdata[29]_i_98_n_0 ));
  LUT4 #(
    .INIT(16'h8778)) 
    \s_axi_rdata[29]_i_99 
       (.I0(\LP_CNT_C2R[0].lp_count_reg[0]_5 [1]),
        .I1(\LP_CNT_C2R[1].lp_count_reg[1]_4 [1]),
        .I2(\LP_CNT_C2R[1].lp_count_reg[1]_4 [2]),
        .I3(\LP_CNT_C2R[0].lp_count_reg[0]_5 [2]),
        .O(\s_axi_rdata[29]_i_99_n_0 ));
  LUT5 #(
    .INIT(32'hF0CC00AA)) 
    \s_axi_rdata[2]_i_10 
       (.I0(ier[2]),
        .I1(img_info1_vc9[2]),
        .I2(\img_info2_vc9_reg_n_0_[2] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[2]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF0AACC00)) 
    \s_axi_rdata[2]_i_11 
       (.I0(img_info1_vc8[2]),
        .I1(interrupt_1[2]),
        .I2(\img_info2_vc8_reg_n_0_[2] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[2]_i_12 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc4[2]),
        .I4(\img_info2_vc4_reg_n_0_[2] ),
        .I5(\s_axi_rdata[2]_i_19_n_0 ),
        .O(\s_axi_rdata[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[2]_i_15 
       (.I0(img_info1_vc1[2]),
        .I1(img_info1_vc0[2]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[2]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[2]_i_16 
       (.I0(img_info1_vc3[2]),
        .I1(img_info1_vc2[2]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[2]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[2]_i_17 
       (.I0(\LX_INFO_GEN[1].lx_info_reg[1]_1 [2]),
        .I1(\img_info2_vc12_reg_n_0_[2] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\LX_INFO_GEN[0].lx_info_reg[0]_0 [2]),
        .I5(img_info1_vc12[2]),
        .O(\s_axi_rdata[2]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[2]_i_18 
       (.I0(img_info1_vc15[2]),
        .I1(img_info1_vc14[2]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[2]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[2]_i_19 
       (.I0(\img_info2_vc5_reg_n_0_[2] ),
        .I1(img_info1_vc5[2]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[2]_i_2 
       (.I0(\s_axi_rdata[2]_i_6_n_0 ),
        .I1(\s_axi_rdata[2]_i_7_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[2]_i_8_n_0 ),
        .I5(\s_axi_rdata[2]_i_9_n_0 ),
        .O(\s_axi_rdata[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA000000FC0000)) 
    \s_axi_rdata[2]_i_20 
       (.I0(\img_info2_vc10_reg_n_0_[2] ),
        .I1(p_0_in30_in),
        .I2(interrupt_0[3]),
        .I3(Q),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[2]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F7B3C480)) 
    \s_axi_rdata[2]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(\s_axi_rdata[2]_i_10_n_0 ),
        .I3(\s_axi_rdata[2]_i_11_n_0 ),
        .I4(\s_axi_rdata[2]_i_12_n_0 ),
        .I5(sel0[2]),
        .O(\s_axi_rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[2]_i_6 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[2] ),
        .I4(\img_info2_vc1_reg_n_0_[2] ),
        .I5(\s_axi_rdata[2]_i_15_n_0 ),
        .O(\s_axi_rdata[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[2]_i_7 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[2] ),
        .I4(\img_info2_vc3_reg_n_0_[2] ),
        .I5(\s_axi_rdata[2]_i_16_n_0 ),
        .O(\s_axi_rdata[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[2]_i_8 
       (.I0(img_info1_vc13[2]),
        .I1(\img_info2_vc13_reg_n_0_[2] ),
        .I2(\s_axi_rdata[2]_i_17_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[2]_i_9 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[2] ),
        .I4(\img_info2_vc15_reg_n_0_[2] ),
        .I5(\s_axi_rdata[2]_i_18_n_0 ),
        .O(\s_axi_rdata[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFE0EFE0EFE0)) 
    \s_axi_rdata[30]_i_1 
       (.I0(\s_axi_rdata[30]_i_2_n_0 ),
        .I1(\s_axi_rdata[30]_i_3_n_0 ),
        .I2(sel0[4]),
        .I3(\s_axi_rdata[30]_i_4_n_0 ),
        .I4(vcx_err),
        .I5(\s_axi_rdata[30]_i_5_n_0 ),
        .O(\s_axi_rdata[30]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[30]_i_2 
       (.I0(img_info1_vc3[30]),
        .I1(img_info1_vc1[30]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0A0000000C000000)) 
    \s_axi_rdata[30]_i_3 
       (.I0(img_info1_vc2[30]),
        .I1(img_info1_vc0[30]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[30]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \s_axi_rdata[30]_i_4 
       (.I0(ier[30]),
        .I1(\s_axi_rdata[29]_i_4_n_0 ),
        .I2(\s_axi_rdata[28]_i_4_n_0 ),
        .I3(sel0[2]),
        .I4(lp_count_all[14]),
        .O(\s_axi_rdata[30]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \s_axi_rdata[30]_i_5 
       (.I0(sel0[3]),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .O(\s_axi_rdata[30]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \s_axi_rdata[30]_i_6 
       (.I0(sel0[0]),
        .I1(sel0[5]),
        .O(\s_axi_rdata[30]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \s_axi_rdata[31]_i_1 
       (.I0(rd_req),
        .I1(s_axi_aresetn),
        .O(\s_axi_rdata[31]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \s_axi_rdata[31]_i_2 
       (.I0(s_axi_rvalid_reg_0),
        .O(\s_axi_rdata[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF808080)) 
    \s_axi_rdata[31]_i_4 
       (.I0(lp_count_all[15]),
        .I1(sel0[2]),
        .I2(\s_axi_rdata[28]_i_4_n_0 ),
        .I3(\s_axi_rdata[29]_i_4_n_0 ),
        .I4(ier[31]),
        .I5(\s_axi_rdata[31]_i_6_n_0 ),
        .O(\s_axi_rdata[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFAEABAAA)) 
    \s_axi_rdata[31]_i_5 
       (.I0(\s_axi_rdata[31]_i_7_n_0 ),
        .I1(sel0[2]),
        .I2(\s_axi_rdata[25]_i_3_n_0 ),
        .I3(img_info1_vc0[31]),
        .I4(img_info1_vc2[31]),
        .O(\s_axi_rdata[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0040004000400000)) 
    \s_axi_rdata[31]_i_6 
       (.I0(sel0[2]),
        .I1(\s_axi_rdata[23]_i_5_n_0 ),
        .I2(sel0[3]),
        .I3(Q),
        .I4(interrupt_0[16]),
        .I5(isr_55),
        .O(\s_axi_rdata[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hA0000000C0000000)) 
    \s_axi_rdata[31]_i_7 
       (.I0(img_info1_vc3[31]),
        .I1(img_info1_vc1[31]),
        .I2(sel0[1]),
        .I3(\s_axi_rdata[30]_i_6_n_0 ),
        .I4(sel0[3]),
        .I5(sel0[2]),
        .O(\s_axi_rdata[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[3]_i_10 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[3] ),
        .I4(\img_info2_vc15_reg_n_0_[3] ),
        .I5(\s_axi_rdata[3]_i_21_n_0 ),
        .O(\s_axi_rdata[3]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF0CC00AA)) 
    \s_axi_rdata[3]_i_11 
       (.I0(\ier_reg[9]_0 [0]),
        .I1(img_info1_vc9[3]),
        .I2(\img_info2_vc9_reg_n_0_[3] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[3]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hF0AACC00)) 
    \s_axi_rdata[3]_i_12 
       (.I0(img_info1_vc8[3]),
        .I1(interrupt_1[3]),
        .I2(\img_info2_vc8_reg_n_0_[3] ),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA0802000)) 
    \s_axi_rdata[3]_i_13 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc5[3]),
        .I4(\img_info2_vc5_reg_n_0_[3] ),
        .I5(\s_axi_rdata[3]_i_22_n_0 ),
        .O(\s_axi_rdata[3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFF00F0F000004444)) 
    \s_axi_rdata[3]_i_14 
       (.I0(Q),
        .I1(\s_axi_rdata_reg[20]_0 [1]),
        .I2(img_info1_vc6[3]),
        .I3(\img_info2_vc6_reg_n_0_[3] ),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[3]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \s_axi_rdata[3]_i_15 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\s_axi_rdata[3]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \s_axi_rdata[3]_i_16 
       (.I0(sel0[0]),
        .I1(sel0[5]),
        .I2(sel0[1]),
        .O(\s_axi_rdata[3]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[3]_i_18 
       (.I0(img_info1_vc1[3]),
        .I1(img_info1_vc0[3]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[3]_i_18_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[3]_i_19 
       (.I0(img_info1_vc3[3]),
        .I1(img_info1_vc2[3]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[3]_i_2 
       (.I0(\s_axi_rdata[3]_i_7_n_0 ),
        .I1(\s_axi_rdata[3]_i_8_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[3]_i_9_n_0 ),
        .I5(\s_axi_rdata[3]_i_10_n_0 ),
        .O(\s_axi_rdata[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[3]_i_20 
       (.I0(\LX_INFO_GEN[1].lx_info_reg[1]_1 [3]),
        .I1(\img_info2_vc12_reg_n_0_[3] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\LX_INFO_GEN[0].lx_info_reg[0]_0 [3]),
        .I5(img_info1_vc12[3]),
        .O(\s_axi_rdata[3]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[3]_i_21 
       (.I0(img_info1_vc15[3]),
        .I1(img_info1_vc14[3]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[3]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'h54441404)) 
    \s_axi_rdata[3]_i_22 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(img_info1_vc4[3]),
        .I4(\img_info2_vc4_reg_n_0_[3] ),
        .O(\s_axi_rdata[3]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA000000FC0000)) 
    \s_axi_rdata[3]_i_23 
       (.I0(\img_info2_vc10_reg_n_0_[3] ),
        .I1(p_0_in29_in),
        .I2(interrupt_0[4]),
        .I3(Q),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[3]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h00000000F7B3C480)) 
    \s_axi_rdata[3]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[3]),
        .I2(\s_axi_rdata[3]_i_11_n_0 ),
        .I3(\s_axi_rdata[3]_i_12_n_0 ),
        .I4(\s_axi_rdata[3]_i_13_n_0 ),
        .I5(sel0[2]),
        .O(\s_axi_rdata[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rdata[3]_i_4 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .O(\s_axi_rdata[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[3]_i_5 
       (.I0(img_info1_vc7[3]),
        .I1(\img_info2_vc7_reg_n_0_[3] ),
        .I2(\s_axi_rdata[3]_i_14_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[3]_i_7 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[3] ),
        .I4(\img_info2_vc1_reg_n_0_[3] ),
        .I5(\s_axi_rdata[3]_i_18_n_0 ),
        .O(\s_axi_rdata[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[3]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[3] ),
        .I4(\img_info2_vc3_reg_n_0_[3] ),
        .I5(\s_axi_rdata[3]_i_19_n_0 ),
        .O(\s_axi_rdata[3]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[3]_i_9 
       (.I0(img_info1_vc13[3]),
        .I1(\img_info2_vc13_reg_n_0_[3] ),
        .I2(\s_axi_rdata[3]_i_20_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[4]_i_10 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc4[4]),
        .I4(\img_info2_vc4_reg_n_0_[4] ),
        .I5(\s_axi_rdata[4]_i_21_n_0 ),
        .O(\s_axi_rdata[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hA8288808A0208000)) 
    \s_axi_rdata[4]_i_11 
       (.I0(\s_axi_rdata[13]_i_15_n_0 ),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(\img_info2_vc8_reg_n_0_[4] ),
        .I4(interrupt_1[4]),
        .I5(img_info1_vc8[4]),
        .O(\s_axi_rdata[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8A0A820288088000)) 
    \s_axi_rdata[4]_i_12 
       (.I0(\s_axi_rdata[1]_i_6_n_0 ),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(\img_info2_vc9_reg_n_0_[4] ),
        .I4(img_info1_vc9[4]),
        .I5(\ier_reg[9]_0 [1]),
        .O(\s_axi_rdata[4]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA000000FC0000)) 
    \s_axi_rdata[4]_i_14 
       (.I0(\img_info2_vc10_reg_n_0_[4] ),
        .I1(p_0_in28_in),
        .I2(interrupt_0[5]),
        .I3(Q),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[4]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \s_axi_rdata[4]_i_15 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc11_reg_n_0_[4] ),
        .O(\s_axi_rdata[4]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[4]_i_16 
       (.I0(img_info1_vc1[4]),
        .I1(img_info1_vc0[4]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[4]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[4]_i_17 
       (.I0(img_info1_vc3[4]),
        .I1(img_info1_vc2[4]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[4]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[4]_i_18 
       (.I0(\LX_INFO_GEN[1].lx_info_reg[1]_1 [4]),
        .I1(\img_info2_vc12_reg_n_0_[4] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\LX_INFO_GEN[0].lx_info_reg[0]_0 [4]),
        .I5(img_info1_vc12[4]),
        .O(\s_axi_rdata[4]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[4]_i_19 
       (.I0(img_info1_vc15[4]),
        .I1(img_info1_vc14[4]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[4]_i_2 
       (.I0(\s_axi_rdata[4]_i_5_n_0 ),
        .I1(\s_axi_rdata[4]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[4]_i_7_n_0 ),
        .I5(\s_axi_rdata[4]_i_8_n_0 ),
        .O(\s_axi_rdata[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[4]_i_20 
       (.I0(\img_info2_vc7_reg_n_0_[4] ),
        .I1(img_info1_vc7[4]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[4]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[4]_i_21 
       (.I0(\img_info2_vc5_reg_n_0_[4] ),
        .I1(img_info1_vc5[4]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[4]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h33BB33BB33BB00B8)) 
    \s_axi_rdata[4]_i_3 
       (.I0(\s_axi_rdata[4]_i_9_n_0 ),
        .I1(sel0[2]),
        .I2(\s_axi_rdata[4]_i_10_n_0 ),
        .I3(sel0[3]),
        .I4(\s_axi_rdata[4]_i_11_n_0 ),
        .I5(\s_axi_rdata[4]_i_12_n_0 ),
        .O(\s_axi_rdata[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[4]_i_5 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[4] ),
        .I4(\img_info2_vc1_reg_n_0_[4] ),
        .I5(\s_axi_rdata[4]_i_16_n_0 ),
        .O(\s_axi_rdata[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[4]_i_6 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[4] ),
        .I4(\img_info2_vc3_reg_n_0_[4] ),
        .I5(\s_axi_rdata[4]_i_17_n_0 ),
        .O(\s_axi_rdata[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[4]_i_7 
       (.I0(img_info1_vc13[4]),
        .I1(\img_info2_vc13_reg_n_0_[4] ),
        .I2(\s_axi_rdata[4]_i_18_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[4]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[4] ),
        .I4(\img_info2_vc15_reg_n_0_[4] ),
        .I5(\s_axi_rdata[4]_i_19_n_0 ),
        .O(\s_axi_rdata[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[4]_i_9 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc6[4]),
        .I4(\img_info2_vc6_reg_n_0_[4] ),
        .I5(\s_axi_rdata[4]_i_20_n_0 ),
        .O(\s_axi_rdata[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[5]_i_10 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc4[5]),
        .I4(\img_info2_vc4_reg_n_0_[5] ),
        .I5(\s_axi_rdata[5]_i_21_n_0 ),
        .O(\s_axi_rdata[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hA8288808A0208000)) 
    \s_axi_rdata[5]_i_11 
       (.I0(\s_axi_rdata[13]_i_15_n_0 ),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(\img_info2_vc8_reg_n_0_[5] ),
        .I4(interrupt_1[5]),
        .I5(img_info1_vc8[5]),
        .O(\s_axi_rdata[5]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8A0A820288088000)) 
    \s_axi_rdata[5]_i_12 
       (.I0(\s_axi_rdata[1]_i_6_n_0 ),
        .I1(sel0[5]),
        .I2(sel0[0]),
        .I3(\img_info2_vc9_reg_n_0_[5] ),
        .I4(img_info1_vc9[5]),
        .I5(ier[5]),
        .O(\s_axi_rdata[5]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAAAA000000FC0000)) 
    \s_axi_rdata[5]_i_14 
       (.I0(\img_info2_vc10_reg_n_0_[5] ),
        .I1(p_0_in27_in),
        .I2(interrupt_0[6]),
        .I3(Q),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[5]_i_14_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \s_axi_rdata[5]_i_15 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc11_reg_n_0_[5] ),
        .O(\s_axi_rdata[5]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[5]_i_16 
       (.I0(img_info1_vc1[5]),
        .I1(img_info1_vc0[5]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[5]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'h000A000C)) 
    \s_axi_rdata[5]_i_17 
       (.I0(img_info1_vc3[5]),
        .I1(img_info1_vc2[5]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[5]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hCAFFCAF0CA0FCA00)) 
    \s_axi_rdata[5]_i_18 
       (.I0(\LX_INFO_GEN[1].lx_info_reg[1]_1 [5]),
        .I1(\img_info2_vc12_reg_n_0_[5] ),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(\LX_INFO_GEN[0].lx_info_reg[0]_0 [5]),
        .I5(img_info1_vc12[5]),
        .O(\s_axi_rdata[5]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h0A000C00)) 
    \s_axi_rdata[5]_i_19 
       (.I0(img_info1_vc15[5]),
        .I1(img_info1_vc14[5]),
        .I2(sel0[0]),
        .I3(sel0[5]),
        .I4(sel0[1]),
        .O(\s_axi_rdata[5]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hCFAFCFA0C0AFC0A0)) 
    \s_axi_rdata[5]_i_2 
       (.I0(\s_axi_rdata[5]_i_5_n_0 ),
        .I1(\s_axi_rdata[5]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(\s_axi_rdata[5]_i_7_n_0 ),
        .I5(\s_axi_rdata[5]_i_8_n_0 ),
        .O(\s_axi_rdata[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[5]_i_20 
       (.I0(\img_info2_vc7_reg_n_0_[5] ),
        .I1(img_info1_vc7[5]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[5]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'hA0C00000)) 
    \s_axi_rdata[5]_i_21 
       (.I0(\img_info2_vc5_reg_n_0_[5] ),
        .I1(img_info1_vc5[5]),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(sel0[5]),
        .O(\s_axi_rdata[5]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h33BB33BB33BB00B8)) 
    \s_axi_rdata[5]_i_3 
       (.I0(\s_axi_rdata[5]_i_9_n_0 ),
        .I1(sel0[2]),
        .I2(\s_axi_rdata[5]_i_10_n_0 ),
        .I3(sel0[3]),
        .I4(\s_axi_rdata[5]_i_11_n_0 ),
        .I5(\s_axi_rdata[5]_i_12_n_0 ),
        .O(\s_axi_rdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[5]_i_5 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc0_reg_n_0_[5] ),
        .I4(\img_info2_vc1_reg_n_0_[5] ),
        .I5(\s_axi_rdata[5]_i_16_n_0 ),
        .O(\s_axi_rdata[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C080400)) 
    \s_axi_rdata[5]_i_6 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc2_reg_n_0_[5] ),
        .I4(\img_info2_vc3_reg_n_0_[5] ),
        .I5(\s_axi_rdata[5]_i_17_n_0 ),
        .O(\s_axi_rdata[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hCCF0AAF000F000F0)) 
    \s_axi_rdata[5]_i_7 
       (.I0(img_info1_vc13[5]),
        .I1(\img_info2_vc13_reg_n_0_[5] ),
        .I2(\s_axi_rdata[5]_i_18_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(sel0[5]),
        .O(\s_axi_rdata[5]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[5]_i_8 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[5]),
        .I3(\img_info2_vc14_reg_n_0_[5] ),
        .I4(\img_info2_vc15_reg_n_0_[5] ),
        .I5(\s_axi_rdata[5]_i_19_n_0 ),
        .O(\s_axi_rdata[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0A080200)) 
    \s_axi_rdata[5]_i_9 
       (.I0(sel0[5]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(img_info1_vc6[5]),
        .I4(\img_info2_vc6_reg_n_0_[5] ),
        .I5(\s_axi_rdata[5]_i_20_n_0 ),
        .O(\s_axi_rdata[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[6]_i_10 
       (.I0(img_info1_vc12[6]),
        .I1(img_info1_vc13[6]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[6]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[6]_i_11 
       (.I0(img_info1_vc15[6]),
        .I1(img_info1_vc14[6]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[6]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[6]_i_3 
       (.I0(\s_axi_rdata[6]_i_9_n_0 ),
        .I1(img_info1_vc9[6]),
        .I2(img_info1_vc8[6]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[6]_i_4 
       (.I0(img_info1_vc4[6]),
        .I1(img_info1_vc5[6]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[6]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[6]),
        .I4(img_info1_vc1[6]),
        .I5(\s_axi_rdata[6]_i_10_n_0 ),
        .O(\s_axi_rdata[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[6]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[6]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[6]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[6]_i_11_n_0 ),
        .O(\s_axi_rdata[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[6]_i_8 
       (.I0(img_info1_vc6[6]),
        .I1(img_info1_vc7[6]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[6]_i_9 
       (.I0(p_0_in34_in),
        .I1(interrupt_0[1]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(ier[6]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[6]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[7]_i_10 
       (.I0(img_info1_vc12[7]),
        .I1(img_info1_vc13[7]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[7]_i_11 
       (.I0(img_info1_vc15[7]),
        .I1(img_info1_vc14[7]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[7]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[7]_i_3 
       (.I0(\s_axi_rdata[7]_i_9_n_0 ),
        .I1(img_info1_vc9[7]),
        .I2(img_info1_vc8[7]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[7]_i_4 
       (.I0(img_info1_vc4[7]),
        .I1(img_info1_vc5[7]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[7]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[7]),
        .I4(img_info1_vc1[7]),
        .I5(\s_axi_rdata[7]_i_10_n_0 ),
        .O(\s_axi_rdata[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[7]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[7]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[7]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[7]_i_11_n_0 ),
        .O(\s_axi_rdata[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[7]_i_8 
       (.I0(img_info1_vc6[7]),
        .I1(img_info1_vc7[7]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[7]_i_9 
       (.I0(p_0_in33_in),
        .I1(interrupt_0[2]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(ier[7]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[7]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[8]_i_10 
       (.I0(img_info1_vc12[8]),
        .I1(img_info1_vc13[8]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[8]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[8]_i_11 
       (.I0(img_info1_vc15[8]),
        .I1(img_info1_vc14[8]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[8]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[8]_i_3 
       (.I0(\s_axi_rdata[8]_i_9_n_0 ),
        .I1(img_info1_vc9[8]),
        .I2(img_info1_vc8[8]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[8]_i_4 
       (.I0(img_info1_vc4[8]),
        .I1(img_info1_vc5[8]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[8]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[8]),
        .I4(img_info1_vc1[8]),
        .I5(\s_axi_rdata[8]_i_10_n_0 ),
        .O(\s_axi_rdata[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[8]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[8]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[8]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[8]_i_11_n_0 ),
        .O(\s_axi_rdata[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[8]_i_8 
       (.I0(img_info1_vc6[8]),
        .I1(img_info1_vc7[8]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[8]_i_9 
       (.I0(p_0_in8_in),
        .I1(interrupt_0[7]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(ier[8]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[9]_i_10 
       (.I0(img_info1_vc12[9]),
        .I1(img_info1_vc13[9]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[9]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000A0000000C00)) 
    \s_axi_rdata[9]_i_11 
       (.I0(img_info1_vc15[9]),
        .I1(img_info1_vc14[9]),
        .I2(sel0[3]),
        .I3(sel0[5]),
        .I4(sel0[0]),
        .I5(sel0[1]),
        .O(\s_axi_rdata[9]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hEEAAFAAA00000000)) 
    \s_axi_rdata[9]_i_3 
       (.I0(\s_axi_rdata[9]_i_9_n_0 ),
        .I1(img_info1_vc9[9]),
        .I2(img_info1_vc8[9]),
        .I3(\s_axi_rdata[15]_i_7_n_0 ),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[9]_i_4 
       (.I0(img_info1_vc4[9]),
        .I1(img_info1_vc5[9]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFC0804000)) 
    \s_axi_rdata[9]_i_5 
       (.I0(sel0[1]),
        .I1(\s_axi_rdata[30]_i_6_n_0 ),
        .I2(sel0[3]),
        .I3(img_info1_vc0[9]),
        .I4(img_info1_vc1[9]),
        .I5(\s_axi_rdata[9]_i_10_n_0 ),
        .O(\s_axi_rdata[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAA808080)) 
    \s_axi_rdata[9]_i_6 
       (.I0(\s_axi_rdata[13]_i_12_n_0 ),
        .I1(img_info1_vc3[9]),
        .I2(\s_axi_rdata[13]_i_13_n_0 ),
        .I3(img_info1_vc2[9]),
        .I4(\s_axi_rdata[25]_i_3_n_0 ),
        .I5(\s_axi_rdata[9]_i_11_n_0 ),
        .O(\s_axi_rdata[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000C000A0)) 
    \s_axi_rdata[9]_i_8 
       (.I0(img_info1_vc6[9]),
        .I1(img_info1_vc7[9]),
        .I2(sel0[5]),
        .I3(sel0[0]),
        .I4(sel0[1]),
        .I5(sel0[3]),
        .O(\s_axi_rdata[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0E000E000E00)) 
    \s_axi_rdata[9]_i_9 
       (.I0(p_0_in7_in),
        .I1(interrupt_0[8]),
        .I2(Q),
        .I3(\s_axi_rdata[23]_i_5_n_0 ),
        .I4(\ier_reg[9]_0 [2]),
        .I5(\s_axi_rdata[13]_i_16_n_0 ),
        .O(\s_axi_rdata[9]_i_9_n_0 ));
  FDRE \s_axi_rdata_reg[0] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_28),
        .Q(s_axi_rdata[0]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[10] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_18),
        .Q(s_axi_rdata[10]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[11] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_17),
        .Q(s_axi_rdata[11]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[12] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_16),
        .Q(s_axi_rdata[12]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[13] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_15),
        .Q(s_axi_rdata[13]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[14] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_14),
        .Q(s_axi_rdata[14]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[15] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_13),
        .Q(s_axi_rdata[15]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[16] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_12),
        .Q(s_axi_rdata[16]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[17] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_11),
        .Q(s_axi_rdata[17]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[18] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_10),
        .Q(s_axi_rdata[18]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[19] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_9),
        .Q(s_axi_rdata[19]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[1] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_27),
        .Q(s_axi_rdata[1]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[20] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_8),
        .Q(s_axi_rdata[20]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[21] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_7),
        .Q(s_axi_rdata[21]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[22] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_6),
        .Q(s_axi_rdata[22]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[23] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_5),
        .Q(s_axi_rdata[23]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[24] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_4),
        .Q(s_axi_rdata[24]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[25] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_3),
        .Q(s_axi_rdata[25]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[26] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata[26]_i_1_n_0 ),
        .Q(s_axi_rdata[26]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[27] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata[27]_i_1_n_0 ),
        .Q(s_axi_rdata[27]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[28] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata[28]_i_1_n_0 ),
        .Q(s_axi_rdata[28]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[29] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata[29]_i_1_n_0 ),
        .Q(s_axi_rdata[29]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_3 
       (.CI(\s_axi_rdata_reg[29]_i_6_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_s_axi_rdata_reg[29]_i_3_CO_UNCONNECTED [7],\s_axi_rdata_reg[29]_i_3_n_1 ,\s_axi_rdata_reg[29]_i_3_n_2 ,\s_axi_rdata_reg[29]_i_3_n_3 ,\s_axi_rdata_reg[29]_i_3_n_4 ,\s_axi_rdata_reg[29]_i_3_n_5 ,\s_axi_rdata_reg[29]_i_3_n_6 ,\s_axi_rdata_reg[29]_i_3_n_7 }),
        .DI({1'b0,\s_axi_rdata[29]_i_7_n_0 ,\s_axi_rdata[29]_i_8_n_0 ,\s_axi_rdata[29]_i_9_n_0 ,\s_axi_rdata[29]_i_10_n_0 ,\s_axi_rdata[29]_i_11_n_0 ,\s_axi_rdata[29]_i_12_n_0 ,\s_axi_rdata[29]_i_13_n_0 }),
        .O(lp_count_all[15:8]),
        .S({\s_axi_rdata[29]_i_14_n_0 ,\s_axi_rdata[29]_i_15_n_0 ,\s_axi_rdata[29]_i_16_n_0 ,\s_axi_rdata[29]_i_17_n_0 ,\s_axi_rdata[29]_i_18_n_0 ,\s_axi_rdata[29]_i_19_n_0 ,\s_axi_rdata[29]_i_20_n_0 ,\s_axi_rdata[29]_i_21_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_38 
       (.CI(\s_axi_rdata_reg[29]_i_40_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_s_axi_rdata_reg[29]_i_38_CO_UNCONNECTED [7],\s_axi_rdata_reg[29]_i_38_n_1 ,\s_axi_rdata_reg[29]_i_38_n_2 ,\s_axi_rdata_reg[29]_i_38_n_3 ,\s_axi_rdata_reg[29]_i_38_n_4 ,\s_axi_rdata_reg[29]_i_38_n_5 ,\s_axi_rdata_reg[29]_i_38_n_6 ,\s_axi_rdata_reg[29]_i_38_n_7 }),
        .DI({1'b0,\s_axi_rdata[29]_i_42_n_0 ,\s_axi_rdata[29]_i_43_n_0 ,\s_axi_rdata[29]_i_44_n_0 ,\s_axi_rdata[29]_i_45_n_0 ,\s_axi_rdata[29]_i_46_n_0 ,\s_axi_rdata[29]_i_47_n_0 ,\s_axi_rdata[29]_i_48_n_0 }),
        .O({\s_axi_rdata_reg[29]_i_38_n_8 ,\s_axi_rdata_reg[29]_i_38_n_9 ,\s_axi_rdata_reg[29]_i_38_n_10 ,\s_axi_rdata_reg[29]_i_38_n_11 ,\s_axi_rdata_reg[29]_i_38_n_12 ,\s_axi_rdata_reg[29]_i_38_n_13 ,\s_axi_rdata_reg[29]_i_38_n_14 ,\s_axi_rdata_reg[29]_i_38_n_15 }),
        .S({\s_axi_rdata[29]_i_49_n_0 ,\s_axi_rdata[29]_i_50_n_0 ,\s_axi_rdata[29]_i_51_n_0 ,\s_axi_rdata[29]_i_52_n_0 ,\s_axi_rdata[29]_i_53_n_0 ,\s_axi_rdata[29]_i_54_n_0 ,\s_axi_rdata[29]_i_55_n_0 ,\s_axi_rdata[29]_i_56_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_39 
       (.CI(\s_axi_rdata_reg[29]_i_41_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_s_axi_rdata_reg[29]_i_39_CO_UNCONNECTED [7],\s_axi_rdata_reg[29]_i_39_n_1 ,\s_axi_rdata_reg[29]_i_39_n_2 ,\s_axi_rdata_reg[29]_i_39_n_3 ,\s_axi_rdata_reg[29]_i_39_n_4 ,\s_axi_rdata_reg[29]_i_39_n_5 ,\s_axi_rdata_reg[29]_i_39_n_6 ,\s_axi_rdata_reg[29]_i_39_n_7 }),
        .DI({1'b0,\s_axi_rdata[29]_i_57_n_0 ,\s_axi_rdata[29]_i_58_n_0 ,\s_axi_rdata[29]_i_59_n_0 ,\s_axi_rdata[29]_i_60_n_0 ,\s_axi_rdata[29]_i_61_n_0 ,\s_axi_rdata[29]_i_62_n_0 ,\s_axi_rdata[29]_i_63_n_0 }),
        .O({\s_axi_rdata_reg[29]_i_39_n_8 ,\s_axi_rdata_reg[29]_i_39_n_9 ,\s_axi_rdata_reg[29]_i_39_n_10 ,\s_axi_rdata_reg[29]_i_39_n_11 ,\s_axi_rdata_reg[29]_i_39_n_12 ,\s_axi_rdata_reg[29]_i_39_n_13 ,\s_axi_rdata_reg[29]_i_39_n_14 ,\s_axi_rdata_reg[29]_i_39_n_15 }),
        .S({\s_axi_rdata[29]_i_64_n_0 ,\s_axi_rdata[29]_i_65_n_0 ,\s_axi_rdata[29]_i_66_n_0 ,\s_axi_rdata[29]_i_67_n_0 ,\s_axi_rdata[29]_i_68_n_0 ,\s_axi_rdata[29]_i_69_n_0 ,\s_axi_rdata[29]_i_70_n_0 ,\s_axi_rdata[29]_i_71_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_40 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\s_axi_rdata_reg[29]_i_40_n_0 ,\s_axi_rdata_reg[29]_i_40_n_1 ,\s_axi_rdata_reg[29]_i_40_n_2 ,\s_axi_rdata_reg[29]_i_40_n_3 ,\s_axi_rdata_reg[29]_i_40_n_4 ,\s_axi_rdata_reg[29]_i_40_n_5 ,\s_axi_rdata_reg[29]_i_40_n_6 ,\s_axi_rdata_reg[29]_i_40_n_7 }),
        .DI({\s_axi_rdata[29]_i_72_n_0 ,\s_axi_rdata[29]_i_73_n_0 ,\s_axi_rdata[29]_i_74_n_0 ,\s_axi_rdata[29]_i_75_n_0 ,\s_axi_rdata[29]_i_76_n_0 ,\s_axi_rdata[29]_i_77_n_0 ,\s_axi_rdata[29]_i_78_n_0 ,1'b0}),
        .O({\s_axi_rdata_reg[29]_i_40_n_8 ,\s_axi_rdata_reg[29]_i_40_n_9 ,\s_axi_rdata_reg[29]_i_40_n_10 ,\s_axi_rdata_reg[29]_i_40_n_11 ,\s_axi_rdata_reg[29]_i_40_n_12 ,\s_axi_rdata_reg[29]_i_40_n_13 ,\s_axi_rdata_reg[29]_i_40_n_14 ,\s_axi_rdata_reg[29]_i_40_n_15 }),
        .S({\s_axi_rdata[29]_i_79_n_0 ,\s_axi_rdata[29]_i_80_n_0 ,\s_axi_rdata[29]_i_81_n_0 ,\s_axi_rdata[29]_i_82_n_0 ,\s_axi_rdata[29]_i_83_n_0 ,\s_axi_rdata[29]_i_84_n_0 ,\s_axi_rdata[29]_i_85_n_0 ,\s_axi_rdata[29]_i_86_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_41 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\s_axi_rdata_reg[29]_i_41_n_0 ,\s_axi_rdata_reg[29]_i_41_n_1 ,\s_axi_rdata_reg[29]_i_41_n_2 ,\s_axi_rdata_reg[29]_i_41_n_3 ,\s_axi_rdata_reg[29]_i_41_n_4 ,\s_axi_rdata_reg[29]_i_41_n_5 ,\s_axi_rdata_reg[29]_i_41_n_6 ,\s_axi_rdata_reg[29]_i_41_n_7 }),
        .DI({\s_axi_rdata[29]_i_87_n_0 ,\s_axi_rdata[29]_i_88_n_0 ,\s_axi_rdata[29]_i_89_n_0 ,\s_axi_rdata[29]_i_90_n_0 ,\s_axi_rdata[29]_i_91_n_0 ,\s_axi_rdata[29]_i_92_n_0 ,\s_axi_rdata[29]_i_93_n_0 ,1'b0}),
        .O({\s_axi_rdata_reg[29]_i_41_n_8 ,\s_axi_rdata_reg[29]_i_41_n_9 ,\s_axi_rdata_reg[29]_i_41_n_10 ,\s_axi_rdata_reg[29]_i_41_n_11 ,\s_axi_rdata_reg[29]_i_41_n_12 ,\s_axi_rdata_reg[29]_i_41_n_13 ,\s_axi_rdata_reg[29]_i_41_n_14 ,\s_axi_rdata_reg[29]_i_41_n_15 }),
        .S({\s_axi_rdata[29]_i_94_n_0 ,\s_axi_rdata[29]_i_95_n_0 ,\s_axi_rdata[29]_i_96_n_0 ,\s_axi_rdata[29]_i_97_n_0 ,\s_axi_rdata[29]_i_98_n_0 ,\s_axi_rdata[29]_i_99_n_0 ,\s_axi_rdata[29]_i_100_n_0 ,\s_axi_rdata[29]_i_101_n_0 }));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \s_axi_rdata_reg[29]_i_6 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\s_axi_rdata_reg[29]_i_6_n_0 ,\s_axi_rdata_reg[29]_i_6_n_1 ,\s_axi_rdata_reg[29]_i_6_n_2 ,\s_axi_rdata_reg[29]_i_6_n_3 ,\s_axi_rdata_reg[29]_i_6_n_4 ,\s_axi_rdata_reg[29]_i_6_n_5 ,\s_axi_rdata_reg[29]_i_6_n_6 ,\s_axi_rdata_reg[29]_i_6_n_7 }),
        .DI({\s_axi_rdata[29]_i_23_n_0 ,\s_axi_rdata[29]_i_24_n_0 ,\s_axi_rdata[29]_i_25_n_0 ,\s_axi_rdata[29]_i_26_n_0 ,\s_axi_rdata[29]_i_27_n_0 ,\s_axi_rdata[29]_i_28_n_0 ,\s_axi_rdata[29]_i_29_n_0 ,1'b0}),
        .O(lp_count_all[7:0]),
        .S({\s_axi_rdata[29]_i_30_n_0 ,\s_axi_rdata[29]_i_31_n_0 ,\s_axi_rdata[29]_i_32_n_0 ,\s_axi_rdata[29]_i_33_n_0 ,\s_axi_rdata[29]_i_34_n_0 ,\s_axi_rdata[29]_i_35_n_0 ,\s_axi_rdata[29]_i_36_n_0 ,\s_axi_rdata[29]_i_37_n_0 }));
  FDRE \s_axi_rdata_reg[2] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_26),
        .Q(s_axi_rdata[2]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[30] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata[30]_i_1_n_0 ),
        .Q(s_axi_rdata[30]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[31] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(\s_axi_rdata_reg[31]_i_3_n_0 ),
        .Q(s_axi_rdata[31]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  MUXF7 \s_axi_rdata_reg[31]_i_3 
       (.I0(\s_axi_rdata[31]_i_4_n_0 ),
        .I1(\s_axi_rdata[31]_i_5_n_0 ),
        .O(\s_axi_rdata_reg[31]_i_3_n_0 ),
        .S(sel0[4]));
  FDRE \s_axi_rdata_reg[3] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_25),
        .Q(s_axi_rdata[3]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[4] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_24),
        .Q(s_axi_rdata[4]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[5] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_23),
        .Q(s_axi_rdata[5]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[6] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_22),
        .Q(s_axi_rdata[6]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[7] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_21),
        .Q(s_axi_rdata[7]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[8] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_20),
        .Q(s_axi_rdata[8]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  FDRE \s_axi_rdata_reg[9] 
       (.C(s_axi_aclk),
        .CE(\s_axi_rdata[31]_i_2_n_0 ),
        .D(gen_spkt_fifo_n_19),
        .Q(s_axi_rdata[9]),
        .R(\s_axi_rdata[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0888)) 
    s_axi_rvalid_i_1
       (.I0(s_axi_aresetn),
        .I1(rd_req),
        .I2(s_axi_rvalid_reg_0),
        .I3(s_axi_rready),
        .O(s_axi_rvalid_i_1_n_0));
  FDRE s_axi_rvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_1_n_0),
        .Q(s_axi_rvalid_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(wr_req),
        .I1(s_axi_bvalid_reg_0),
        .O(s_axi_wready));
  FDRE soft_rst_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q),
        .Q(soft_rst_d1),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'hE)) 
    spkt_fifo_dis_done_i_1
       (.I0(spkt_fifo_rst_ack),
        .I1(spkt_fifo_dis_done_reg_n_0),
        .O(spkt_fifo_dis_done_i_1_n_0));
  FDRE spkt_fifo_dis_done_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(spkt_fifo_dis_done_i_1_n_0),
        .Q(spkt_fifo_dis_done_reg_n_0),
        .R(spkt_fifo_dis_done));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[2]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[0]),
        .O(p_2_in[2]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[3]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[1]),
        .O(p_2_in[3]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[4]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[2]),
        .O(p_2_in[4]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[5]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[3]),
        .O(p_2_in[5]));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[6]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[4]),
        .O(p_2_in[6]));
  LUT3 #(
    .INIT(8'hF8)) 
    \wr_addr[7]_i_1 
       (.I0(s_axi_bvalid_reg_0),
        .I1(s_axi_bready),
        .I2(wr_req016_out),
        .O(\wr_addr[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    \wr_addr[7]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(wr_req),
        .I4(reset_released),
        .I5(s_axi_awaddr[5]),
        .O(p_2_in[7]));
  FDRE \wr_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[2]),
        .Q(p_0_in[0]),
        .R(SS));
  FDRE \wr_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[3]),
        .Q(p_0_in[1]),
        .R(SS));
  FDRE \wr_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[4]),
        .Q(p_0_in[2]),
        .R(SS));
  FDRE \wr_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[5]),
        .Q(p_0_in[3]),
        .R(SS));
  FDRE \wr_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[6]),
        .Q(p_0_in[4]),
        .R(SS));
  FDRE \wr_addr_reg[7] 
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(p_2_in[7]),
        .Q(p_0_in[5]),
        .R(SS));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h00020000)) 
    wr_req_i_1
       (.I0(reset_released),
        .I1(wr_req),
        .I2(rd_req),
        .I3(s_axi_arvalid),
        .I4(s_axi_awvalid),
        .O(wr_req016_out));
  FDRE wr_req_reg
       (.C(s_axi_aclk),
        .CE(\wr_addr[7]_i_1_n_0 ),
        .D(wr_req016_out),
        .Q(wr_req),
        .R(SS));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "1" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "46" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_array_single__parameterized0 xpm_array_single_01
       (.dest_clk(s_axi_aclk),
        .dest_out(NLW_xpm_array_single_01_dest_out_UNCONNECTED[45:0]),
        .src_clk(m_axis_aclk),
        .src_in({1'b0,1'b0,1'b0,1'b0,src_in}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "2" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_array_single__5 xpm_array_single_02
       (.dest_clk(m_axis_aclk),
        .dest_out({xpm_array_single_02_n_0,xpm_array_single_02_n_1}),
        .src_clk(s_axi_aclk),
        .src_in({Q,\core_config_reg_n_0_[0] }));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "2" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_array_single__6 xpm_array_single_03
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(active_lanes_r2p),
        .src_clk(s_axi_aclk),
        .src_in({1'b0,1'b1}));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* WIDTH = "2" *) 
  (* XPM_CDC = "ARRAY_SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_array_single xpm_array_single_04
       (.dest_clk(s_axi_aclk),
        .dest_out(p_25_in),
        .src_clk(dl0_rxbyteclkhs),
        .src_in({\active_lanes_reg_n_0_[1] ,\active_lanes_reg_n_0_[0] }));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__245 xpm_single_01
       (.dest_clk(s_axi_aclk),
        .dest_out(NLW_xpm_single_01_dest_out_UNCONNECTED),
        .src_clk(m_axis_aclk),
        .src_in(full));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__parameterized0__2 xpm_single_02
       (.dest_clk(m_axis_aclk),
        .dest_out(dest_out),
        .src_clk(s_axi_aclk),
        .src_in(core_men));
  LUT2 #(
    .INIT(4'h2)) 
    xpm_single_02_i_1
       (.I0(\core_config_reg_n_0_[0] ),
        .I1(Q),
        .O(core_men));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "1" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__parameterized0 xpm_single_05
       (.dest_clk(s_axi_aclk),
        .dest_out(NLW_xpm_single_05_dest_out_UNCONNECTED),
        .src_clk(m_axis_aclk),
        .src_in(\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__253 xpm_single_07
       (.dest_clk(s_axi_aclk),
        .dest_out(spkt_fifo_rst_ack),
        .src_clk(m_axis_aclk),
        .src_in(\data/mem_wr_err20 ));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT1 #(
    .INIT(2'h1)) 
    xpm_single_07_i_1
       (.I0(dest_out),
        .O(\data/mem_wr_err20 ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__252 xpm_single_08
       (.dest_clk(s_axi_aclk),
        .dest_out(data_shutdown_c2r),
        .src_clk(m_axis_aclk),
        .src_in(\syncstages_ff_reg[0] ));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__246 xpm_single_17
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(l0_ppiclk_ss1),
        .src_clk(s_axi_aclk),
        .src_in(dl0_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__247 xpm_single_18
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(NLW_xpm_single_18_dest_out_UNCONNECTED),
        .src_clk(dl0_rxbyteclkhs),
        .src_in(dl1_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__248 xpm_single_19
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(NLW_xpm_single_19_dest_out_UNCONNECTED),
        .src_clk(dl0_rxbyteclkhs),
        .src_in(dl2_stopstate));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__249 xpm_single_20
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(NLW_xpm_single_20_dest_out_UNCONNECTED),
        .src_clk(dl0_rxbyteclkhs),
        .src_in(dl3_stopstate));
endmodule

(* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_stream" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_stream
   (SR,
    m_axis_tvalid_reg_0,
    m_axis_tlast_reg_0,
    m_axis_tuser,
    rd_en,
    m_axis_tdata,
    m_axis_tdest,
    m_axis_tkeep,
    m_axis_aresetn,
    m_axis_tready,
    m_axis_aclk,
    mem_rdata,
    empty);
  output [0:0]SR;
  output m_axis_tvalid_reg_0;
  output m_axis_tlast_reg_0;
  output [79:0]m_axis_tuser;
  output rd_en;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tdest;
  output [7:0]m_axis_tkeep;
  input m_axis_aresetn;
  input m_axis_tready;
  input m_axis_aclk;
  input [67:0]mem_rdata;
  input empty;

  wire \LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ;
  wire [15:0]\LINE_NUM_VC[0].line_num_reg[0]_0 ;
  wire \LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ;
  wire \LINE_NUM_VC[0].rst_lnum_reg_n_0_[0] ;
  wire \LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ;
  wire [15:0]\LINE_NUM_VC[1].line_num_reg[1]_1 ;
  wire \LINE_NUM_VC[1].rst_lnum[1]_i_1_n_0 ;
  wire \LINE_NUM_VC[1].rst_lnum_reg_n_0_[1] ;
  wire \LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ;
  wire [15:0]\LINE_NUM_VC[2].line_num_reg[2]_2 ;
  wire \LINE_NUM_VC[2].rst_lnum[2]_i_1_n_0 ;
  wire \LINE_NUM_VC[2].rst_lnum_reg_n_0_[2] ;
  wire \LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ;
  wire [15:0]\LINE_NUM_VC[3].line_num_reg[3]_3 ;
  wire \LINE_NUM_VC[3].rst_lnum_reg_n_0_[3] ;
  wire [0:0]SR;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[0] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[1] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[2] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[3] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[4] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[5] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[6] ;
  wire \TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[7] ;
  wire \TUSER_WIDTH_GTE2.m_axis_tuser[1]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_4_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_5_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_6_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_7_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_3_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_1_n_0 ;
  wire \TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_2_n_0 ;
  wire \TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ;
  wire axis_beat_smpld;
  wire axis_last_beat;
  wire \bytes_sent[9]_i_2_n_0 ;
  wire [15:2]bytes_sent_reg;
  wire \bytes_sent_reg[15]_i_2_n_3 ;
  wire \bytes_sent_reg[15]_i_2_n_4 ;
  wire \bytes_sent_reg[15]_i_2_n_5 ;
  wire \bytes_sent_reg[15]_i_2_n_6 ;
  wire \bytes_sent_reg[15]_i_2_n_7 ;
  wire \bytes_sent_reg[9]_i_1_n_0 ;
  wire \bytes_sent_reg[9]_i_1_n_1 ;
  wire \bytes_sent_reg[9]_i_1_n_2 ;
  wire \bytes_sent_reg[9]_i_1_n_3 ;
  wire \bytes_sent_reg[9]_i_1_n_4 ;
  wire \bytes_sent_reg[9]_i_1_n_5 ;
  wire \bytes_sent_reg[9]_i_1_n_6 ;
  wire \bytes_sent_reg[9]_i_1_n_7 ;
  wire [5:0]cur_lp_dtype;
  wire [3:0]cur_lp_vc;
  wire cur_lp_vc0;
  wire cur_lp_wc_lte4;
  wire cur_lp_wc_lte4_i_1_n_0;
  wire cur_lp_wc_lte4_i_3_n_0;
  wire cur_lp_wc_lte4_i_4_n_0;
  wire cur_lp_wc_lte4_i_5_n_0;
  wire \cur_lp_wc_reg_n_0_[0] ;
  wire \cur_lp_wc_reg_n_0_[10] ;
  wire \cur_lp_wc_reg_n_0_[11] ;
  wire \cur_lp_wc_reg_n_0_[12] ;
  wire \cur_lp_wc_reg_n_0_[13] ;
  wire \cur_lp_wc_reg_n_0_[14] ;
  wire \cur_lp_wc_reg_n_0_[15] ;
  wire \cur_lp_wc_reg_n_0_[1] ;
  wire \cur_lp_wc_reg_n_0_[2] ;
  wire \cur_lp_wc_reg_n_0_[3] ;
  wire \cur_lp_wc_reg_n_0_[4] ;
  wire \cur_lp_wc_reg_n_0_[5] ;
  wire \cur_lp_wc_reg_n_0_[6] ;
  wire \cur_lp_wc_reg_n_0_[7] ;
  wire \cur_lp_wc_reg_n_0_[8] ;
  wire \cur_lp_wc_reg_n_0_[9] ;
  wire empty;
  wire frame_num_vc0;
  wire \frame_num_vc0[15]_i_1_n_0 ;
  wire \frame_num_vc0[15]_i_3_n_0 ;
  wire \frame_num_vc0[15]_i_4_n_0 ;
  wire \frame_num_vc0_reg_n_0_[0] ;
  wire \frame_num_vc0_reg_n_0_[10] ;
  wire \frame_num_vc0_reg_n_0_[11] ;
  wire \frame_num_vc0_reg_n_0_[12] ;
  wire \frame_num_vc0_reg_n_0_[13] ;
  wire \frame_num_vc0_reg_n_0_[14] ;
  wire \frame_num_vc0_reg_n_0_[15] ;
  wire \frame_num_vc0_reg_n_0_[1] ;
  wire \frame_num_vc0_reg_n_0_[2] ;
  wire \frame_num_vc0_reg_n_0_[3] ;
  wire \frame_num_vc0_reg_n_0_[4] ;
  wire \frame_num_vc0_reg_n_0_[5] ;
  wire \frame_num_vc0_reg_n_0_[6] ;
  wire \frame_num_vc0_reg_n_0_[7] ;
  wire \frame_num_vc0_reg_n_0_[8] ;
  wire \frame_num_vc0_reg_n_0_[9] ;
  wire frame_num_vc1;
  wire frame_num_vc10;
  wire frame_num_vc101;
  wire \frame_num_vc10[15]_i_1_n_0 ;
  wire \frame_num_vc10_reg_n_0_[0] ;
  wire \frame_num_vc10_reg_n_0_[10] ;
  wire \frame_num_vc10_reg_n_0_[11] ;
  wire \frame_num_vc10_reg_n_0_[12] ;
  wire \frame_num_vc10_reg_n_0_[13] ;
  wire \frame_num_vc10_reg_n_0_[14] ;
  wire \frame_num_vc10_reg_n_0_[15] ;
  wire \frame_num_vc10_reg_n_0_[1] ;
  wire \frame_num_vc10_reg_n_0_[2] ;
  wire \frame_num_vc10_reg_n_0_[3] ;
  wire \frame_num_vc10_reg_n_0_[4] ;
  wire \frame_num_vc10_reg_n_0_[5] ;
  wire \frame_num_vc10_reg_n_0_[6] ;
  wire \frame_num_vc10_reg_n_0_[7] ;
  wire \frame_num_vc10_reg_n_0_[8] ;
  wire \frame_num_vc10_reg_n_0_[9] ;
  wire frame_num_vc111;
  wire \frame_num_vc11[15]_i_1_n_0 ;
  wire \frame_num_vc11[15]_i_2_n_0 ;
  wire [15:0]frame_num_vc11__0;
  wire frame_num_vc12;
  wire frame_num_vc121;
  wire \frame_num_vc12[15]_i_1_n_0 ;
  wire \frame_num_vc12_reg_n_0_[0] ;
  wire \frame_num_vc12_reg_n_0_[10] ;
  wire \frame_num_vc12_reg_n_0_[11] ;
  wire \frame_num_vc12_reg_n_0_[12] ;
  wire \frame_num_vc12_reg_n_0_[13] ;
  wire \frame_num_vc12_reg_n_0_[14] ;
  wire \frame_num_vc12_reg_n_0_[15] ;
  wire \frame_num_vc12_reg_n_0_[1] ;
  wire \frame_num_vc12_reg_n_0_[2] ;
  wire \frame_num_vc12_reg_n_0_[3] ;
  wire \frame_num_vc12_reg_n_0_[4] ;
  wire \frame_num_vc12_reg_n_0_[5] ;
  wire \frame_num_vc12_reg_n_0_[6] ;
  wire \frame_num_vc12_reg_n_0_[7] ;
  wire \frame_num_vc12_reg_n_0_[8] ;
  wire \frame_num_vc12_reg_n_0_[9] ;
  wire frame_num_vc13;
  wire frame_num_vc131;
  wire \frame_num_vc13[15]_i_1_n_0 ;
  wire \frame_num_vc13_reg_n_0_[0] ;
  wire \frame_num_vc13_reg_n_0_[10] ;
  wire \frame_num_vc13_reg_n_0_[11] ;
  wire \frame_num_vc13_reg_n_0_[12] ;
  wire \frame_num_vc13_reg_n_0_[13] ;
  wire \frame_num_vc13_reg_n_0_[14] ;
  wire \frame_num_vc13_reg_n_0_[15] ;
  wire \frame_num_vc13_reg_n_0_[1] ;
  wire \frame_num_vc13_reg_n_0_[2] ;
  wire \frame_num_vc13_reg_n_0_[3] ;
  wire \frame_num_vc13_reg_n_0_[4] ;
  wire \frame_num_vc13_reg_n_0_[5] ;
  wire \frame_num_vc13_reg_n_0_[6] ;
  wire \frame_num_vc13_reg_n_0_[7] ;
  wire \frame_num_vc13_reg_n_0_[8] ;
  wire \frame_num_vc13_reg_n_0_[9] ;
  wire frame_num_vc14;
  wire frame_num_vc141;
  wire \frame_num_vc14[15]_i_1_n_0 ;
  wire \frame_num_vc14_reg_n_0_[0] ;
  wire \frame_num_vc14_reg_n_0_[10] ;
  wire \frame_num_vc14_reg_n_0_[11] ;
  wire \frame_num_vc14_reg_n_0_[12] ;
  wire \frame_num_vc14_reg_n_0_[13] ;
  wire \frame_num_vc14_reg_n_0_[14] ;
  wire \frame_num_vc14_reg_n_0_[15] ;
  wire \frame_num_vc14_reg_n_0_[1] ;
  wire \frame_num_vc14_reg_n_0_[2] ;
  wire \frame_num_vc14_reg_n_0_[3] ;
  wire \frame_num_vc14_reg_n_0_[4] ;
  wire \frame_num_vc14_reg_n_0_[5] ;
  wire \frame_num_vc14_reg_n_0_[6] ;
  wire \frame_num_vc14_reg_n_0_[7] ;
  wire \frame_num_vc14_reg_n_0_[8] ;
  wire \frame_num_vc14_reg_n_0_[9] ;
  wire frame_num_vc15;
  wire frame_num_vc151;
  wire \frame_num_vc15[15]_i_1_n_0 ;
  wire \frame_num_vc15_reg_n_0_[0] ;
  wire \frame_num_vc15_reg_n_0_[10] ;
  wire \frame_num_vc15_reg_n_0_[11] ;
  wire \frame_num_vc15_reg_n_0_[12] ;
  wire \frame_num_vc15_reg_n_0_[13] ;
  wire \frame_num_vc15_reg_n_0_[14] ;
  wire \frame_num_vc15_reg_n_0_[15] ;
  wire \frame_num_vc15_reg_n_0_[1] ;
  wire \frame_num_vc15_reg_n_0_[2] ;
  wire \frame_num_vc15_reg_n_0_[3] ;
  wire \frame_num_vc15_reg_n_0_[4] ;
  wire \frame_num_vc15_reg_n_0_[5] ;
  wire \frame_num_vc15_reg_n_0_[6] ;
  wire \frame_num_vc15_reg_n_0_[7] ;
  wire \frame_num_vc15_reg_n_0_[8] ;
  wire \frame_num_vc15_reg_n_0_[9] ;
  wire \frame_num_vc1[15]_i_1_n_0 ;
  wire \frame_num_vc1_reg_n_0_[0] ;
  wire \frame_num_vc1_reg_n_0_[10] ;
  wire \frame_num_vc1_reg_n_0_[11] ;
  wire \frame_num_vc1_reg_n_0_[12] ;
  wire \frame_num_vc1_reg_n_0_[13] ;
  wire \frame_num_vc1_reg_n_0_[14] ;
  wire \frame_num_vc1_reg_n_0_[15] ;
  wire \frame_num_vc1_reg_n_0_[1] ;
  wire \frame_num_vc1_reg_n_0_[2] ;
  wire \frame_num_vc1_reg_n_0_[3] ;
  wire \frame_num_vc1_reg_n_0_[4] ;
  wire \frame_num_vc1_reg_n_0_[5] ;
  wire \frame_num_vc1_reg_n_0_[6] ;
  wire \frame_num_vc1_reg_n_0_[7] ;
  wire \frame_num_vc1_reg_n_0_[8] ;
  wire \frame_num_vc1_reg_n_0_[9] ;
  wire frame_num_vc2;
  wire \frame_num_vc2[15]_i_1_n_0 ;
  wire \frame_num_vc2_reg_n_0_[0] ;
  wire \frame_num_vc2_reg_n_0_[10] ;
  wire \frame_num_vc2_reg_n_0_[11] ;
  wire \frame_num_vc2_reg_n_0_[12] ;
  wire \frame_num_vc2_reg_n_0_[13] ;
  wire \frame_num_vc2_reg_n_0_[14] ;
  wire \frame_num_vc2_reg_n_0_[15] ;
  wire \frame_num_vc2_reg_n_0_[1] ;
  wire \frame_num_vc2_reg_n_0_[2] ;
  wire \frame_num_vc2_reg_n_0_[3] ;
  wire \frame_num_vc2_reg_n_0_[4] ;
  wire \frame_num_vc2_reg_n_0_[5] ;
  wire \frame_num_vc2_reg_n_0_[6] ;
  wire \frame_num_vc2_reg_n_0_[7] ;
  wire \frame_num_vc2_reg_n_0_[8] ;
  wire \frame_num_vc2_reg_n_0_[9] ;
  wire frame_num_vc3;
  wire \frame_num_vc3[15]_i_1_n_0 ;
  wire \frame_num_vc3_reg_n_0_[0] ;
  wire \frame_num_vc3_reg_n_0_[10] ;
  wire \frame_num_vc3_reg_n_0_[11] ;
  wire \frame_num_vc3_reg_n_0_[12] ;
  wire \frame_num_vc3_reg_n_0_[13] ;
  wire \frame_num_vc3_reg_n_0_[14] ;
  wire \frame_num_vc3_reg_n_0_[15] ;
  wire \frame_num_vc3_reg_n_0_[1] ;
  wire \frame_num_vc3_reg_n_0_[2] ;
  wire \frame_num_vc3_reg_n_0_[3] ;
  wire \frame_num_vc3_reg_n_0_[4] ;
  wire \frame_num_vc3_reg_n_0_[5] ;
  wire \frame_num_vc3_reg_n_0_[6] ;
  wire \frame_num_vc3_reg_n_0_[7] ;
  wire \frame_num_vc3_reg_n_0_[8] ;
  wire \frame_num_vc3_reg_n_0_[9] ;
  wire frame_num_vc4;
  wire frame_num_vc41;
  wire \frame_num_vc4[15]_i_1_n_0 ;
  wire \frame_num_vc4_reg_n_0_[0] ;
  wire \frame_num_vc4_reg_n_0_[10] ;
  wire \frame_num_vc4_reg_n_0_[11] ;
  wire \frame_num_vc4_reg_n_0_[12] ;
  wire \frame_num_vc4_reg_n_0_[13] ;
  wire \frame_num_vc4_reg_n_0_[14] ;
  wire \frame_num_vc4_reg_n_0_[15] ;
  wire \frame_num_vc4_reg_n_0_[1] ;
  wire \frame_num_vc4_reg_n_0_[2] ;
  wire \frame_num_vc4_reg_n_0_[3] ;
  wire \frame_num_vc4_reg_n_0_[4] ;
  wire \frame_num_vc4_reg_n_0_[5] ;
  wire \frame_num_vc4_reg_n_0_[6] ;
  wire \frame_num_vc4_reg_n_0_[7] ;
  wire \frame_num_vc4_reg_n_0_[8] ;
  wire \frame_num_vc4_reg_n_0_[9] ;
  wire frame_num_vc5;
  wire frame_num_vc51;
  wire \frame_num_vc5[15]_i_1_n_0 ;
  wire \frame_num_vc5_reg_n_0_[0] ;
  wire \frame_num_vc5_reg_n_0_[10] ;
  wire \frame_num_vc5_reg_n_0_[11] ;
  wire \frame_num_vc5_reg_n_0_[12] ;
  wire \frame_num_vc5_reg_n_0_[13] ;
  wire \frame_num_vc5_reg_n_0_[14] ;
  wire \frame_num_vc5_reg_n_0_[15] ;
  wire \frame_num_vc5_reg_n_0_[1] ;
  wire \frame_num_vc5_reg_n_0_[2] ;
  wire \frame_num_vc5_reg_n_0_[3] ;
  wire \frame_num_vc5_reg_n_0_[4] ;
  wire \frame_num_vc5_reg_n_0_[5] ;
  wire \frame_num_vc5_reg_n_0_[6] ;
  wire \frame_num_vc5_reg_n_0_[7] ;
  wire \frame_num_vc5_reg_n_0_[8] ;
  wire \frame_num_vc5_reg_n_0_[9] ;
  wire frame_num_vc6;
  wire frame_num_vc61;
  wire \frame_num_vc6[15]_i_1_n_0 ;
  wire \frame_num_vc6_reg_n_0_[0] ;
  wire \frame_num_vc6_reg_n_0_[10] ;
  wire \frame_num_vc6_reg_n_0_[11] ;
  wire \frame_num_vc6_reg_n_0_[12] ;
  wire \frame_num_vc6_reg_n_0_[13] ;
  wire \frame_num_vc6_reg_n_0_[14] ;
  wire \frame_num_vc6_reg_n_0_[15] ;
  wire \frame_num_vc6_reg_n_0_[1] ;
  wire \frame_num_vc6_reg_n_0_[2] ;
  wire \frame_num_vc6_reg_n_0_[3] ;
  wire \frame_num_vc6_reg_n_0_[4] ;
  wire \frame_num_vc6_reg_n_0_[5] ;
  wire \frame_num_vc6_reg_n_0_[6] ;
  wire \frame_num_vc6_reg_n_0_[7] ;
  wire \frame_num_vc6_reg_n_0_[8] ;
  wire \frame_num_vc6_reg_n_0_[9] ;
  wire frame_num_vc7;
  wire frame_num_vc71;
  wire \frame_num_vc7[15]_i_1_n_0 ;
  wire \frame_num_vc7_reg_n_0_[0] ;
  wire \frame_num_vc7_reg_n_0_[10] ;
  wire \frame_num_vc7_reg_n_0_[11] ;
  wire \frame_num_vc7_reg_n_0_[12] ;
  wire \frame_num_vc7_reg_n_0_[13] ;
  wire \frame_num_vc7_reg_n_0_[14] ;
  wire \frame_num_vc7_reg_n_0_[15] ;
  wire \frame_num_vc7_reg_n_0_[1] ;
  wire \frame_num_vc7_reg_n_0_[2] ;
  wire \frame_num_vc7_reg_n_0_[3] ;
  wire \frame_num_vc7_reg_n_0_[4] ;
  wire \frame_num_vc7_reg_n_0_[5] ;
  wire \frame_num_vc7_reg_n_0_[6] ;
  wire \frame_num_vc7_reg_n_0_[7] ;
  wire \frame_num_vc7_reg_n_0_[8] ;
  wire \frame_num_vc7_reg_n_0_[9] ;
  wire frame_num_vc8;
  wire frame_num_vc81;
  wire \frame_num_vc8[15]_i_1_n_0 ;
  wire \frame_num_vc8_reg_n_0_[0] ;
  wire \frame_num_vc8_reg_n_0_[10] ;
  wire \frame_num_vc8_reg_n_0_[11] ;
  wire \frame_num_vc8_reg_n_0_[12] ;
  wire \frame_num_vc8_reg_n_0_[13] ;
  wire \frame_num_vc8_reg_n_0_[14] ;
  wire \frame_num_vc8_reg_n_0_[15] ;
  wire \frame_num_vc8_reg_n_0_[1] ;
  wire \frame_num_vc8_reg_n_0_[2] ;
  wire \frame_num_vc8_reg_n_0_[3] ;
  wire \frame_num_vc8_reg_n_0_[4] ;
  wire \frame_num_vc8_reg_n_0_[5] ;
  wire \frame_num_vc8_reg_n_0_[6] ;
  wire \frame_num_vc8_reg_n_0_[7] ;
  wire \frame_num_vc8_reg_n_0_[8] ;
  wire \frame_num_vc8_reg_n_0_[9] ;
  wire frame_num_vc9;
  wire frame_num_vc91;
  wire \frame_num_vc9[15]_i_1_n_0 ;
  wire \frame_num_vc9_reg_n_0_[0] ;
  wire \frame_num_vc9_reg_n_0_[10] ;
  wire \frame_num_vc9_reg_n_0_[11] ;
  wire \frame_num_vc9_reg_n_0_[12] ;
  wire \frame_num_vc9_reg_n_0_[13] ;
  wire \frame_num_vc9_reg_n_0_[14] ;
  wire \frame_num_vc9_reg_n_0_[15] ;
  wire \frame_num_vc9_reg_n_0_[1] ;
  wire \frame_num_vc9_reg_n_0_[2] ;
  wire \frame_num_vc9_reg_n_0_[3] ;
  wire \frame_num_vc9_reg_n_0_[4] ;
  wire \frame_num_vc9_reg_n_0_[5] ;
  wire \frame_num_vc9_reg_n_0_[6] ;
  wire \frame_num_vc9_reg_n_0_[7] ;
  wire \frame_num_vc9_reg_n_0_[8] ;
  wire \frame_num_vc9_reg_n_0_[9] ;
  wire fs_opcode;
  wire fsync_vc0_int_reg;
  wire fsync_vc0_int_reg_i_1_n_0;
  wire fsync_vc0_rst_reg;
  wire fsync_vc0_rst_reg0;
  wire fsync_vc0_rst_reg1;
  wire fsync_vc10_int_reg;
  wire fsync_vc10_int_reg_i_1_n_0;
  wire fsync_vc10_rst_reg;
  wire fsync_vc10_rst_reg0;
  wire fsync_vc11_int_reg;
  wire fsync_vc11_int_reg_i_1_n_0;
  wire fsync_vc11_rst_reg;
  wire fsync_vc11_rst_reg0;
  wire fsync_vc12_int_reg;
  wire fsync_vc12_int_reg_i_1_n_0;
  wire fsync_vc12_rst_reg;
  wire fsync_vc12_rst_reg0;
  wire fsync_vc13_int_reg;
  wire fsync_vc13_int_reg_i_1_n_0;
  wire fsync_vc13_rst_reg;
  wire fsync_vc13_rst_reg0;
  wire fsync_vc14_int_reg;
  wire fsync_vc14_int_reg_i_1_n_0;
  wire fsync_vc14_rst_reg;
  wire fsync_vc14_rst_reg0;
  wire fsync_vc15_int_reg;
  wire fsync_vc15_int_reg_i_1_n_0;
  wire fsync_vc15_rst_reg;
  wire fsync_vc15_rst_reg0;
  wire fsync_vc1_int_reg;
  wire fsync_vc1_int_reg_i_1_n_0;
  wire fsync_vc1_rst_reg;
  wire fsync_vc1_rst_reg0;
  wire fsync_vc2_int_reg;
  wire fsync_vc2_int_reg_i_1_n_0;
  wire fsync_vc2_rst_reg;
  wire fsync_vc2_rst_reg0;
  wire fsync_vc3_int_reg;
  wire fsync_vc3_int_reg_i_1_n_0;
  wire fsync_vc3_rst_reg;
  wire fsync_vc3_rst_reg0;
  wire fsync_vc4_int_reg;
  wire fsync_vc4_int_reg_i_1_n_0;
  wire fsync_vc4_int_reg_i_3_n_0;
  wire fsync_vc4_rst_reg;
  wire fsync_vc4_rst_reg0;
  wire fsync_vc5_int_reg;
  wire fsync_vc5_int_reg_i_1_n_0;
  wire fsync_vc5_int_reg_i_2_n_0;
  wire fsync_vc5_rst_reg;
  wire fsync_vc5_rst_reg0;
  wire fsync_vc6_int_reg;
  wire fsync_vc6_int_reg_i_1_n_0;
  wire fsync_vc6_int_reg_i_2_n_0;
  wire fsync_vc6_rst_reg;
  wire fsync_vc6_rst_reg0;
  wire fsync_vc7_int_reg;
  wire fsync_vc7_int_reg_i_1_n_0;
  wire fsync_vc7_int_reg_i_2_n_0;
  wire fsync_vc7_rst_reg;
  wire fsync_vc7_rst_reg0;
  wire fsync_vc8_int_reg;
  wire fsync_vc8_int_reg_i_1_n_0;
  wire fsync_vc8_rst_reg;
  wire fsync_vc8_rst_reg0;
  wire fsync_vc9_int_reg;
  wire fsync_vc9_int_reg_i_1_n_0;
  wire fsync_vc9_rst_reg;
  wire fsync_vc9_rst_reg0;
  wire hunt_ecccrc;
  wire hunt_ecccrc_i_1_n_0;
  wire last_beat0;
  wire last_beat078_out;
  wire last_beat1;
  wire line_buf_i_2_n_0;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire [63:0]m_axis_tdata;
  wire \m_axis_tdata[63]_i_2_n_0 ;
  wire \m_axis_tdata[63]_i_3_n_0 ;
  wire [3:0]m_axis_tdest;
  wire [7:0]m_axis_tkeep;
  wire [7:0]m_axis_tkeep_i;
  wire m_axis_tlast_i_1_n_0;
  wire m_axis_tlast_reg_0;
  wire m_axis_tready;
  wire [79:0]m_axis_tuser;
  wire m_axis_tuser0;
  wire m_axis_tuser1114_out;
  wire \m_axis_tuser[0]_i_1_n_0 ;
  wire \m_axis_tuser[0]_i_2_n_0 ;
  wire \m_axis_tuser[0]_i_6_n_0 ;
  wire \m_axis_tuser[0]_i_7_n_0 ;
  wire \m_axis_tuser[0]_i_8_n_0 ;
  wire \m_axis_tuser[0]_i_9_n_0 ;
  wire \m_axis_tuser_reg[0]_i_3_n_0 ;
  wire \m_axis_tuser_reg[0]_i_4_n_0 ;
  wire \m_axis_tuser_reg[0]_i_5_n_0 ;
  wire m_axis_tvalid0;
  wire m_axis_tvalid1150_out;
  wire m_axis_tvalid1154_out;
  wire m_axis_tvalid_i_10_n_0;
  wire m_axis_tvalid_i_11_n_0;
  wire m_axis_tvalid_i_12_n_0;
  wire m_axis_tvalid_i_13_n_0;
  wire m_axis_tvalid_i_14_n_0;
  wire m_axis_tvalid_i_15_n_0;
  wire m_axis_tvalid_i_16_n_0;
  wire m_axis_tvalid_i_17_n_0;
  wire m_axis_tvalid_i_18_n_0;
  wire m_axis_tvalid_i_19_n_0;
  wire m_axis_tvalid_i_1_n_0;
  wire m_axis_tvalid_i_20_n_0;
  wire m_axis_tvalid_i_21_n_0;
  wire m_axis_tvalid_i_22_n_0;
  wire m_axis_tvalid_i_23_n_0;
  wire m_axis_tvalid_i_24_n_0;
  wire m_axis_tvalid_i_25_n_0;
  wire m_axis_tvalid_i_26_n_0;
  wire m_axis_tvalid_i_27_n_0;
  wire m_axis_tvalid_i_28_n_0;
  wire m_axis_tvalid_i_29_n_0;
  wire m_axis_tvalid_i_2_n_0;
  wire m_axis_tvalid_i_9_n_0;
  wire m_axis_tvalid_reg_0;
  wire m_axis_tvalid_reg_i_8_n_0;
  wire m_axis_tvalid_reg_i_8_n_1;
  wire m_axis_tvalid_reg_i_8_n_2;
  wire m_axis_tvalid_reg_i_8_n_3;
  wire m_axis_tvalid_reg_i_8_n_4;
  wire m_axis_tvalid_reg_i_8_n_5;
  wire m_axis_tvalid_reg_i_8_n_6;
  wire m_axis_tvalid_reg_i_8_n_7;
  wire [67:0]mem_rdata;
  wire \mem_rdata_r_reg_n_0_[0] ;
  wire \mem_rdata_r_reg_n_0_[1] ;
  wire \mem_rdata_r_reg_n_0_[26] ;
  wire \mem_rdata_r_reg_n_0_[27] ;
  wire \mem_rdata_r_reg_n_0_[28] ;
  wire \mem_rdata_r_reg_n_0_[29] ;
  wire \mem_rdata_r_reg_n_0_[2] ;
  wire \mem_rdata_r_reg_n_0_[30] ;
  wire \mem_rdata_r_reg_n_0_[31] ;
  wire \mem_rdata_r_reg_n_0_[32] ;
  wire \mem_rdata_r_reg_n_0_[33] ;
  wire \mem_rdata_r_reg_n_0_[34] ;
  wire \mem_rdata_r_reg_n_0_[35] ;
  wire \mem_rdata_r_reg_n_0_[36] ;
  wire \mem_rdata_r_reg_n_0_[37] ;
  wire \mem_rdata_r_reg_n_0_[38] ;
  wire \mem_rdata_r_reg_n_0_[39] ;
  wire \mem_rdata_r_reg_n_0_[3] ;
  wire \mem_rdata_r_reg_n_0_[40] ;
  wire \mem_rdata_r_reg_n_0_[41] ;
  wire \mem_rdata_r_reg_n_0_[42] ;
  wire \mem_rdata_r_reg_n_0_[43] ;
  wire \mem_rdata_r_reg_n_0_[44] ;
  wire \mem_rdata_r_reg_n_0_[45] ;
  wire \mem_rdata_r_reg_n_0_[46] ;
  wire \mem_rdata_r_reg_n_0_[47] ;
  wire \mem_rdata_r_reg_n_0_[48] ;
  wire \mem_rdata_r_reg_n_0_[49] ;
  wire \mem_rdata_r_reg_n_0_[4] ;
  wire \mem_rdata_r_reg_n_0_[50] ;
  wire \mem_rdata_r_reg_n_0_[51] ;
  wire \mem_rdata_r_reg_n_0_[52] ;
  wire \mem_rdata_r_reg_n_0_[53] ;
  wire \mem_rdata_r_reg_n_0_[54] ;
  wire \mem_rdata_r_reg_n_0_[55] ;
  wire \mem_rdata_r_reg_n_0_[56] ;
  wire \mem_rdata_r_reg_n_0_[57] ;
  wire \mem_rdata_r_reg_n_0_[58] ;
  wire \mem_rdata_r_reg_n_0_[59] ;
  wire \mem_rdata_r_reg_n_0_[5] ;
  wire \mem_rdata_r_reg_n_0_[60] ;
  wire \mem_rdata_r_reg_n_0_[61] ;
  wire \mem_rdata_r_reg_n_0_[62] ;
  wire \mem_rdata_r_reg_n_0_[63] ;
  wire mem_rvld;
  wire [1:0]mem_vc;
  wire [3:2]mem_vc__0;
  wire [15:0]mem_wc;
  wire [3:0]p_0_in;
  wire p_0_in112_out;
  wire p_0_in41_in;
  wire p_0_in50_in;
  wire p_0_in59_in;
  wire [15:2]p_0_in__0;
  wire p_0_out;
  wire p_145_in;
  wire p_149_in;
  wire [69:69]p_2_out;
  wire p_3_out;
  wire p_43_out;
  wire p_46_out;
  wire p_52_out;
  wire p_55_out;
  wire p_61_out;
  wire p_64_out;
  wire p_70_out;
  wire p_72_in;
  wire p_73_out;
  wire pend_data;
  wire pend_data_i_1_n_0;
  wire pxl_opcodes;
  wire rd_en;
  wire strm_prgrs_reg;
  wire swap_strb;
  wire tlast_d1;
  wire tvalid_d1;
  wire [7:5]\NLW_bytes_sent_reg[15]_i_2_CO_UNCONNECTED ;
  wire [7:6]\NLW_bytes_sent_reg[15]_i_2_O_UNCONNECTED ;
  wire [7:1]NLW_m_axis_tvalid_reg_i_6_CO_UNCONNECTED;
  wire [7:0]NLW_m_axis_tvalid_reg_i_6_O_UNCONNECTED;
  wire [7:0]NLW_m_axis_tvalid_reg_i_8_O_UNCONNECTED;

  LUT3 #(
    .INIT(8'h4F)) 
    \LINE_NUM_VC[0].line_num[0][15]_i_1 
       (.I0(p_70_out),
        .I1(\LINE_NUM_VC[0].rst_lnum_reg_n_0_[0] ),
        .I2(m_axis_aresetn),
        .O(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \LINE_NUM_VC[0].line_num[0][15]_i_2 
       (.I0(mem_rvld),
        .I1(p_0_in[0]),
        .I2(p_0_in[2]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(\LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ),
        .O(p_70_out));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][0] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[0]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [0]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][10] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[10]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [10]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][11] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[11]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [11]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][12] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[12]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [12]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][13] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[13]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [13]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][14] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[14]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [14]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][15] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[15]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [15]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][1] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[1]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [1]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][2] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[2]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [2]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][3] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[3]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [3]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][4] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[4]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [4]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][5] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[5]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [5]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][6] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[6]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [6]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][7] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[7]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [7]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][8] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[8]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [8]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[0].line_num_reg[0][9] 
       (.C(m_axis_aclk),
        .CE(p_70_out),
        .D(mem_wc[9]),
        .Q(\LINE_NUM_VC[0].line_num_reg[0]_0 [9]),
        .R(\LINE_NUM_VC[0].line_num[0][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF50940084)) 
    \LINE_NUM_VC[0].rst_lnum[0]_i_1 
       (.I0(p_0_in[2]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(\LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ),
        .I5(p_73_out),
        .O(p_3_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \LINE_NUM_VC[0].rst_lnum[0]_i_2 
       (.I0(mem_vc__0[2]),
        .I1(mem_vc__0[3]),
        .I2(mem_vc[0]),
        .I3(mem_vc[1]),
        .O(\LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \LINE_NUM_VC[0].rst_lnum[0]_i_3 
       (.I0(p_72_in),
        .I1(cur_lp_vc[1]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[3]),
        .I4(cur_lp_vc[2]),
        .O(p_73_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    \LINE_NUM_VC[0].rst_lnum[0]_i_4 
       (.I0(fsync_vc0_rst_reg1),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .O(p_72_in));
  FDRE \LINE_NUM_VC[0].rst_lnum_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_3_out),
        .Q(\LINE_NUM_VC[0].rst_lnum_reg_n_0_[0] ),
        .R(SR));
  LUT3 #(
    .INIT(8'h4F)) 
    \LINE_NUM_VC[1].line_num[1][15]_i_1 
       (.I0(p_61_out),
        .I1(\LINE_NUM_VC[1].rst_lnum_reg_n_0_[1] ),
        .I2(m_axis_aresetn),
        .O(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \LINE_NUM_VC[1].line_num[1][15]_i_2 
       (.I0(mem_rvld),
        .I1(p_0_in[0]),
        .I2(p_0_in[2]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(p_0_in59_in),
        .O(p_61_out));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][0] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[0]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [0]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][10] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[10]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [10]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][11] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[11]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [11]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][12] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[12]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [12]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][13] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[13]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [13]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][14] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[14]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [14]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][15] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[15]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [15]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][1] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[1]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [1]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][2] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[2]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [2]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][3] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[3]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [3]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][4] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[4]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [4]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][5] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[5]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [5]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][6] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[6]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [6]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][7] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[7]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [7]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][8] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[8]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [8]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[1].line_num_reg[1][9] 
       (.C(m_axis_aclk),
        .CE(p_61_out),
        .D(mem_wc[9]),
        .Q(\LINE_NUM_VC[1].line_num_reg[1]_1 [9]),
        .R(\LINE_NUM_VC[1].line_num[1][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF50940084)) 
    \LINE_NUM_VC[1].rst_lnum[1]_i_1 
       (.I0(p_0_in[2]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in59_in),
        .I5(p_64_out),
        .O(\LINE_NUM_VC[1].rst_lnum[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \LINE_NUM_VC[1].rst_lnum[1]_i_2 
       (.I0(mem_vc__0[2]),
        .I1(mem_vc__0[3]),
        .I2(mem_vc[0]),
        .I3(mem_vc[1]),
        .O(p_0_in59_in));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \LINE_NUM_VC[1].rst_lnum[1]_i_3 
       (.I0(p_72_in),
        .I1(cur_lp_vc[1]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[3]),
        .I4(cur_lp_vc[2]),
        .O(p_64_out));
  FDRE \LINE_NUM_VC[1].rst_lnum_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_NUM_VC[1].rst_lnum[1]_i_1_n_0 ),
        .Q(\LINE_NUM_VC[1].rst_lnum_reg_n_0_[1] ),
        .R(SR));
  LUT3 #(
    .INIT(8'h4F)) 
    \LINE_NUM_VC[2].line_num[2][15]_i_1 
       (.I0(p_52_out),
        .I1(\LINE_NUM_VC[2].rst_lnum_reg_n_0_[2] ),
        .I2(m_axis_aresetn),
        .O(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \LINE_NUM_VC[2].line_num[2][15]_i_2 
       (.I0(mem_rvld),
        .I1(p_0_in[0]),
        .I2(p_0_in[2]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(p_0_in50_in),
        .O(p_52_out));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][0] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[0]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [0]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][10] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[10]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [10]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][11] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[11]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [11]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][12] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[12]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [12]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][13] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[13]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [13]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][14] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[14]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [14]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][15] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[15]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [15]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][1] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[1]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [1]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][2] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[2]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [2]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][3] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[3]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [3]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][4] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[4]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [4]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][5] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[5]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [5]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][6] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[6]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [6]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][7] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[7]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [7]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][8] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[8]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [8]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[2].line_num_reg[2][9] 
       (.C(m_axis_aclk),
        .CE(p_52_out),
        .D(mem_wc[9]),
        .Q(\LINE_NUM_VC[2].line_num_reg[2]_2 [9]),
        .R(\LINE_NUM_VC[2].line_num[2][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2200C230)) 
    \LINE_NUM_VC[2].rst_lnum[2]_i_1 
       (.I0(p_0_in50_in),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(p_55_out),
        .O(\LINE_NUM_VC[2].rst_lnum[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \LINE_NUM_VC[2].rst_lnum[2]_i_2 
       (.I0(mem_vc__0[2]),
        .I1(mem_vc__0[3]),
        .I2(mem_vc[1]),
        .I3(mem_vc[0]),
        .O(p_0_in50_in));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    \LINE_NUM_VC[2].rst_lnum[2]_i_3 
       (.I0(p_72_in),
        .I1(cur_lp_vc[0]),
        .I2(cur_lp_vc[1]),
        .I3(cur_lp_vc[3]),
        .I4(cur_lp_vc[2]),
        .O(p_55_out));
  FDRE \LINE_NUM_VC[2].rst_lnum_reg[2] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\LINE_NUM_VC[2].rst_lnum[2]_i_1_n_0 ),
        .Q(\LINE_NUM_VC[2].rst_lnum_reg_n_0_[2] ),
        .R(SR));
  LUT3 #(
    .INIT(8'h4F)) 
    \LINE_NUM_VC[3].line_num[3][15]_i_1 
       (.I0(p_43_out),
        .I1(\LINE_NUM_VC[3].rst_lnum_reg_n_0_[3] ),
        .I2(m_axis_aresetn),
        .O(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \LINE_NUM_VC[3].line_num[3][15]_i_2 
       (.I0(mem_rvld),
        .I1(p_0_in[0]),
        .I2(p_0_in[2]),
        .I3(p_0_in[1]),
        .I4(p_0_in[3]),
        .I5(p_0_in41_in),
        .O(p_43_out));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][0] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[0]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [0]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][10] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[10]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [10]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][11] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[11]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [11]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][12] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[12]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [12]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][13] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[13]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [13]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][14] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[14]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [14]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][15] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[15]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [15]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][1] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[1]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [1]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][2] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[2]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [2]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][3] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[3]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [3]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][4] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[4]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [4]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][5] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[5]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [5]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][6] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[6]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [6]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][7] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[7]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [7]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][8] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[8]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [8]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  FDRE \LINE_NUM_VC[3].line_num_reg[3][9] 
       (.C(m_axis_aclk),
        .CE(p_43_out),
        .D(mem_wc[9]),
        .Q(\LINE_NUM_VC[3].line_num_reg[3]_3 [9]),
        .R(\LINE_NUM_VC[3].line_num[3][15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF2200C230)) 
    \LINE_NUM_VC[3].rst_lnum[3]_i_1 
       (.I0(p_0_in41_in),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(p_46_out),
        .O(p_0_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \LINE_NUM_VC[3].rst_lnum[3]_i_2 
       (.I0(mem_vc__0[2]),
        .I1(mem_vc__0[3]),
        .I2(mem_vc[0]),
        .I3(mem_vc[1]),
        .O(p_0_in41_in));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \LINE_NUM_VC[3].rst_lnum[3]_i_3 
       (.I0(p_72_in),
        .I1(cur_lp_vc[1]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[3]),
        .I4(cur_lp_vc[2]),
        .O(p_46_out));
  FDRE \LINE_NUM_VC[3].rst_lnum_reg[3] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_0_out),
        .Q(\LINE_NUM_VC[3].rst_lnum_reg_n_0_[3] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hAFBF)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[0]_i_1 
       (.I0(\cur_lp_wc_reg_n_0_[2] ),
        .I1(\cur_lp_wc_reg_n_0_[0] ),
        .I2(swap_strb),
        .I3(\cur_lp_wc_reg_n_0_[1] ),
        .O(m_axis_tkeep_i[0]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hEBFB)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[1]_i_1 
       (.I0(\cur_lp_wc_reg_n_0_[2] ),
        .I1(\cur_lp_wc_reg_n_0_[0] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(swap_strb),
        .O(m_axis_tkeep_i[1]));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT4 #(
    .INIT(16'hFBEB)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[2]_i_1 
       (.I0(\cur_lp_wc_reg_n_0_[2] ),
        .I1(\cur_lp_wc_reg_n_0_[0] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(swap_strb),
        .O(m_axis_tkeep_i[2]));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT4 #(
    .INIT(16'hFAFB)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[3]_i_1 
       (.I0(\cur_lp_wc_reg_n_0_[2] ),
        .I1(\cur_lp_wc_reg_n_0_[0] ),
        .I2(swap_strb),
        .I3(\cur_lp_wc_reg_n_0_[1] ),
        .O(m_axis_tkeep_i[3]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'h4443)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[4]_i_1 
       (.I0(swap_strb),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(\cur_lp_wc_reg_n_0_[0] ),
        .O(m_axis_tkeep_i[4]));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT4 #(
    .INIT(16'hC043)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[5]_i_1 
       (.I0(swap_strb),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(\cur_lp_wc_reg_n_0_[0] ),
        .O(m_axis_tkeep_i[5]));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'hC083)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[6]_i_1 
       (.I0(swap_strb),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(\cur_lp_wc_reg_n_0_[0] ),
        .O(m_axis_tkeep_i[6]));
  LUT4 #(
    .INIT(16'h80FF)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1 
       (.I0(m_axis_tvalid_reg_0),
        .I1(m_axis_tready),
        .I2(m_axis_tlast_reg_0),
        .I3(m_axis_aresetn),
        .O(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT4 #(
    .INIT(16'h8883)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_2 
       (.I0(swap_strb),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(\cur_lp_wc_reg_n_0_[1] ),
        .I3(\cur_lp_wc_reg_n_0_[0] ),
        .O(m_axis_tkeep_i[7]));
  LUT5 #(
    .INIT(32'h00000080)) 
    \TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_3 
       (.I0(cur_lp_dtype[3]),
        .I1(cur_lp_dtype[4]),
        .I2(cur_lp_dtype[1]),
        .I3(cur_lp_dtype[0]),
        .I4(cur_lp_dtype[5]),
        .O(swap_strb));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[0] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[0]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[0] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[1] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[1]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[1] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[2] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[2]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[2] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[3] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[3]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[3] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[4] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[4]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[4] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[5] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[5]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[5] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[6] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[6]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[6] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDSE \TSTRB_KEPP_64.m_axis_tkeep_i_reg[7] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(m_axis_tkeep_i[7]),
        .Q(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[7] ),
        .S(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3FFF00000A8A0000)) 
    \TUSER_WIDTH_GTE2.m_axis_tuser[1]_i_1 
       (.I0(m_axis_tuser0),
        .I1(m_axis_tready),
        .I2(m_axis_tvalid_reg_0),
        .I3(m_axis_tlast_reg_0),
        .I4(m_axis_aresetn),
        .I5(m_axis_tuser[1]),
        .O(\TUSER_WIDTH_GTE2.m_axis_tuser[1]_i_1_n_0 ));
  FDRE \TUSER_WIDTH_GTE2.m_axis_tuser_reg[1] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\TUSER_WIDTH_GTE2.m_axis_tuser[1]_i_1_n_0 ),
        .Q(m_axis_tuser[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[0] ),
        .I1(\frame_num_vc2_reg_n_0_[0] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[0] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[0] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[0] ),
        .I1(\frame_num_vc6_reg_n_0_[0] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[0] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[0] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_6 
       (.I0(frame_num_vc11__0[0]),
        .I1(\frame_num_vc10_reg_n_0_[0] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[0] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[0] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[0] ),
        .I1(\frame_num_vc14_reg_n_0_[0] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[0] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[0] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[1] ),
        .I1(\frame_num_vc2_reg_n_0_[1] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[1] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[1] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[1] ),
        .I1(\frame_num_vc6_reg_n_0_[1] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[1] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[1] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_6 
       (.I0(frame_num_vc11__0[1]),
        .I1(\frame_num_vc10_reg_n_0_[1] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[1] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[1] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[1] ),
        .I1(\frame_num_vc14_reg_n_0_[1] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[1] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[1] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[2] ),
        .I1(\frame_num_vc2_reg_n_0_[2] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[2] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[2] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[2] ),
        .I1(\frame_num_vc6_reg_n_0_[2] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[2] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[2] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_6 
       (.I0(frame_num_vc11__0[2]),
        .I1(\frame_num_vc10_reg_n_0_[2] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[2] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[2] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[2] ),
        .I1(\frame_num_vc14_reg_n_0_[2] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[2] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[2] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[3] ),
        .I1(\frame_num_vc2_reg_n_0_[3] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[3] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[3] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[3] ),
        .I1(\frame_num_vc6_reg_n_0_[3] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[3] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[3] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_6 
       (.I0(frame_num_vc11__0[3]),
        .I1(\frame_num_vc10_reg_n_0_[3] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[3] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[3] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[3] ),
        .I1(\frame_num_vc14_reg_n_0_[3] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[3] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[3] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[4] ),
        .I1(\frame_num_vc2_reg_n_0_[4] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[4] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[4] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[4] ),
        .I1(\frame_num_vc6_reg_n_0_[4] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[4] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[4] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_6 
       (.I0(frame_num_vc11__0[4]),
        .I1(\frame_num_vc10_reg_n_0_[4] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[4] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[4] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[4] ),
        .I1(\frame_num_vc14_reg_n_0_[4] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[4] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[4] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[5] ),
        .I1(\frame_num_vc2_reg_n_0_[5] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[5] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[5] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[5] ),
        .I1(\frame_num_vc6_reg_n_0_[5] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[5] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[5] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_6 
       (.I0(frame_num_vc11__0[5]),
        .I1(\frame_num_vc10_reg_n_0_[5] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[5] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[5] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[5] ),
        .I1(\frame_num_vc14_reg_n_0_[5] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[5] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[5] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[6] ),
        .I1(\frame_num_vc2_reg_n_0_[6] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[6] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[6] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[6] ),
        .I1(\frame_num_vc6_reg_n_0_[6] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[6] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[6] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_6 
       (.I0(frame_num_vc11__0[6]),
        .I1(\frame_num_vc10_reg_n_0_[6] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[6] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[6] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[6] ),
        .I1(\frame_num_vc14_reg_n_0_[6] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[6] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[6] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[7] ),
        .I1(\frame_num_vc2_reg_n_0_[7] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[7] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[7] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[7] ),
        .I1(\frame_num_vc6_reg_n_0_[7] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[7] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[7] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_6 
       (.I0(frame_num_vc11__0[7]),
        .I1(\frame_num_vc10_reg_n_0_[7] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[7] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[7] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[7] ),
        .I1(\frame_num_vc14_reg_n_0_[7] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[7] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[7] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[8] ),
        .I1(\frame_num_vc2_reg_n_0_[8] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[8] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[8] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[8] ),
        .I1(\frame_num_vc6_reg_n_0_[8] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[8] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[8] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_6 
       (.I0(frame_num_vc11__0[8]),
        .I1(\frame_num_vc10_reg_n_0_[8] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[8] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[8] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[8] ),
        .I1(\frame_num_vc14_reg_n_0_[8] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[8] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[8] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[9] ),
        .I1(\frame_num_vc2_reg_n_0_[9] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[9] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[9] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[9] ),
        .I1(\frame_num_vc6_reg_n_0_[9] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[9] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[9] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_6 
       (.I0(frame_num_vc11__0[9]),
        .I1(\frame_num_vc10_reg_n_0_[9] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[9] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[9] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[9] ),
        .I1(\frame_num_vc14_reg_n_0_[9] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[9] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[9] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[10] ),
        .I1(\frame_num_vc2_reg_n_0_[10] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[10] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[10] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[10] ),
        .I1(\frame_num_vc6_reg_n_0_[10] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[10] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[10] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_6 
       (.I0(frame_num_vc11__0[10]),
        .I1(\frame_num_vc10_reg_n_0_[10] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[10] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[10] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[10] ),
        .I1(\frame_num_vc14_reg_n_0_[10] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[10] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[10] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[11] ),
        .I1(\frame_num_vc2_reg_n_0_[11] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[11] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[11] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[11] ),
        .I1(\frame_num_vc6_reg_n_0_[11] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[11] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[11] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_6 
       (.I0(frame_num_vc11__0[11]),
        .I1(\frame_num_vc10_reg_n_0_[11] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[11] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[11] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[11] ),
        .I1(\frame_num_vc14_reg_n_0_[11] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[11] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[11] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[12] ),
        .I1(\frame_num_vc2_reg_n_0_[12] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[12] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[12] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[12] ),
        .I1(\frame_num_vc6_reg_n_0_[12] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[12] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[12] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_6 
       (.I0(frame_num_vc11__0[12]),
        .I1(\frame_num_vc10_reg_n_0_[12] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[12] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[12] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[12] ),
        .I1(\frame_num_vc14_reg_n_0_[12] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[12] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[12] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[13] ),
        .I1(\frame_num_vc2_reg_n_0_[13] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[13] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[13] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[13] ),
        .I1(\frame_num_vc6_reg_n_0_[13] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[13] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[13] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_6 
       (.I0(frame_num_vc11__0[13]),
        .I1(\frame_num_vc10_reg_n_0_[13] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[13] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[13] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[13] ),
        .I1(\frame_num_vc14_reg_n_0_[13] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[13] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[13] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[14] ),
        .I1(\frame_num_vc2_reg_n_0_[14] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[14] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[14] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[14] ),
        .I1(\frame_num_vc6_reg_n_0_[14] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[14] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[14] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_6 
       (.I0(frame_num_vc11__0[14]),
        .I1(\frame_num_vc10_reg_n_0_[14] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[14] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[14] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[14] ),
        .I1(\frame_num_vc14_reg_n_0_[14] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[14] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[14] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_4 
       (.I0(\frame_num_vc3_reg_n_0_[15] ),
        .I1(\frame_num_vc2_reg_n_0_[15] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc1_reg_n_0_[15] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc0_reg_n_0_[15] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_5 
       (.I0(\frame_num_vc7_reg_n_0_[15] ),
        .I1(\frame_num_vc6_reg_n_0_[15] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc5_reg_n_0_[15] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc4_reg_n_0_[15] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_6 
       (.I0(frame_num_vc11__0[15]),
        .I1(\frame_num_vc10_reg_n_0_[15] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc9_reg_n_0_[15] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc8_reg_n_0_[15] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_7 
       (.I0(\frame_num_vc15_reg_n_0_[15] ),
        .I1(\frame_num_vc14_reg_n_0_[15] ),
        .I2(cur_lp_vc[1]),
        .I3(\frame_num_vc13_reg_n_0_[15] ),
        .I4(cur_lp_vc[0]),
        .I5(\frame_num_vc12_reg_n_0_[15] ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_7_n_0 ));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_1_n_0 ),
        .Q(m_axis_tuser[2]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[16]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[16]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_1_n_0 ),
        .Q(m_axis_tuser[3]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[17]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[17]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_1_n_0 ),
        .Q(m_axis_tuser[4]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[18]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[18]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_1_n_0 ),
        .Q(m_axis_tuser[5]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[19]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[19]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_1_n_0 ),
        .Q(m_axis_tuser[6]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[20]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[20]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_1_n_0 ),
        .Q(m_axis_tuser[7]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[21]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[21]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_1_n_0 ),
        .Q(m_axis_tuser[8]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[22]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[22]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_1_n_0 ),
        .Q(m_axis_tuser[9]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[23]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[23]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_1_n_0 ),
        .Q(m_axis_tuser[10]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[24]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[24]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_1_n_0 ),
        .Q(m_axis_tuser[11]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[25]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[25]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_1_n_0 ),
        .Q(m_axis_tuser[12]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[26]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[26]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_1_n_0 ),
        .Q(m_axis_tuser[13]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[27]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[27]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_1_n_0 ),
        .Q(m_axis_tuser[14]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[28]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[28]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_1_n_0 ),
        .Q(m_axis_tuser[15]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[29]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[29]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_1_n_0 ),
        .Q(m_axis_tuser[16]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[30]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[30]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  FDRE \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_1_n_0 ),
        .Q(m_axis_tuser[17]),
        .R(SR));
  MUXF8 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_1 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_2_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_3_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_1_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_2 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_4_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_5_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_2_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_3 
       (.I0(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_6_n_0 ),
        .I1(\TUSER_WIDTH_GTE32.m_axis_tuser[31]_i_7_n_0 ),
        .O(\TUSER_WIDTH_GTE32.m_axis_tuser_reg[31]_i_3_n_0 ),
        .S(cur_lp_vc[2]));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [0]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [0]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [0]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [0]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [1]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [1]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [1]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [1]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [2]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [2]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [2]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [2]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [3]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [3]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [3]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [4]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [4]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [4]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [4]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [5]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [5]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [5]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [5]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [6]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [6]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [6]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [6]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [7]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [7]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [7]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [7]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [8]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [8]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [8]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [8]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [9]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [9]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [9]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [9]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [10]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [10]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [10]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [10]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [11]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [11]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [11]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [11]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [12]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [12]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [12]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [12]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [13]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [13]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [13]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [13]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [14]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [14]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [14]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [14]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_1 
       (.I0(cur_lp_vc[2]),
        .I1(\TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_2_n_0 ),
        .I2(cur_lp_vc[3]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_2 
       (.I0(\LINE_NUM_VC[3].line_num_reg[3]_3 [15]),
        .I1(\LINE_NUM_VC[2].line_num_reg[2]_2 [15]),
        .I2(cur_lp_vc[1]),
        .I3(\LINE_NUM_VC[1].line_num_reg[1]_1 [15]),
        .I4(cur_lp_vc[0]),
        .I5(\LINE_NUM_VC[0].line_num_reg[0]_0 [15]),
        .O(\TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_2_n_0 ));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[32] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[32]_i_1_n_0 ),
        .Q(m_axis_tuser[18]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[33] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[33]_i_1_n_0 ),
        .Q(m_axis_tuser[19]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[34] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[34]_i_1_n_0 ),
        .Q(m_axis_tuser[20]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[35] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[35]_i_1_n_0 ),
        .Q(m_axis_tuser[21]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[36] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[36]_i_1_n_0 ),
        .Q(m_axis_tuser[22]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[37] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[37]_i_1_n_0 ),
        .Q(m_axis_tuser[23]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[38] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[38]_i_1_n_0 ),
        .Q(m_axis_tuser[24]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[39] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[39]_i_1_n_0 ),
        .Q(m_axis_tuser[25]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[40] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[40]_i_1_n_0 ),
        .Q(m_axis_tuser[26]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[41] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[41]_i_1_n_0 ),
        .Q(m_axis_tuser[27]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[42] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[42]_i_1_n_0 ),
        .Q(m_axis_tuser[28]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[43] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[43]_i_1_n_0 ),
        .Q(m_axis_tuser[29]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[44] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[44]_i_1_n_0 ),
        .Q(m_axis_tuser[30]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[45] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[45]_i_1_n_0 ),
        .Q(m_axis_tuser[31]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[46] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[46]_i_1_n_0 ),
        .Q(m_axis_tuser[32]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE48.m_axis_tuser_reg[47] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\TUSER_WIDTH_GTE48.m_axis_tuser[47]_i_1_n_0 ),
        .Q(m_axis_tuser[33]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[48] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[0] ),
        .Q(m_axis_tuser[34]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[49] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[1] ),
        .Q(m_axis_tuser[35]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[50] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[2] ),
        .Q(m_axis_tuser[36]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[51] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[3] ),
        .Q(m_axis_tuser[37]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[52] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[4] ),
        .Q(m_axis_tuser[38]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[53] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[5] ),
        .Q(m_axis_tuser[39]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[54] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[6] ),
        .Q(m_axis_tuser[40]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[55] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[7] ),
        .Q(m_axis_tuser[41]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[56] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[8] ),
        .Q(m_axis_tuser[42]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[57] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[9] ),
        .Q(m_axis_tuser[43]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[58] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[10] ),
        .Q(m_axis_tuser[44]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[59] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[11] ),
        .Q(m_axis_tuser[45]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[60] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[12] ),
        .Q(m_axis_tuser[46]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[61] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[13] ),
        .Q(m_axis_tuser[47]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[62] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[14] ),
        .Q(m_axis_tuser[48]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE64.m_axis_tuser_reg[63] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(\cur_lp_wc_reg_n_0_[15] ),
        .Q(m_axis_tuser[49]),
        .R(SR));
  LUT6 #(
    .INIT(64'hF4000000F500F500)) 
    \TUSER_WIDTH_GTE96.m_axis_tuser[69]_i_1 
       (.I0(strm_prgrs_reg),
        .I1(tvalid_d1),
        .I2(tlast_d1),
        .I3(p_0_in112_out),
        .I4(m_axis_tready),
        .I5(m_axis_tvalid_reg_0),
        .O(p_2_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT4 #(
    .INIT(16'h0100)) 
    \TUSER_WIDTH_GTE96.m_axis_tuser[69]_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(mem_rvld),
        .O(p_0_in112_out));
  LUT2 #(
    .INIT(4'hB)) 
    \TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1 
       (.I0(m_axis_tready),
        .I1(m_axis_tvalid_reg_0),
        .O(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[64] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[0]),
        .Q(m_axis_tuser[50]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[65] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[1]),
        .Q(m_axis_tuser[51]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[66] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[2]),
        .Q(m_axis_tuser[52]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[67] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[3]),
        .Q(m_axis_tuser[53]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[68] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[4]),
        .Q(m_axis_tuser[54]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[69] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_dtype[5]),
        .Q(m_axis_tuser[55]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[72] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[0] ),
        .Q(m_axis_tuser[56]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[73] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[1] ),
        .Q(m_axis_tuser[57]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[74] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[2] ),
        .Q(m_axis_tuser[58]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[75] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[3] ),
        .Q(m_axis_tuser[59]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[76] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[4] ),
        .Q(m_axis_tuser[60]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[77] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[5] ),
        .Q(m_axis_tuser[61]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[78] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_vc[0]),
        .Q(m_axis_tuser[62]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[79] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_vc[1]),
        .Q(m_axis_tuser[63]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[80] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[0]),
        .Q(m_axis_tuser[64]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[81] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[1]),
        .Q(m_axis_tuser[65]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[82] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[2]),
        .Q(m_axis_tuser[66]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[83] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[3]),
        .Q(m_axis_tuser[67]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[84] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[4]),
        .Q(m_axis_tuser[68]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[85] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[5]),
        .Q(m_axis_tuser[69]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[86] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[6]),
        .Q(m_axis_tuser[70]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[87] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[7]),
        .Q(m_axis_tuser[71]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[88] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[8]),
        .Q(m_axis_tuser[72]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[89] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[9]),
        .Q(m_axis_tuser[73]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[90] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[10]),
        .Q(m_axis_tuser[74]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[91] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[11]),
        .Q(m_axis_tuser[75]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[92] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[12]),
        .Q(m_axis_tuser[76]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[93] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[13]),
        .Q(m_axis_tuser[77]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[94] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[14]),
        .Q(m_axis_tuser[78]),
        .R(SR));
  FDRE \TUSER_WIDTH_GTE96.m_axis_tuser_reg[95] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_wc[15]),
        .Q(m_axis_tuser[79]),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \bytes_sent[15]_i_1 
       (.I0(m_axis_tvalid_reg_0),
        .I1(m_axis_tready),
        .O(axis_beat_smpld));
  LUT1 #(
    .INIT(2'h1)) 
    \bytes_sent[9]_i_2 
       (.I0(bytes_sent_reg[3]),
        .O(\bytes_sent[9]_i_2_n_0 ));
  FDRE \bytes_sent_reg[10] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[10]),
        .Q(bytes_sent_reg[10]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[11] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[11]),
        .Q(bytes_sent_reg[11]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[12] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[12]),
        .Q(bytes_sent_reg[12]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[13] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[13]),
        .Q(bytes_sent_reg[13]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[14] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[14]),
        .Q(bytes_sent_reg[14]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[15] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[15]),
        .Q(bytes_sent_reg[15]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \bytes_sent_reg[15]_i_2 
       (.CI(\bytes_sent_reg[9]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_bytes_sent_reg[15]_i_2_CO_UNCONNECTED [7:5],\bytes_sent_reg[15]_i_2_n_3 ,\bytes_sent_reg[15]_i_2_n_4 ,\bytes_sent_reg[15]_i_2_n_5 ,\bytes_sent_reg[15]_i_2_n_6 ,\bytes_sent_reg[15]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_bytes_sent_reg[15]_i_2_O_UNCONNECTED [7:6],p_0_in__0[15:10]}),
        .S({1'b0,1'b0,bytes_sent_reg[15:10]}));
  FDRE \bytes_sent_reg[2] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[2]),
        .Q(bytes_sent_reg[2]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[3] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[3]),
        .Q(bytes_sent_reg[3]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[4] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[4]),
        .Q(bytes_sent_reg[4]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[5] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[5]),
        .Q(bytes_sent_reg[5]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[6] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[6]),
        .Q(bytes_sent_reg[6]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[7] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[7]),
        .Q(bytes_sent_reg[7]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[8] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[8]),
        .Q(bytes_sent_reg[8]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  FDRE \bytes_sent_reg[9] 
       (.C(m_axis_aclk),
        .CE(axis_beat_smpld),
        .D(p_0_in__0[9]),
        .Q(bytes_sent_reg[9]),
        .R(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 \bytes_sent_reg[9]_i_1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\bytes_sent_reg[9]_i_1_n_0 ,\bytes_sent_reg[9]_i_1_n_1 ,\bytes_sent_reg[9]_i_1_n_2 ,\bytes_sent_reg[9]_i_1_n_3 ,\bytes_sent_reg[9]_i_1_n_4 ,\bytes_sent_reg[9]_i_1_n_5 ,\bytes_sent_reg[9]_i_1_n_6 ,\bytes_sent_reg[9]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,bytes_sent_reg[3],1'b0}),
        .O(p_0_in__0[9:2]),
        .S({bytes_sent_reg[9:4],\bytes_sent[9]_i_2_n_0 ,bytes_sent_reg[2]}));
  FDRE \cur_lp_dtype_reg[0] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[0] ),
        .Q(cur_lp_dtype[0]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_dtype_reg[1] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[1] ),
        .Q(cur_lp_dtype[1]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_dtype_reg[2] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[2] ),
        .Q(cur_lp_dtype[2]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_dtype_reg[3] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[3] ),
        .Q(cur_lp_dtype[3]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_dtype_reg[4] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[4] ),
        .Q(cur_lp_dtype[4]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_dtype_reg[5] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(\mem_rdata_r_reg_n_0_[5] ),
        .Q(cur_lp_dtype[5]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_vc_reg[0] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_vc[0]),
        .Q(cur_lp_vc[0]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_vc_reg[1] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_vc[1]),
        .Q(cur_lp_vc[1]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_vc_reg[2] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_vc__0[2]),
        .Q(cur_lp_vc[2]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_vc_reg[3] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_vc__0[3]),
        .Q(cur_lp_vc[3]),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT5 #(
    .INIT(32'h4100FFFF)) 
    cur_lp_wc_lte4_i_1
       (.I0(p_0_in[0]),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(m_axis_aresetn),
        .O(cur_lp_wc_lte4_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000080)) 
    cur_lp_wc_lte4_i_2
       (.I0(mem_rvld),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(p_0_in[0]),
        .O(cur_lp_vc0));
  LUT6 #(
    .INIT(64'h01FF000000000000)) 
    cur_lp_wc_lte4_i_3
       (.I0(mem_wc[0]),
        .I1(mem_wc[1]),
        .I2(mem_wc[2]),
        .I3(mem_wc[3]),
        .I4(cur_lp_wc_lte4_i_4_n_0),
        .I5(cur_lp_wc_lte4_i_5_n_0),
        .O(cur_lp_wc_lte4_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    cur_lp_wc_lte4_i_4
       (.I0(mem_wc[12]),
        .I1(mem_wc[13]),
        .I2(mem_wc[10]),
        .I3(mem_wc[11]),
        .I4(mem_wc[15]),
        .I5(mem_wc[14]),
        .O(cur_lp_wc_lte4_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    cur_lp_wc_lte4_i_5
       (.I0(mem_wc[6]),
        .I1(mem_wc[7]),
        .I2(mem_wc[4]),
        .I3(mem_wc[5]),
        .I4(mem_wc[9]),
        .I5(mem_wc[8]),
        .O(cur_lp_wc_lte4_i_5_n_0));
  FDRE cur_lp_wc_lte4_reg
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(cur_lp_wc_lte4_i_3_n_0),
        .Q(cur_lp_wc_lte4),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[0] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[0]),
        .Q(\cur_lp_wc_reg_n_0_[0] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[10] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[10]),
        .Q(\cur_lp_wc_reg_n_0_[10] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[11] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[11]),
        .Q(\cur_lp_wc_reg_n_0_[11] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[12] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[12]),
        .Q(\cur_lp_wc_reg_n_0_[12] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[13] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[13]),
        .Q(\cur_lp_wc_reg_n_0_[13] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[14] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[14]),
        .Q(\cur_lp_wc_reg_n_0_[14] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[15] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[15]),
        .Q(\cur_lp_wc_reg_n_0_[15] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[1] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[1]),
        .Q(\cur_lp_wc_reg_n_0_[1] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[2] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[2]),
        .Q(\cur_lp_wc_reg_n_0_[2] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[3] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[3]),
        .Q(\cur_lp_wc_reg_n_0_[3] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[4] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[4]),
        .Q(\cur_lp_wc_reg_n_0_[4] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[5] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[5]),
        .Q(\cur_lp_wc_reg_n_0_[5] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[6] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[6]),
        .Q(\cur_lp_wc_reg_n_0_[6] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[7] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[7]),
        .Q(\cur_lp_wc_reg_n_0_[7] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[8] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[8]),
        .Q(\cur_lp_wc_reg_n_0_[8] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  FDRE \cur_lp_wc_reg[9] 
       (.C(m_axis_aclk),
        .CE(cur_lp_vc0),
        .D(mem_wc[9]),
        .Q(\cur_lp_wc_reg_n_0_[9] ),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT5 #(
    .INIT(32'hFF80FFFF)) 
    \frame_num_vc0[15]_i_1 
       (.I0(mem_rvld),
        .I1(\LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ),
        .I2(\frame_num_vc0[15]_i_3_n_0 ),
        .I3(\frame_num_vc0[15]_i_4_n_0 ),
        .I4(m_axis_aresetn),
        .O(\frame_num_vc0[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \frame_num_vc0[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc0));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    \frame_num_vc0[15]_i_3 
       (.I0(p_0_in[0]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .O(\frame_num_vc0[15]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'h0082)) 
    \frame_num_vc0[15]_i_4 
       (.I0(p_0_in[1]),
        .I1(p_0_in[3]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .O(\frame_num_vc0[15]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT4 #(
    .INIT(16'h0010)) 
    \frame_num_vc0[15]_i_5 
       (.I0(p_0_in[2]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .O(fs_opcode));
  FDRE \frame_num_vc0_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[0]),
        .Q(\frame_num_vc0_reg_n_0_[0] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[10]),
        .Q(\frame_num_vc0_reg_n_0_[10] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[11]),
        .Q(\frame_num_vc0_reg_n_0_[11] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[12]),
        .Q(\frame_num_vc0_reg_n_0_[12] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[13]),
        .Q(\frame_num_vc0_reg_n_0_[13] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[14]),
        .Q(\frame_num_vc0_reg_n_0_[14] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[15]),
        .Q(\frame_num_vc0_reg_n_0_[15] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[1]),
        .Q(\frame_num_vc0_reg_n_0_[1] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[2]),
        .Q(\frame_num_vc0_reg_n_0_[2] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[3]),
        .Q(\frame_num_vc0_reg_n_0_[3] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[4]),
        .Q(\frame_num_vc0_reg_n_0_[4] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[5]),
        .Q(\frame_num_vc0_reg_n_0_[5] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[6]),
        .Q(\frame_num_vc0_reg_n_0_[6] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[7]),
        .Q(\frame_num_vc0_reg_n_0_[7] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[8]),
        .Q(\frame_num_vc0_reg_n_0_[8] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  FDRE \frame_num_vc0_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc0),
        .D(mem_wc[9]),
        .Q(\frame_num_vc0_reg_n_0_[9] ),
        .R(\frame_num_vc0[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc10[15]_i_1 
       (.I0(frame_num_vc101),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc10[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \frame_num_vc10[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc[1]),
        .I4(mem_vc[0]),
        .I5(fs_opcode),
        .O(frame_num_vc10));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \frame_num_vc10[15]_i_3 
       (.I0(mem_vc[0]),
        .I1(mem_vc[1]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc__0[3]),
        .I4(mem_rvld),
        .O(frame_num_vc101));
  FDRE \frame_num_vc10_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[0]),
        .Q(\frame_num_vc10_reg_n_0_[0] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[10]),
        .Q(\frame_num_vc10_reg_n_0_[10] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[11]),
        .Q(\frame_num_vc10_reg_n_0_[11] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[12]),
        .Q(\frame_num_vc10_reg_n_0_[12] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[13]),
        .Q(\frame_num_vc10_reg_n_0_[13] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[14]),
        .Q(\frame_num_vc10_reg_n_0_[14] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[15]),
        .Q(\frame_num_vc10_reg_n_0_[15] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[1]),
        .Q(\frame_num_vc10_reg_n_0_[1] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[2]),
        .Q(\frame_num_vc10_reg_n_0_[2] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[3]),
        .Q(\frame_num_vc10_reg_n_0_[3] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[4]),
        .Q(\frame_num_vc10_reg_n_0_[4] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[5]),
        .Q(\frame_num_vc10_reg_n_0_[5] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[6]),
        .Q(\frame_num_vc10_reg_n_0_[6] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[7]),
        .Q(\frame_num_vc10_reg_n_0_[7] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[8]),
        .Q(\frame_num_vc10_reg_n_0_[8] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  FDRE \frame_num_vc10_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc10),
        .D(mem_wc[9]),
        .Q(\frame_num_vc10_reg_n_0_[9] ),
        .R(\frame_num_vc10[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc11[15]_i_1 
       (.I0(frame_num_vc111),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc11[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \frame_num_vc11[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(\frame_num_vc11[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \frame_num_vc11[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc__0[3]),
        .I4(mem_rvld),
        .O(frame_num_vc111));
  FDRE \frame_num_vc11_reg[0] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[0]),
        .Q(frame_num_vc11__0[0]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[10] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[10]),
        .Q(frame_num_vc11__0[10]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[11] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[11]),
        .Q(frame_num_vc11__0[11]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[12] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[12]),
        .Q(frame_num_vc11__0[12]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[13] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[13]),
        .Q(frame_num_vc11__0[13]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[14] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[14]),
        .Q(frame_num_vc11__0[14]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[15] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[15]),
        .Q(frame_num_vc11__0[15]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[1] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[1]),
        .Q(frame_num_vc11__0[1]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[2] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[2]),
        .Q(frame_num_vc11__0[2]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[3] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[3]),
        .Q(frame_num_vc11__0[3]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[4] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[4]),
        .Q(frame_num_vc11__0[4]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[5] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[5]),
        .Q(frame_num_vc11__0[5]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[6] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[6]),
        .Q(frame_num_vc11__0[6]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[7] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[7]),
        .Q(frame_num_vc11__0[7]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[8] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[8]),
        .Q(frame_num_vc11__0[8]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  FDRE \frame_num_vc11_reg[9] 
       (.C(m_axis_aclk),
        .CE(\frame_num_vc11[15]_i_2_n_0 ),
        .D(mem_wc[9]),
        .Q(frame_num_vc11__0[9]),
        .R(\frame_num_vc11[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc12[15]_i_1 
       (.I0(frame_num_vc121),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc12[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \frame_num_vc12[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc12));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \frame_num_vc12[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc121));
  FDRE \frame_num_vc12_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[0]),
        .Q(\frame_num_vc12_reg_n_0_[0] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[10]),
        .Q(\frame_num_vc12_reg_n_0_[10] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[11]),
        .Q(\frame_num_vc12_reg_n_0_[11] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[12]),
        .Q(\frame_num_vc12_reg_n_0_[12] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[13]),
        .Q(\frame_num_vc12_reg_n_0_[13] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[14]),
        .Q(\frame_num_vc12_reg_n_0_[14] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[15]),
        .Q(\frame_num_vc12_reg_n_0_[15] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[1]),
        .Q(\frame_num_vc12_reg_n_0_[1] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[2]),
        .Q(\frame_num_vc12_reg_n_0_[2] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[3]),
        .Q(\frame_num_vc12_reg_n_0_[3] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[4]),
        .Q(\frame_num_vc12_reg_n_0_[4] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[5]),
        .Q(\frame_num_vc12_reg_n_0_[5] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[6]),
        .Q(\frame_num_vc12_reg_n_0_[6] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[7]),
        .Q(\frame_num_vc12_reg_n_0_[7] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[8]),
        .Q(\frame_num_vc12_reg_n_0_[8] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  FDRE \frame_num_vc12_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc12),
        .D(mem_wc[9]),
        .Q(\frame_num_vc12_reg_n_0_[9] ),
        .R(\frame_num_vc12[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc13[15]_i_1 
       (.I0(frame_num_vc131),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc13[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \frame_num_vc13[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc13));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \frame_num_vc13[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc131));
  FDRE \frame_num_vc13_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[0]),
        .Q(\frame_num_vc13_reg_n_0_[0] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[10]),
        .Q(\frame_num_vc13_reg_n_0_[10] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[11]),
        .Q(\frame_num_vc13_reg_n_0_[11] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[12]),
        .Q(\frame_num_vc13_reg_n_0_[12] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[13]),
        .Q(\frame_num_vc13_reg_n_0_[13] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[14]),
        .Q(\frame_num_vc13_reg_n_0_[14] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[15]),
        .Q(\frame_num_vc13_reg_n_0_[15] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[1]),
        .Q(\frame_num_vc13_reg_n_0_[1] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[2]),
        .Q(\frame_num_vc13_reg_n_0_[2] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[3]),
        .Q(\frame_num_vc13_reg_n_0_[3] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[4]),
        .Q(\frame_num_vc13_reg_n_0_[4] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[5]),
        .Q(\frame_num_vc13_reg_n_0_[5] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[6]),
        .Q(\frame_num_vc13_reg_n_0_[6] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[7]),
        .Q(\frame_num_vc13_reg_n_0_[7] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[8]),
        .Q(\frame_num_vc13_reg_n_0_[8] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  FDRE \frame_num_vc13_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc13),
        .D(mem_wc[9]),
        .Q(\frame_num_vc13_reg_n_0_[9] ),
        .R(\frame_num_vc13[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc14[15]_i_1 
       (.I0(frame_num_vc141),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc14[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \frame_num_vc14[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[1]),
        .I4(mem_vc[0]),
        .I5(fs_opcode),
        .O(frame_num_vc14));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \frame_num_vc14[15]_i_3 
       (.I0(mem_vc[0]),
        .I1(mem_vc[1]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc141));
  FDRE \frame_num_vc14_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[0]),
        .Q(\frame_num_vc14_reg_n_0_[0] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[10]),
        .Q(\frame_num_vc14_reg_n_0_[10] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[11]),
        .Q(\frame_num_vc14_reg_n_0_[11] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[12]),
        .Q(\frame_num_vc14_reg_n_0_[12] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[13]),
        .Q(\frame_num_vc14_reg_n_0_[13] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[14]),
        .Q(\frame_num_vc14_reg_n_0_[14] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[15]),
        .Q(\frame_num_vc14_reg_n_0_[15] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[1]),
        .Q(\frame_num_vc14_reg_n_0_[1] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[2]),
        .Q(\frame_num_vc14_reg_n_0_[2] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[3]),
        .Q(\frame_num_vc14_reg_n_0_[3] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[4]),
        .Q(\frame_num_vc14_reg_n_0_[4] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[5]),
        .Q(\frame_num_vc14_reg_n_0_[5] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[6]),
        .Q(\frame_num_vc14_reg_n_0_[6] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[7]),
        .Q(\frame_num_vc14_reg_n_0_[7] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[8]),
        .Q(\frame_num_vc14_reg_n_0_[8] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  FDRE \frame_num_vc14_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc14),
        .D(mem_wc[9]),
        .Q(\frame_num_vc14_reg_n_0_[9] ),
        .R(\frame_num_vc14[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc15[15]_i_1 
       (.I0(frame_num_vc151),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc15[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \frame_num_vc15[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc15));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \frame_num_vc15[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc151));
  FDRE \frame_num_vc15_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[0]),
        .Q(\frame_num_vc15_reg_n_0_[0] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[10]),
        .Q(\frame_num_vc15_reg_n_0_[10] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[11]),
        .Q(\frame_num_vc15_reg_n_0_[11] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[12]),
        .Q(\frame_num_vc15_reg_n_0_[12] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[13]),
        .Q(\frame_num_vc15_reg_n_0_[13] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[14]),
        .Q(\frame_num_vc15_reg_n_0_[14] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[15]),
        .Q(\frame_num_vc15_reg_n_0_[15] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[1]),
        .Q(\frame_num_vc15_reg_n_0_[1] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[2]),
        .Q(\frame_num_vc15_reg_n_0_[2] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[3]),
        .Q(\frame_num_vc15_reg_n_0_[3] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[4]),
        .Q(\frame_num_vc15_reg_n_0_[4] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[5]),
        .Q(\frame_num_vc15_reg_n_0_[5] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[6]),
        .Q(\frame_num_vc15_reg_n_0_[6] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[7]),
        .Q(\frame_num_vc15_reg_n_0_[7] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[8]),
        .Q(\frame_num_vc15_reg_n_0_[8] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  FDRE \frame_num_vc15_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc15),
        .D(mem_wc[9]),
        .Q(\frame_num_vc15_reg_n_0_[9] ),
        .R(\frame_num_vc15[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF80FFFF)) 
    \frame_num_vc1[15]_i_1 
       (.I0(mem_rvld),
        .I1(p_0_in59_in),
        .I2(\frame_num_vc0[15]_i_3_n_0 ),
        .I3(\frame_num_vc0[15]_i_4_n_0 ),
        .I4(m_axis_aresetn),
        .O(\frame_num_vc1[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \frame_num_vc1[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc1));
  FDRE \frame_num_vc1_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[0]),
        .Q(\frame_num_vc1_reg_n_0_[0] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[10]),
        .Q(\frame_num_vc1_reg_n_0_[10] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[11]),
        .Q(\frame_num_vc1_reg_n_0_[11] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[12]),
        .Q(\frame_num_vc1_reg_n_0_[12] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[13]),
        .Q(\frame_num_vc1_reg_n_0_[13] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[14]),
        .Q(\frame_num_vc1_reg_n_0_[14] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[15]),
        .Q(\frame_num_vc1_reg_n_0_[15] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[1]),
        .Q(\frame_num_vc1_reg_n_0_[1] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[2]),
        .Q(\frame_num_vc1_reg_n_0_[2] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[3]),
        .Q(\frame_num_vc1_reg_n_0_[3] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[4]),
        .Q(\frame_num_vc1_reg_n_0_[4] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[5]),
        .Q(\frame_num_vc1_reg_n_0_[5] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[6]),
        .Q(\frame_num_vc1_reg_n_0_[6] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[7]),
        .Q(\frame_num_vc1_reg_n_0_[7] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[8]),
        .Q(\frame_num_vc1_reg_n_0_[8] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  FDRE \frame_num_vc1_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc1),
        .D(mem_wc[9]),
        .Q(\frame_num_vc1_reg_n_0_[9] ),
        .R(\frame_num_vc1[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF80FFFF)) 
    \frame_num_vc2[15]_i_1 
       (.I0(mem_rvld),
        .I1(p_0_in50_in),
        .I2(\frame_num_vc0[15]_i_3_n_0 ),
        .I3(\frame_num_vc0[15]_i_4_n_0 ),
        .I4(m_axis_aresetn),
        .O(\frame_num_vc2[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \frame_num_vc2[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[1]),
        .I4(mem_vc[0]),
        .I5(fs_opcode),
        .O(frame_num_vc2));
  FDRE \frame_num_vc2_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[0]),
        .Q(\frame_num_vc2_reg_n_0_[0] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[10]),
        .Q(\frame_num_vc2_reg_n_0_[10] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[11]),
        .Q(\frame_num_vc2_reg_n_0_[11] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[12]),
        .Q(\frame_num_vc2_reg_n_0_[12] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[13]),
        .Q(\frame_num_vc2_reg_n_0_[13] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[14]),
        .Q(\frame_num_vc2_reg_n_0_[14] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[15]),
        .Q(\frame_num_vc2_reg_n_0_[15] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[1]),
        .Q(\frame_num_vc2_reg_n_0_[1] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[2]),
        .Q(\frame_num_vc2_reg_n_0_[2] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[3]),
        .Q(\frame_num_vc2_reg_n_0_[3] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[4]),
        .Q(\frame_num_vc2_reg_n_0_[4] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[5]),
        .Q(\frame_num_vc2_reg_n_0_[5] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[6]),
        .Q(\frame_num_vc2_reg_n_0_[6] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[7]),
        .Q(\frame_num_vc2_reg_n_0_[7] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[8]),
        .Q(\frame_num_vc2_reg_n_0_[8] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  FDRE \frame_num_vc2_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc2),
        .D(mem_wc[9]),
        .Q(\frame_num_vc2_reg_n_0_[9] ),
        .R(\frame_num_vc2[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF80FFFF)) 
    \frame_num_vc3[15]_i_1 
       (.I0(mem_rvld),
        .I1(p_0_in41_in),
        .I2(\frame_num_vc0[15]_i_3_n_0 ),
        .I3(\frame_num_vc0[15]_i_4_n_0 ),
        .I4(m_axis_aresetn),
        .O(\frame_num_vc3[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \frame_num_vc3[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc3));
  FDRE \frame_num_vc3_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[0]),
        .Q(\frame_num_vc3_reg_n_0_[0] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[10]),
        .Q(\frame_num_vc3_reg_n_0_[10] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[11]),
        .Q(\frame_num_vc3_reg_n_0_[11] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[12]),
        .Q(\frame_num_vc3_reg_n_0_[12] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[13]),
        .Q(\frame_num_vc3_reg_n_0_[13] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[14]),
        .Q(\frame_num_vc3_reg_n_0_[14] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[15]),
        .Q(\frame_num_vc3_reg_n_0_[15] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[1]),
        .Q(\frame_num_vc3_reg_n_0_[1] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[2]),
        .Q(\frame_num_vc3_reg_n_0_[2] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[3]),
        .Q(\frame_num_vc3_reg_n_0_[3] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[4]),
        .Q(\frame_num_vc3_reg_n_0_[4] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[5]),
        .Q(\frame_num_vc3_reg_n_0_[5] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[6]),
        .Q(\frame_num_vc3_reg_n_0_[6] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[7]),
        .Q(\frame_num_vc3_reg_n_0_[7] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[8]),
        .Q(\frame_num_vc3_reg_n_0_[8] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  FDRE \frame_num_vc3_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc3),
        .D(mem_wc[9]),
        .Q(\frame_num_vc3_reg_n_0_[9] ),
        .R(\frame_num_vc3[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc4[15]_i_1 
       (.I0(frame_num_vc41),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc4[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \frame_num_vc4[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc4));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \frame_num_vc4[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc41));
  FDRE \frame_num_vc4_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[0]),
        .Q(\frame_num_vc4_reg_n_0_[0] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[10]),
        .Q(\frame_num_vc4_reg_n_0_[10] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[11]),
        .Q(\frame_num_vc4_reg_n_0_[11] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[12]),
        .Q(\frame_num_vc4_reg_n_0_[12] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[13]),
        .Q(\frame_num_vc4_reg_n_0_[13] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[14]),
        .Q(\frame_num_vc4_reg_n_0_[14] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[15]),
        .Q(\frame_num_vc4_reg_n_0_[15] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[1]),
        .Q(\frame_num_vc4_reg_n_0_[1] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[2]),
        .Q(\frame_num_vc4_reg_n_0_[2] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[3]),
        .Q(\frame_num_vc4_reg_n_0_[3] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[4]),
        .Q(\frame_num_vc4_reg_n_0_[4] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[5]),
        .Q(\frame_num_vc4_reg_n_0_[5] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[6]),
        .Q(\frame_num_vc4_reg_n_0_[6] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[7]),
        .Q(\frame_num_vc4_reg_n_0_[7] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[8]),
        .Q(\frame_num_vc4_reg_n_0_[8] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  FDRE \frame_num_vc4_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc4),
        .D(mem_wc[9]),
        .Q(\frame_num_vc4_reg_n_0_[9] ),
        .R(\frame_num_vc4[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc5[15]_i_1 
       (.I0(frame_num_vc51),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc5[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \frame_num_vc5[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc5));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \frame_num_vc5[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc51));
  FDRE \frame_num_vc5_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[0]),
        .Q(\frame_num_vc5_reg_n_0_[0] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[10]),
        .Q(\frame_num_vc5_reg_n_0_[10] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[11]),
        .Q(\frame_num_vc5_reg_n_0_[11] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[12]),
        .Q(\frame_num_vc5_reg_n_0_[12] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[13]),
        .Q(\frame_num_vc5_reg_n_0_[13] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[14]),
        .Q(\frame_num_vc5_reg_n_0_[14] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[15]),
        .Q(\frame_num_vc5_reg_n_0_[15] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[1]),
        .Q(\frame_num_vc5_reg_n_0_[1] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[2]),
        .Q(\frame_num_vc5_reg_n_0_[2] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[3]),
        .Q(\frame_num_vc5_reg_n_0_[3] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[4]),
        .Q(\frame_num_vc5_reg_n_0_[4] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[5]),
        .Q(\frame_num_vc5_reg_n_0_[5] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[6]),
        .Q(\frame_num_vc5_reg_n_0_[6] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[7]),
        .Q(\frame_num_vc5_reg_n_0_[7] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[8]),
        .Q(\frame_num_vc5_reg_n_0_[8] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  FDRE \frame_num_vc5_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc5),
        .D(mem_wc[9]),
        .Q(\frame_num_vc5_reg_n_0_[9] ),
        .R(\frame_num_vc5[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc6[15]_i_1 
       (.I0(frame_num_vc61),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc6[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \frame_num_vc6[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[1]),
        .I4(mem_vc[0]),
        .I5(fs_opcode),
        .O(frame_num_vc6));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \frame_num_vc6[15]_i_3 
       (.I0(mem_vc[0]),
        .I1(mem_vc[1]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc61));
  FDRE \frame_num_vc6_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[0]),
        .Q(\frame_num_vc6_reg_n_0_[0] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[10]),
        .Q(\frame_num_vc6_reg_n_0_[10] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[11]),
        .Q(\frame_num_vc6_reg_n_0_[11] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[12]),
        .Q(\frame_num_vc6_reg_n_0_[12] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[13]),
        .Q(\frame_num_vc6_reg_n_0_[13] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[14]),
        .Q(\frame_num_vc6_reg_n_0_[14] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[15]),
        .Q(\frame_num_vc6_reg_n_0_[15] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[1]),
        .Q(\frame_num_vc6_reg_n_0_[1] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[2]),
        .Q(\frame_num_vc6_reg_n_0_[2] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[3]),
        .Q(\frame_num_vc6_reg_n_0_[3] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[4]),
        .Q(\frame_num_vc6_reg_n_0_[4] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[5]),
        .Q(\frame_num_vc6_reg_n_0_[5] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[6]),
        .Q(\frame_num_vc6_reg_n_0_[6] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[7]),
        .Q(\frame_num_vc6_reg_n_0_[7] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[8]),
        .Q(\frame_num_vc6_reg_n_0_[8] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  FDRE \frame_num_vc6_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc6),
        .D(mem_wc[9]),
        .Q(\frame_num_vc6_reg_n_0_[9] ),
        .R(\frame_num_vc6[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc7[15]_i_1 
       (.I0(frame_num_vc71),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc7[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800000000000000)) 
    \frame_num_vc7[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc7));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \frame_num_vc7[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[3]),
        .I3(mem_vc__0[2]),
        .I4(mem_rvld),
        .O(frame_num_vc71));
  FDRE \frame_num_vc7_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[0]),
        .Q(\frame_num_vc7_reg_n_0_[0] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[10]),
        .Q(\frame_num_vc7_reg_n_0_[10] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[11]),
        .Q(\frame_num_vc7_reg_n_0_[11] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[12]),
        .Q(\frame_num_vc7_reg_n_0_[12] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[13]),
        .Q(\frame_num_vc7_reg_n_0_[13] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[14]),
        .Q(\frame_num_vc7_reg_n_0_[14] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[15]),
        .Q(\frame_num_vc7_reg_n_0_[15] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[1]),
        .Q(\frame_num_vc7_reg_n_0_[1] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[2]),
        .Q(\frame_num_vc7_reg_n_0_[2] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[3]),
        .Q(\frame_num_vc7_reg_n_0_[3] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[4]),
        .Q(\frame_num_vc7_reg_n_0_[4] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[5]),
        .Q(\frame_num_vc7_reg_n_0_[5] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[6]),
        .Q(\frame_num_vc7_reg_n_0_[6] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[7]),
        .Q(\frame_num_vc7_reg_n_0_[7] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[8]),
        .Q(\frame_num_vc7_reg_n_0_[8] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  FDRE \frame_num_vc7_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc7),
        .D(mem_wc[9]),
        .Q(\frame_num_vc7_reg_n_0_[9] ),
        .R(\frame_num_vc7[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc8[15]_i_1 
       (.I0(frame_num_vc81),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc8[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \frame_num_vc8[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc8));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    \frame_num_vc8[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc__0[3]),
        .I4(mem_rvld),
        .O(frame_num_vc81));
  FDRE \frame_num_vc8_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[0]),
        .Q(\frame_num_vc8_reg_n_0_[0] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[10]),
        .Q(\frame_num_vc8_reg_n_0_[10] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[11]),
        .Q(\frame_num_vc8_reg_n_0_[11] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[12]),
        .Q(\frame_num_vc8_reg_n_0_[12] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[13]),
        .Q(\frame_num_vc8_reg_n_0_[13] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[14]),
        .Q(\frame_num_vc8_reg_n_0_[14] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[15]),
        .Q(\frame_num_vc8_reg_n_0_[15] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[1]),
        .Q(\frame_num_vc8_reg_n_0_[1] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[2]),
        .Q(\frame_num_vc8_reg_n_0_[2] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[3]),
        .Q(\frame_num_vc8_reg_n_0_[3] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[4]),
        .Q(\frame_num_vc8_reg_n_0_[4] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[5]),
        .Q(\frame_num_vc8_reg_n_0_[5] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[6]),
        .Q(\frame_num_vc8_reg_n_0_[6] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[7]),
        .Q(\frame_num_vc8_reg_n_0_[7] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[8]),
        .Q(\frame_num_vc8_reg_n_0_[8] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  FDRE \frame_num_vc8_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc8),
        .D(mem_wc[9]),
        .Q(\frame_num_vc8_reg_n_0_[9] ),
        .R(\frame_num_vc8[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0200C030FFFFFFFF)) 
    \frame_num_vc9[15]_i_1 
       (.I0(frame_num_vc91),
        .I1(p_0_in[2]),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[0]),
        .I5(m_axis_aresetn),
        .O(\frame_num_vc9[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \frame_num_vc9[15]_i_2 
       (.I0(mem_rvld),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc[0]),
        .I4(mem_vc[1]),
        .I5(fs_opcode),
        .O(frame_num_vc9));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \frame_num_vc9[15]_i_3 
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .I2(mem_vc__0[2]),
        .I3(mem_vc__0[3]),
        .I4(mem_rvld),
        .O(frame_num_vc91));
  FDRE \frame_num_vc9_reg[0] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[0]),
        .Q(\frame_num_vc9_reg_n_0_[0] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[10] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[10]),
        .Q(\frame_num_vc9_reg_n_0_[10] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[11] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[11]),
        .Q(\frame_num_vc9_reg_n_0_[11] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[12] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[12]),
        .Q(\frame_num_vc9_reg_n_0_[12] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[13] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[13]),
        .Q(\frame_num_vc9_reg_n_0_[13] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[14] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[14]),
        .Q(\frame_num_vc9_reg_n_0_[14] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[15] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[15]),
        .Q(\frame_num_vc9_reg_n_0_[15] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[1] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[1]),
        .Q(\frame_num_vc9_reg_n_0_[1] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[2] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[2]),
        .Q(\frame_num_vc9_reg_n_0_[2] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[3] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[3]),
        .Q(\frame_num_vc9_reg_n_0_[3] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[4] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[4]),
        .Q(\frame_num_vc9_reg_n_0_[4] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[5] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[5]),
        .Q(\frame_num_vc9_reg_n_0_[5] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[6] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[6]),
        .Q(\frame_num_vc9_reg_n_0_[6] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[7] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[7]),
        .Q(\frame_num_vc9_reg_n_0_[7] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[8] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[8]),
        .Q(\frame_num_vc9_reg_n_0_[8] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  FDRE \frame_num_vc9_reg[9] 
       (.C(m_axis_aclk),
        .CE(frame_num_vc9),
        .D(mem_wc[9]),
        .Q(\frame_num_vc9_reg_n_0_[9] ),
        .R(\frame_num_vc9[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80FF8080)) 
    fsync_vc0_int_reg_i_1
       (.I0(fs_opcode),
        .I1(mem_rvld),
        .I2(\LINE_NUM_VC[0].rst_lnum[0]_i_2_n_0 ),
        .I3(fsync_vc0_rst_reg),
        .I4(fsync_vc0_int_reg),
        .O(fsync_vc0_int_reg_i_1_n_0));
  FDRE fsync_vc0_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc0_int_reg_i_1_n_0),
        .Q(fsync_vc0_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    fsync_vc0_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc0_rst_reg0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    fsync_vc0_rst_reg_i_2
       (.I0(cur_lp_dtype[0]),
        .I1(cur_lp_dtype[1]),
        .I2(cur_lp_dtype[4]),
        .I3(cur_lp_dtype[5]),
        .I4(cur_lp_dtype[2]),
        .I5(cur_lp_dtype[3]),
        .O(fsync_vc0_rst_reg1));
  FDRE fsync_vc0_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc0_rst_reg0),
        .Q(fsync_vc0_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc10_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(fsync_vc6_int_reg_i_2_n_0),
        .I4(fsync_vc10_rst_reg),
        .I5(fsync_vc10_int_reg),
        .O(fsync_vc10_int_reg_i_1_n_0));
  FDRE fsync_vc10_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc10_int_reg_i_1_n_0),
        .Q(fsync_vc10_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    fsync_vc10_rst_reg_i_1
       (.I0(fsync_vc0_rst_reg1),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[2]),
        .I3(cur_lp_vc[1]),
        .I4(cur_lp_vc[0]),
        .I5(p_0_in112_out),
        .O(fsync_vc10_rst_reg0));
  FDRE fsync_vc10_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc10_rst_reg0),
        .Q(fsync_vc10_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc11_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(fsync_vc7_int_reg_i_2_n_0),
        .I4(fsync_vc11_rst_reg),
        .I5(fsync_vc11_int_reg),
        .O(fsync_vc11_int_reg_i_1_n_0));
  FDRE fsync_vc11_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc11_int_reg_i_1_n_0),
        .Q(fsync_vc11_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    fsync_vc11_rst_reg_i_1
       (.I0(cur_lp_vc[3]),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc11_rst_reg0));
  FDRE fsync_vc11_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc11_rst_reg0),
        .Q(fsync_vc11_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0080FFFF00800080)) 
    fsync_vc12_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc4_int_reg_i_3_n_0),
        .I4(fsync_vc12_rst_reg),
        .I5(fsync_vc12_int_reg),
        .O(fsync_vc12_int_reg_i_1_n_0));
  FDRE fsync_vc12_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc12_int_reg_i_1_n_0),
        .Q(fsync_vc12_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    fsync_vc12_rst_reg_i_1
       (.I0(fsync_vc0_rst_reg1),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[3]),
        .I3(cur_lp_vc[0]),
        .I4(cur_lp_vc[1]),
        .I5(p_0_in112_out),
        .O(fsync_vc12_rst_reg0));
  FDRE fsync_vc12_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc12_rst_reg0),
        .Q(fsync_vc12_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0080FFFF00800080)) 
    fsync_vc13_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc5_int_reg_i_2_n_0),
        .I4(fsync_vc13_rst_reg),
        .I5(fsync_vc13_int_reg),
        .O(fsync_vc13_int_reg_i_1_n_0));
  FDRE fsync_vc13_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc13_int_reg_i_1_n_0),
        .Q(fsync_vc13_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    fsync_vc13_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc13_rst_reg0));
  FDRE fsync_vc13_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc13_rst_reg0),
        .Q(fsync_vc13_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0080FFFF00800080)) 
    fsync_vc14_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc6_int_reg_i_2_n_0),
        .I4(fsync_vc14_rst_reg),
        .I5(fsync_vc14_int_reg),
        .O(fsync_vc14_int_reg_i_1_n_0));
  FDRE fsync_vc14_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc14_int_reg_i_1_n_0),
        .Q(fsync_vc14_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    fsync_vc14_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[1]),
        .I3(cur_lp_vc[0]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc14_rst_reg0));
  FDRE fsync_vc14_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc14_rst_reg0),
        .Q(fsync_vc14_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    fsync_vc15_int_reg_i_1
       (.I0(mem_vc__0[2]),
        .I1(mem_vc__0[3]),
        .I2(fsync_vc7_int_reg_i_2_n_0),
        .I3(p_145_in),
        .I4(fsync_vc15_rst_reg),
        .I5(fsync_vc15_int_reg),
        .O(fsync_vc15_int_reg_i_1_n_0));
  FDRE fsync_vc15_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc15_int_reg_i_1_n_0),
        .Q(fsync_vc15_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    fsync_vc15_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc15_rst_reg0));
  FDRE fsync_vc15_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc15_rst_reg0),
        .Q(fsync_vc15_rst_reg),
        .R(SR));
  LUT5 #(
    .INIT(32'h80FF8080)) 
    fsync_vc1_int_reg_i_1
       (.I0(fs_opcode),
        .I1(mem_rvld),
        .I2(p_0_in59_in),
        .I3(fsync_vc1_rst_reg),
        .I4(fsync_vc1_int_reg),
        .O(fsync_vc1_int_reg_i_1_n_0));
  FDRE fsync_vc1_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc1_int_reg_i_1_n_0),
        .Q(fsync_vc1_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    fsync_vc1_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc1_rst_reg0));
  FDRE fsync_vc1_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc1_rst_reg0),
        .Q(fsync_vc1_rst_reg),
        .R(SR));
  LUT5 #(
    .INIT(32'h80FF8080)) 
    fsync_vc2_int_reg_i_1
       (.I0(fs_opcode),
        .I1(mem_rvld),
        .I2(p_0_in50_in),
        .I3(fsync_vc2_rst_reg),
        .I4(fsync_vc2_int_reg),
        .O(fsync_vc2_int_reg_i_1_n_0));
  FDRE fsync_vc2_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc2_int_reg_i_1_n_0),
        .Q(fsync_vc2_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    fsync_vc2_rst_reg_i_1
       (.I0(fsync_vc0_rst_reg1),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[3]),
        .I3(cur_lp_vc[1]),
        .I4(cur_lp_vc[0]),
        .I5(p_0_in112_out),
        .O(fsync_vc2_rst_reg0));
  FDRE fsync_vc2_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc2_rst_reg0),
        .Q(fsync_vc2_rst_reg),
        .R(SR));
  LUT5 #(
    .INIT(32'h80FF8080)) 
    fsync_vc3_int_reg_i_1
       (.I0(p_0_in41_in),
        .I1(fs_opcode),
        .I2(mem_rvld),
        .I3(fsync_vc3_rst_reg),
        .I4(fsync_vc3_int_reg),
        .O(fsync_vc3_int_reg_i_1_n_0));
  FDRE fsync_vc3_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc3_int_reg_i_1_n_0),
        .Q(fsync_vc3_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    fsync_vc3_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc3_rst_reg0));
  FDRE fsync_vc3_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc3_rst_reg0),
        .Q(fsync_vc3_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc4_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc4_int_reg_i_3_n_0),
        .I4(fsync_vc4_rst_reg),
        .I5(fsync_vc4_int_reg),
        .O(fsync_vc4_int_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'h00040000)) 
    fsync_vc4_int_reg_i_2
       (.I0(p_0_in[0]),
        .I1(p_0_in[3]),
        .I2(p_0_in[1]),
        .I3(p_0_in[2]),
        .I4(mem_rvld),
        .O(p_145_in));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'hE)) 
    fsync_vc4_int_reg_i_3
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .O(fsync_vc4_int_reg_i_3_n_0));
  FDRE fsync_vc4_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc4_int_reg_i_1_n_0),
        .Q(fsync_vc4_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    fsync_vc4_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc4_rst_reg0));
  FDRE fsync_vc4_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc4_rst_reg0),
        .Q(fsync_vc4_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc5_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc5_int_reg_i_2_n_0),
        .I4(fsync_vc5_rst_reg),
        .I5(fsync_vc5_int_reg),
        .O(fsync_vc5_int_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT2 #(
    .INIT(4'hB)) 
    fsync_vc5_int_reg_i_2
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .O(fsync_vc5_int_reg_i_2_n_0));
  FDRE fsync_vc5_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc5_int_reg_i_1_n_0),
        .Q(fsync_vc5_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    fsync_vc5_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc5_rst_reg0));
  FDRE fsync_vc5_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc5_rst_reg0),
        .Q(fsync_vc5_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc6_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc6_int_reg_i_2_n_0),
        .I4(fsync_vc6_rst_reg),
        .I5(fsync_vc6_int_reg),
        .O(fsync_vc6_int_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'hB)) 
    fsync_vc6_int_reg_i_2
       (.I0(mem_vc[0]),
        .I1(mem_vc[1]),
        .O(fsync_vc6_int_reg_i_2_n_0));
  FDRE fsync_vc6_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc6_int_reg_i_1_n_0),
        .Q(fsync_vc6_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    fsync_vc6_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[1]),
        .I3(cur_lp_vc[0]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc6_rst_reg0));
  FDRE fsync_vc6_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc6_rst_reg0),
        .Q(fsync_vc6_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc7_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[2]),
        .I2(mem_vc__0[3]),
        .I3(fsync_vc7_int_reg_i_2_n_0),
        .I4(fsync_vc7_rst_reg),
        .I5(fsync_vc7_int_reg),
        .O(fsync_vc7_int_reg_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT2 #(
    .INIT(4'h7)) 
    fsync_vc7_int_reg_i_2
       (.I0(mem_vc[1]),
        .I1(mem_vc[0]),
        .O(fsync_vc7_int_reg_i_2_n_0));
  FDRE fsync_vc7_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc7_int_reg_i_1_n_0),
        .Q(fsync_vc7_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    fsync_vc7_rst_reg_i_1
       (.I0(cur_lp_vc[2]),
        .I1(cur_lp_vc[3]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc7_rst_reg0));
  FDRE fsync_vc7_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc7_rst_reg0),
        .Q(fsync_vc7_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc8_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(fsync_vc4_int_reg_i_3_n_0),
        .I4(fsync_vc8_rst_reg),
        .I5(fsync_vc8_int_reg),
        .O(fsync_vc8_int_reg_i_1_n_0));
  FDRE fsync_vc8_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc8_int_reg_i_1_n_0),
        .Q(fsync_vc8_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0002000000000000)) 
    fsync_vc8_rst_reg_i_1
       (.I0(cur_lp_vc[3]),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc8_rst_reg0));
  FDRE fsync_vc8_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc8_rst_reg0),
        .Q(fsync_vc8_rst_reg),
        .R(SR));
  LUT6 #(
    .INIT(64'h0008FFFF00080008)) 
    fsync_vc9_int_reg_i_1
       (.I0(p_145_in),
        .I1(mem_vc__0[3]),
        .I2(mem_vc__0[2]),
        .I3(fsync_vc5_int_reg_i_2_n_0),
        .I4(fsync_vc9_rst_reg),
        .I5(fsync_vc9_int_reg),
        .O(fsync_vc9_int_reg_i_1_n_0));
  FDRE fsync_vc9_int_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc9_int_reg_i_1_n_0),
        .Q(fsync_vc9_int_reg),
        .R(cur_lp_wc_lte4_i_1_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    fsync_vc9_rst_reg_i_1
       (.I0(cur_lp_vc[3]),
        .I1(cur_lp_vc[2]),
        .I2(cur_lp_vc[0]),
        .I3(cur_lp_vc[1]),
        .I4(p_0_in112_out),
        .I5(fsync_vc0_rst_reg1),
        .O(fsync_vc9_rst_reg0));
  FDRE fsync_vc9_rst_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fsync_vc9_rst_reg0),
        .Q(fsync_vc9_rst_reg),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT5 #(
    .INIT(32'hBFFFAAAA)) 
    hunt_ecccrc_i_1
       (.I0(line_buf_i_2_n_0),
        .I1(m_axis_tvalid_reg_0),
        .I2(m_axis_tready),
        .I3(m_axis_tlast_reg_0),
        .I4(hunt_ecccrc),
        .O(hunt_ecccrc_i_1_n_0));
  FDRE hunt_ecccrc_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(hunt_ecccrc_i_1_n_0),
        .Q(hunt_ecccrc),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h00001011)) 
    line_buf_i_1
       (.I0(hunt_ecccrc),
        .I1(line_buf_i_2_n_0),
        .I2(m_axis_tready),
        .I3(m_axis_tvalid_reg_0),
        .I4(empty),
        .O(rd_en));
  LUT6 #(
    .INIT(64'h8000800080000000)) 
    line_buf_i_2
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[2]),
        .I3(p_0_in[3]),
        .I4(mem_rvld),
        .I5(pend_data),
        .O(line_buf_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \m_axis_tdata[63]_i_1 
       (.I0(m_axis_aresetn),
        .O(SR));
  LUT6 #(
    .INIT(64'h0000000000002005)) 
    \m_axis_tdata[63]_i_2 
       (.I0(p_0_in[1]),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(\m_axis_tdata[63]_i_3_n_0 ),
        .I5(m_axis_tuser1114_out),
        .O(\m_axis_tdata[63]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \m_axis_tdata[63]_i_3 
       (.I0(pend_data),
        .I1(mem_rvld),
        .O(\m_axis_tdata[63]_i_3_n_0 ));
  FDRE \m_axis_tdata_reg[0] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[0] ),
        .Q(m_axis_tdata[0]),
        .R(SR));
  FDRE \m_axis_tdata_reg[10] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[2]),
        .Q(m_axis_tdata[10]),
        .R(SR));
  FDRE \m_axis_tdata_reg[11] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[3]),
        .Q(m_axis_tdata[11]),
        .R(SR));
  FDRE \m_axis_tdata_reg[12] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[4]),
        .Q(m_axis_tdata[12]),
        .R(SR));
  FDRE \m_axis_tdata_reg[13] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[5]),
        .Q(m_axis_tdata[13]),
        .R(SR));
  FDRE \m_axis_tdata_reg[14] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[6]),
        .Q(m_axis_tdata[14]),
        .R(SR));
  FDRE \m_axis_tdata_reg[15] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[7]),
        .Q(m_axis_tdata[15]),
        .R(SR));
  FDRE \m_axis_tdata_reg[16] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[8]),
        .Q(m_axis_tdata[16]),
        .R(SR));
  FDRE \m_axis_tdata_reg[17] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[9]),
        .Q(m_axis_tdata[17]),
        .R(SR));
  FDRE \m_axis_tdata_reg[18] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[10]),
        .Q(m_axis_tdata[18]),
        .R(SR));
  FDRE \m_axis_tdata_reg[19] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[11]),
        .Q(m_axis_tdata[19]),
        .R(SR));
  FDRE \m_axis_tdata_reg[1] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[1] ),
        .Q(m_axis_tdata[1]),
        .R(SR));
  FDRE \m_axis_tdata_reg[20] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[12]),
        .Q(m_axis_tdata[20]),
        .R(SR));
  FDRE \m_axis_tdata_reg[21] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[13]),
        .Q(m_axis_tdata[21]),
        .R(SR));
  FDRE \m_axis_tdata_reg[22] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[14]),
        .Q(m_axis_tdata[22]),
        .R(SR));
  FDRE \m_axis_tdata_reg[23] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[15]),
        .Q(m_axis_tdata[23]),
        .R(SR));
  FDRE \m_axis_tdata_reg[24] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_vc__0[2]),
        .Q(m_axis_tdata[24]),
        .R(SR));
  FDRE \m_axis_tdata_reg[25] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_vc__0[3]),
        .Q(m_axis_tdata[25]),
        .R(SR));
  FDRE \m_axis_tdata_reg[26] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[26] ),
        .Q(m_axis_tdata[26]),
        .R(SR));
  FDRE \m_axis_tdata_reg[27] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[27] ),
        .Q(m_axis_tdata[27]),
        .R(SR));
  FDRE \m_axis_tdata_reg[28] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[28] ),
        .Q(m_axis_tdata[28]),
        .R(SR));
  FDRE \m_axis_tdata_reg[29] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[29] ),
        .Q(m_axis_tdata[29]),
        .R(SR));
  FDRE \m_axis_tdata_reg[2] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[2] ),
        .Q(m_axis_tdata[2]),
        .R(SR));
  FDRE \m_axis_tdata_reg[30] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[30] ),
        .Q(m_axis_tdata[30]),
        .R(SR));
  FDRE \m_axis_tdata_reg[31] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[31] ),
        .Q(m_axis_tdata[31]),
        .R(SR));
  FDRE \m_axis_tdata_reg[32] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[32] ),
        .Q(m_axis_tdata[32]),
        .R(SR));
  FDRE \m_axis_tdata_reg[33] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[33] ),
        .Q(m_axis_tdata[33]),
        .R(SR));
  FDRE \m_axis_tdata_reg[34] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[34] ),
        .Q(m_axis_tdata[34]),
        .R(SR));
  FDRE \m_axis_tdata_reg[35] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[35] ),
        .Q(m_axis_tdata[35]),
        .R(SR));
  FDRE \m_axis_tdata_reg[36] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[36] ),
        .Q(m_axis_tdata[36]),
        .R(SR));
  FDRE \m_axis_tdata_reg[37] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[37] ),
        .Q(m_axis_tdata[37]),
        .R(SR));
  FDRE \m_axis_tdata_reg[38] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[38] ),
        .Q(m_axis_tdata[38]),
        .R(SR));
  FDRE \m_axis_tdata_reg[39] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[39] ),
        .Q(m_axis_tdata[39]),
        .R(SR));
  FDRE \m_axis_tdata_reg[3] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[3] ),
        .Q(m_axis_tdata[3]),
        .R(SR));
  FDRE \m_axis_tdata_reg[40] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[40] ),
        .Q(m_axis_tdata[40]),
        .R(SR));
  FDRE \m_axis_tdata_reg[41] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[41] ),
        .Q(m_axis_tdata[41]),
        .R(SR));
  FDRE \m_axis_tdata_reg[42] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[42] ),
        .Q(m_axis_tdata[42]),
        .R(SR));
  FDRE \m_axis_tdata_reg[43] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[43] ),
        .Q(m_axis_tdata[43]),
        .R(SR));
  FDRE \m_axis_tdata_reg[44] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[44] ),
        .Q(m_axis_tdata[44]),
        .R(SR));
  FDRE \m_axis_tdata_reg[45] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[45] ),
        .Q(m_axis_tdata[45]),
        .R(SR));
  FDRE \m_axis_tdata_reg[46] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[46] ),
        .Q(m_axis_tdata[46]),
        .R(SR));
  FDRE \m_axis_tdata_reg[47] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[47] ),
        .Q(m_axis_tdata[47]),
        .R(SR));
  FDRE \m_axis_tdata_reg[48] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[48] ),
        .Q(m_axis_tdata[48]),
        .R(SR));
  FDRE \m_axis_tdata_reg[49] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[49] ),
        .Q(m_axis_tdata[49]),
        .R(SR));
  FDRE \m_axis_tdata_reg[4] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[4] ),
        .Q(m_axis_tdata[4]),
        .R(SR));
  FDRE \m_axis_tdata_reg[50] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[50] ),
        .Q(m_axis_tdata[50]),
        .R(SR));
  FDRE \m_axis_tdata_reg[51] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[51] ),
        .Q(m_axis_tdata[51]),
        .R(SR));
  FDRE \m_axis_tdata_reg[52] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[52] ),
        .Q(m_axis_tdata[52]),
        .R(SR));
  FDRE \m_axis_tdata_reg[53] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[53] ),
        .Q(m_axis_tdata[53]),
        .R(SR));
  FDRE \m_axis_tdata_reg[54] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[54] ),
        .Q(m_axis_tdata[54]),
        .R(SR));
  FDRE \m_axis_tdata_reg[55] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[55] ),
        .Q(m_axis_tdata[55]),
        .R(SR));
  FDRE \m_axis_tdata_reg[56] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[56] ),
        .Q(m_axis_tdata[56]),
        .R(SR));
  FDRE \m_axis_tdata_reg[57] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[57] ),
        .Q(m_axis_tdata[57]),
        .R(SR));
  FDRE \m_axis_tdata_reg[58] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[58] ),
        .Q(m_axis_tdata[58]),
        .R(SR));
  FDRE \m_axis_tdata_reg[59] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[59] ),
        .Q(m_axis_tdata[59]),
        .R(SR));
  FDRE \m_axis_tdata_reg[5] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[5] ),
        .Q(m_axis_tdata[5]),
        .R(SR));
  FDRE \m_axis_tdata_reg[60] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[60] ),
        .Q(m_axis_tdata[60]),
        .R(SR));
  FDRE \m_axis_tdata_reg[61] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[61] ),
        .Q(m_axis_tdata[61]),
        .R(SR));
  FDRE \m_axis_tdata_reg[62] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[62] ),
        .Q(m_axis_tdata[62]),
        .R(SR));
  FDRE \m_axis_tdata_reg[63] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(\mem_rdata_r_reg_n_0_[63] ),
        .Q(m_axis_tdata[63]),
        .R(SR));
  FDRE \m_axis_tdata_reg[6] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_vc[0]),
        .Q(m_axis_tdata[6]),
        .R(SR));
  FDRE \m_axis_tdata_reg[7] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_vc[1]),
        .Q(m_axis_tdata[7]),
        .R(SR));
  FDRE \m_axis_tdata_reg[8] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[0]),
        .Q(m_axis_tdata[8]),
        .R(SR));
  FDRE \m_axis_tdata_reg[9] 
       (.C(m_axis_aclk),
        .CE(\m_axis_tdata[63]_i_2_n_0 ),
        .D(mem_wc[1]),
        .Q(m_axis_tdata[9]),
        .R(SR));
  FDRE \m_axis_tdest_reg[0] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_vc[0]),
        .Q(m_axis_tdest[0]),
        .R(SR));
  FDRE \m_axis_tdest_reg[1] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_vc[1]),
        .Q(m_axis_tdest[1]),
        .R(SR));
  FDRE \m_axis_tdest_reg[2] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_vc[2]),
        .Q(m_axis_tdest[2]),
        .R(SR));
  FDRE \m_axis_tdest_reg[3] 
       (.C(m_axis_aclk),
        .CE(p_2_out),
        .D(cur_lp_vc[3]),
        .Q(m_axis_tdest[3]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[0]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[0] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[0]));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[1]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[1] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[1]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[2]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[2] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[2]));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[3]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[3] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[3]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[4]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[4] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[4]));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[5]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[5] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[5]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[6]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[6] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[6]));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \m_axis_tkeep[7]_INST_0 
       (.I0(\TSTRB_KEPP_64.m_axis_tkeep_i_reg_n_0_[7] ),
        .I1(m_axis_tlast_reg_0),
        .O(m_axis_tkeep[7]));
  LUT6 #(
    .INIT(64'h00000000AAAAFFFE)) 
    m_axis_tlast_i_1
       (.I0(m_axis_tlast_reg_0),
        .I1(last_beat0),
        .I2(m_axis_tuser0),
        .I3(last_beat078_out),
        .I4(m_axis_tuser1114_out),
        .I5(\TSTRB_KEPP_64.m_axis_tkeep_i[7]_i_1_n_0 ),
        .O(m_axis_tlast_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    m_axis_tlast_i_2
       (.I0(last_beat1),
        .I1(m_axis_tready),
        .I2(m_axis_tvalid_reg_0),
        .O(last_beat0));
  LUT6 #(
    .INIT(64'h0000018000000100)) 
    m_axis_tlast_i_3
       (.I0(p_0_in[1]),
        .I1(p_0_in[3]),
        .I2(p_0_in[2]),
        .I3(p_0_in[0]),
        .I4(\m_axis_tdata[63]_i_3_n_0 ),
        .I5(p_149_in),
        .O(m_axis_tuser0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    m_axis_tlast_i_4
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[2]),
        .I4(mem_rvld),
        .I5(cur_lp_wc_lte4),
        .O(last_beat078_out));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT2 #(
    .INIT(4'h2)) 
    m_axis_tlast_i_5
       (.I0(m_axis_tvalid_reg_0),
        .I1(m_axis_tready),
        .O(m_axis_tuser1114_out));
  FDRE m_axis_tlast_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(m_axis_tlast_i_1_n_0),
        .Q(m_axis_tlast_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000E200E200E200)) 
    \m_axis_tuser[0]_i_1 
       (.I0(m_axis_tuser[0]),
        .I1(\m_axis_tuser[0]_i_2_n_0 ),
        .I2(\m_axis_tuser_reg[0]_i_3_n_0 ),
        .I3(m_axis_aresetn),
        .I4(m_axis_tvalid_reg_0),
        .I5(m_axis_tready),
        .O(\m_axis_tuser[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8080C0C08880CCCC)) 
    \m_axis_tuser[0]_i_2 
       (.I0(m_axis_tready),
        .I1(p_0_in112_out),
        .I2(tlast_d1),
        .I3(tvalid_d1),
        .I4(m_axis_tvalid_reg_0),
        .I5(strm_prgrs_reg),
        .O(\m_axis_tuser[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \m_axis_tuser[0]_i_6 
       (.I0(fsync_vc3_int_reg),
        .I1(fsync_vc2_int_reg),
        .I2(cur_lp_vc[1]),
        .I3(fsync_vc1_int_reg),
        .I4(cur_lp_vc[0]),
        .I5(fsync_vc0_int_reg),
        .O(\m_axis_tuser[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \m_axis_tuser[0]_i_7 
       (.I0(fsync_vc7_int_reg),
        .I1(fsync_vc6_int_reg),
        .I2(cur_lp_vc[1]),
        .I3(fsync_vc5_int_reg),
        .I4(cur_lp_vc[0]),
        .I5(fsync_vc4_int_reg),
        .O(\m_axis_tuser[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \m_axis_tuser[0]_i_8 
       (.I0(fsync_vc11_int_reg),
        .I1(fsync_vc10_int_reg),
        .I2(cur_lp_vc[1]),
        .I3(fsync_vc9_int_reg),
        .I4(cur_lp_vc[0]),
        .I5(fsync_vc8_int_reg),
        .O(\m_axis_tuser[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \m_axis_tuser[0]_i_9 
       (.I0(fsync_vc15_int_reg),
        .I1(fsync_vc14_int_reg),
        .I2(cur_lp_vc[1]),
        .I3(fsync_vc13_int_reg),
        .I4(cur_lp_vc[0]),
        .I5(fsync_vc12_int_reg),
        .O(\m_axis_tuser[0]_i_9_n_0 ));
  FDRE \m_axis_tuser_reg[0] 
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(\m_axis_tuser[0]_i_1_n_0 ),
        .Q(m_axis_tuser[0]),
        .R(1'b0));
  MUXF8 \m_axis_tuser_reg[0]_i_3 
       (.I0(\m_axis_tuser_reg[0]_i_4_n_0 ),
        .I1(\m_axis_tuser_reg[0]_i_5_n_0 ),
        .O(\m_axis_tuser_reg[0]_i_3_n_0 ),
        .S(cur_lp_vc[3]));
  MUXF7 \m_axis_tuser_reg[0]_i_4 
       (.I0(\m_axis_tuser[0]_i_6_n_0 ),
        .I1(\m_axis_tuser[0]_i_7_n_0 ),
        .O(\m_axis_tuser_reg[0]_i_4_n_0 ),
        .S(cur_lp_vc[2]));
  MUXF7 \m_axis_tuser_reg[0]_i_5 
       (.I0(\m_axis_tuser[0]_i_8_n_0 ),
        .I1(\m_axis_tuser[0]_i_9_n_0 ),
        .O(\m_axis_tuser_reg[0]_i_5_n_0 ),
        .S(cur_lp_vc[2]));
  LUT6 #(
    .INIT(64'h00F0F0F000E000E0)) 
    m_axis_tvalid_i_1
       (.I0(m_axis_tvalid_i_2_n_0),
        .I1(m_axis_tvalid1154_out),
        .I2(m_axis_aresetn),
        .I3(m_axis_tvalid0),
        .I4(m_axis_tready),
        .I5(m_axis_tvalid_reg_0),
        .O(m_axis_tvalid_i_1_n_0));
  LUT5 #(
    .INIT(32'h07733110)) 
    m_axis_tvalid_i_10
       (.I0(\cur_lp_wc_reg_n_0_[14] ),
        .I1(\cur_lp_wc_reg_n_0_[15] ),
        .I2(m_axis_tvalid_i_26_n_0),
        .I3(bytes_sent_reg[14]),
        .I4(bytes_sent_reg[15]),
        .O(m_axis_tvalid_i_10_n_0));
  LUT5 #(
    .INIT(32'h07733110)) 
    m_axis_tvalid_i_11
       (.I0(\cur_lp_wc_reg_n_0_[12] ),
        .I1(\cur_lp_wc_reg_n_0_[13] ),
        .I2(m_axis_tvalid_i_27_n_0),
        .I3(bytes_sent_reg[12]),
        .I4(bytes_sent_reg[13]),
        .O(m_axis_tvalid_i_11_n_0));
  LUT5 #(
    .INIT(32'h07733110)) 
    m_axis_tvalid_i_12
       (.I0(\cur_lp_wc_reg_n_0_[10] ),
        .I1(\cur_lp_wc_reg_n_0_[11] ),
        .I2(m_axis_tvalid_i_28_n_0),
        .I3(bytes_sent_reg[10]),
        .I4(bytes_sent_reg[11]),
        .O(m_axis_tvalid_i_12_n_0));
  LUT5 #(
    .INIT(32'h07733110)) 
    m_axis_tvalid_i_13
       (.I0(\cur_lp_wc_reg_n_0_[8] ),
        .I1(\cur_lp_wc_reg_n_0_[9] ),
        .I2(m_axis_tvalid_i_29_n_0),
        .I3(bytes_sent_reg[8]),
        .I4(bytes_sent_reg[9]),
        .O(m_axis_tvalid_i_13_n_0));
  LUT6 #(
    .INIT(64'h0777733331111000)) 
    m_axis_tvalid_i_14
       (.I0(\cur_lp_wc_reg_n_0_[6] ),
        .I1(\cur_lp_wc_reg_n_0_[7] ),
        .I2(bytes_sent_reg[5]),
        .I3(bytes_sent_reg[4]),
        .I4(bytes_sent_reg[6]),
        .I5(bytes_sent_reg[7]),
        .O(m_axis_tvalid_i_14_n_0));
  LUT4 #(
    .INIT(16'h0731)) 
    m_axis_tvalid_i_15
       (.I0(\cur_lp_wc_reg_n_0_[4] ),
        .I1(\cur_lp_wc_reg_n_0_[5] ),
        .I2(bytes_sent_reg[4]),
        .I3(bytes_sent_reg[5]),
        .O(m_axis_tvalid_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    m_axis_tvalid_i_16
       (.I0(bytes_sent_reg[2]),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(\cur_lp_wc_reg_n_0_[3] ),
        .I3(bytes_sent_reg[3]),
        .O(m_axis_tvalid_i_16_n_0));
  LUT5 #(
    .INIT(32'h29404029)) 
    m_axis_tvalid_i_17
       (.I0(\cur_lp_wc_reg_n_0_[14] ),
        .I1(m_axis_tvalid_i_26_n_0),
        .I2(bytes_sent_reg[14]),
        .I3(bytes_sent_reg[15]),
        .I4(\cur_lp_wc_reg_n_0_[15] ),
        .O(m_axis_tvalid_i_17_n_0));
  LUT5 #(
    .INIT(32'h29404029)) 
    m_axis_tvalid_i_18
       (.I0(\cur_lp_wc_reg_n_0_[12] ),
        .I1(m_axis_tvalid_i_27_n_0),
        .I2(bytes_sent_reg[12]),
        .I3(bytes_sent_reg[13]),
        .I4(\cur_lp_wc_reg_n_0_[13] ),
        .O(m_axis_tvalid_i_18_n_0));
  LUT5 #(
    .INIT(32'h29404029)) 
    m_axis_tvalid_i_19
       (.I0(\cur_lp_wc_reg_n_0_[10] ),
        .I1(m_axis_tvalid_i_28_n_0),
        .I2(bytes_sent_reg[10]),
        .I3(bytes_sent_reg[11]),
        .I4(\cur_lp_wc_reg_n_0_[11] ),
        .O(m_axis_tvalid_i_19_n_0));
  LUT6 #(
    .INIT(64'hFFFEFEFEAAAAAAAA)) 
    m_axis_tvalid_i_2
       (.I0(m_axis_tvalid1150_out),
        .I1(m_axis_tlast_reg_0),
        .I2(last_beat078_out),
        .I3(last_beat1),
        .I4(axis_beat_smpld),
        .I5(line_buf_i_2_n_0),
        .O(m_axis_tvalid_i_2_n_0));
  LUT5 #(
    .INIT(32'h29404029)) 
    m_axis_tvalid_i_20
       (.I0(\cur_lp_wc_reg_n_0_[8] ),
        .I1(m_axis_tvalid_i_29_n_0),
        .I2(bytes_sent_reg[8]),
        .I3(bytes_sent_reg[9]),
        .I4(\cur_lp_wc_reg_n_0_[9] ),
        .O(m_axis_tvalid_i_20_n_0));
  LUT6 #(
    .INIT(64'h2A95400040002A95)) 
    m_axis_tvalid_i_21
       (.I0(\cur_lp_wc_reg_n_0_[6] ),
        .I1(bytes_sent_reg[5]),
        .I2(bytes_sent_reg[4]),
        .I3(bytes_sent_reg[6]),
        .I4(bytes_sent_reg[7]),
        .I5(\cur_lp_wc_reg_n_0_[7] ),
        .O(m_axis_tvalid_i_21_n_0));
  LUT4 #(
    .INIT(16'h2442)) 
    m_axis_tvalid_i_22
       (.I0(\cur_lp_wc_reg_n_0_[4] ),
        .I1(bytes_sent_reg[4]),
        .I2(bytes_sent_reg[5]),
        .I3(\cur_lp_wc_reg_n_0_[5] ),
        .O(m_axis_tvalid_i_22_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tvalid_i_23
       (.I0(bytes_sent_reg[2]),
        .I1(\cur_lp_wc_reg_n_0_[2] ),
        .I2(bytes_sent_reg[3]),
        .I3(\cur_lp_wc_reg_n_0_[3] ),
        .O(m_axis_tvalid_i_23_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    m_axis_tvalid_i_24
       (.I0(\cur_lp_wc_reg_n_0_[0] ),
        .I1(\cur_lp_wc_reg_n_0_[1] ),
        .O(m_axis_tvalid_i_24_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    m_axis_tvalid_i_25
       (.I0(bytes_sent_reg[14]),
        .I1(bytes_sent_reg[12]),
        .I2(bytes_sent_reg[10]),
        .I3(m_axis_tvalid_i_28_n_0),
        .I4(bytes_sent_reg[11]),
        .I5(bytes_sent_reg[13]),
        .O(m_axis_tvalid_i_25_n_0));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    m_axis_tvalid_i_26
       (.I0(bytes_sent_reg[13]),
        .I1(bytes_sent_reg[11]),
        .I2(m_axis_tvalid_i_28_n_0),
        .I3(bytes_sent_reg[10]),
        .I4(bytes_sent_reg[12]),
        .O(m_axis_tvalid_i_26_n_0));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h80)) 
    m_axis_tvalid_i_27
       (.I0(bytes_sent_reg[11]),
        .I1(m_axis_tvalid_i_28_n_0),
        .I2(bytes_sent_reg[10]),
        .O(m_axis_tvalid_i_27_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    m_axis_tvalid_i_28
       (.I0(bytes_sent_reg[9]),
        .I1(bytes_sent_reg[7]),
        .I2(bytes_sent_reg[5]),
        .I3(bytes_sent_reg[4]),
        .I4(bytes_sent_reg[6]),
        .I5(bytes_sent_reg[8]),
        .O(m_axis_tvalid_i_28_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    m_axis_tvalid_i_29
       (.I0(bytes_sent_reg[7]),
        .I1(bytes_sent_reg[5]),
        .I2(bytes_sent_reg[4]),
        .I3(bytes_sent_reg[6]),
        .O(m_axis_tvalid_i_29_n_0));
  LUT6 #(
    .INIT(64'h0000000000070000)) 
    m_axis_tvalid_i_3
       (.I0(axis_beat_smpld),
        .I1(last_beat1),
        .I2(last_beat078_out),
        .I3(m_axis_tlast_reg_0),
        .I4(pxl_opcodes),
        .I5(\m_axis_tdata[63]_i_3_n_0 ),
        .O(m_axis_tvalid1154_out));
  LUT6 #(
    .INIT(64'hFFFF1111FFF1F1F1)) 
    m_axis_tvalid_i_4
       (.I0(mem_rvld),
        .I1(pend_data),
        .I2(last_beat078_out),
        .I3(last_beat1),
        .I4(axis_beat_smpld),
        .I5(m_axis_tlast_reg_0),
        .O(m_axis_tvalid0));
  LUT6 #(
    .INIT(64'h0000400200000000)) 
    m_axis_tvalid_i_5
       (.I0(p_0_in[0]),
        .I1(p_0_in[2]),
        .I2(p_0_in[3]),
        .I3(p_0_in[1]),
        .I4(\m_axis_tdata[63]_i_3_n_0 ),
        .I5(p_149_in),
        .O(m_axis_tvalid1150_out));
  LUT3 #(
    .INIT(8'h01)) 
    m_axis_tvalid_i_7
       (.I0(p_0_in[1]),
        .I1(p_0_in[3]),
        .I2(p_0_in[2]),
        .O(pxl_opcodes));
  LUT2 #(
    .INIT(4'h7)) 
    m_axis_tvalid_i_9
       (.I0(bytes_sent_reg[15]),
        .I1(m_axis_tvalid_i_25_n_0),
        .O(m_axis_tvalid_i_9_n_0));
  FDRE m_axis_tvalid_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid_i_1_n_0),
        .Q(m_axis_tvalid_reg_0),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 m_axis_tvalid_reg_i_6
       (.CI(m_axis_tvalid_reg_i_8_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_m_axis_tvalid_reg_i_6_CO_UNCONNECTED[7:1],last_beat1}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O(NLW_m_axis_tvalid_reg_i_6_O_UNCONNECTED[7:0]),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,m_axis_tvalid_i_9_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY8 m_axis_tvalid_reg_i_8
       (.CI(1'b1),
        .CI_TOP(1'b0),
        .CO({m_axis_tvalid_reg_i_8_n_0,m_axis_tvalid_reg_i_8_n_1,m_axis_tvalid_reg_i_8_n_2,m_axis_tvalid_reg_i_8_n_3,m_axis_tvalid_reg_i_8_n_4,m_axis_tvalid_reg_i_8_n_5,m_axis_tvalid_reg_i_8_n_6,m_axis_tvalid_reg_i_8_n_7}),
        .DI({m_axis_tvalid_i_10_n_0,m_axis_tvalid_i_11_n_0,m_axis_tvalid_i_12_n_0,m_axis_tvalid_i_13_n_0,m_axis_tvalid_i_14_n_0,m_axis_tvalid_i_15_n_0,m_axis_tvalid_i_16_n_0,1'b0}),
        .O(NLW_m_axis_tvalid_reg_i_8_O_UNCONNECTED[7:0]),
        .S({m_axis_tvalid_i_17_n_0,m_axis_tvalid_i_18_n_0,m_axis_tvalid_i_19_n_0,m_axis_tvalid_i_20_n_0,m_axis_tvalid_i_21_n_0,m_axis_tvalid_i_22_n_0,m_axis_tvalid_i_23_n_0,m_axis_tvalid_i_24_n_0}));
  FDRE \mem_rdata_r_reg[0] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[0]),
        .Q(\mem_rdata_r_reg_n_0_[0] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[10] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[10]),
        .Q(mem_wc[2]),
        .R(SR));
  FDRE \mem_rdata_r_reg[11] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[11]),
        .Q(mem_wc[3]),
        .R(SR));
  FDRE \mem_rdata_r_reg[12] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[12]),
        .Q(mem_wc[4]),
        .R(SR));
  FDRE \mem_rdata_r_reg[13] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[13]),
        .Q(mem_wc[5]),
        .R(SR));
  FDRE \mem_rdata_r_reg[14] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[14]),
        .Q(mem_wc[6]),
        .R(SR));
  FDRE \mem_rdata_r_reg[15] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[15]),
        .Q(mem_wc[7]),
        .R(SR));
  FDRE \mem_rdata_r_reg[16] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[16]),
        .Q(mem_wc[8]),
        .R(SR));
  FDRE \mem_rdata_r_reg[17] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[17]),
        .Q(mem_wc[9]),
        .R(SR));
  FDRE \mem_rdata_r_reg[18] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[18]),
        .Q(mem_wc[10]),
        .R(SR));
  FDRE \mem_rdata_r_reg[19] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[19]),
        .Q(mem_wc[11]),
        .R(SR));
  FDRE \mem_rdata_r_reg[1] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[1]),
        .Q(\mem_rdata_r_reg_n_0_[1] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[20] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[20]),
        .Q(mem_wc[12]),
        .R(SR));
  FDRE \mem_rdata_r_reg[21] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[21]),
        .Q(mem_wc[13]),
        .R(SR));
  FDRE \mem_rdata_r_reg[22] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[22]),
        .Q(mem_wc[14]),
        .R(SR));
  FDRE \mem_rdata_r_reg[23] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[23]),
        .Q(mem_wc[15]),
        .R(SR));
  FDRE \mem_rdata_r_reg[24] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[24]),
        .Q(mem_vc__0[2]),
        .R(SR));
  FDRE \mem_rdata_r_reg[25] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[25]),
        .Q(mem_vc__0[3]),
        .R(SR));
  FDRE \mem_rdata_r_reg[26] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[26]),
        .Q(\mem_rdata_r_reg_n_0_[26] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[27] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[27]),
        .Q(\mem_rdata_r_reg_n_0_[27] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[28] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[28]),
        .Q(\mem_rdata_r_reg_n_0_[28] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[29] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[29]),
        .Q(\mem_rdata_r_reg_n_0_[29] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[2] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[2]),
        .Q(\mem_rdata_r_reg_n_0_[2] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[30] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[30]),
        .Q(\mem_rdata_r_reg_n_0_[30] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[31] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[31]),
        .Q(\mem_rdata_r_reg_n_0_[31] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[32] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[32]),
        .Q(\mem_rdata_r_reg_n_0_[32] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[33] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[33]),
        .Q(\mem_rdata_r_reg_n_0_[33] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[34] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[34]),
        .Q(\mem_rdata_r_reg_n_0_[34] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[35] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[35]),
        .Q(\mem_rdata_r_reg_n_0_[35] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[36] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[36]),
        .Q(\mem_rdata_r_reg_n_0_[36] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[37] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[37]),
        .Q(\mem_rdata_r_reg_n_0_[37] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[38] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[38]),
        .Q(\mem_rdata_r_reg_n_0_[38] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[39] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[39]),
        .Q(\mem_rdata_r_reg_n_0_[39] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[3] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[3]),
        .Q(\mem_rdata_r_reg_n_0_[3] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[40] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[40]),
        .Q(\mem_rdata_r_reg_n_0_[40] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[41] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[41]),
        .Q(\mem_rdata_r_reg_n_0_[41] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[42] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[42]),
        .Q(\mem_rdata_r_reg_n_0_[42] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[43] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[43]),
        .Q(\mem_rdata_r_reg_n_0_[43] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[44] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[44]),
        .Q(\mem_rdata_r_reg_n_0_[44] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[45] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[45]),
        .Q(\mem_rdata_r_reg_n_0_[45] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[46] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[46]),
        .Q(\mem_rdata_r_reg_n_0_[46] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[47] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[47]),
        .Q(\mem_rdata_r_reg_n_0_[47] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[48] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[48]),
        .Q(\mem_rdata_r_reg_n_0_[48] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[49] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[49]),
        .Q(\mem_rdata_r_reg_n_0_[49] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[4] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[4]),
        .Q(\mem_rdata_r_reg_n_0_[4] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[50] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[50]),
        .Q(\mem_rdata_r_reg_n_0_[50] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[51] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[51]),
        .Q(\mem_rdata_r_reg_n_0_[51] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[52] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[52]),
        .Q(\mem_rdata_r_reg_n_0_[52] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[53] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[53]),
        .Q(\mem_rdata_r_reg_n_0_[53] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[54] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[54]),
        .Q(\mem_rdata_r_reg_n_0_[54] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[55] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[55]),
        .Q(\mem_rdata_r_reg_n_0_[55] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[56] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[56]),
        .Q(\mem_rdata_r_reg_n_0_[56] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[57] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[57]),
        .Q(\mem_rdata_r_reg_n_0_[57] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[58] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[58]),
        .Q(\mem_rdata_r_reg_n_0_[58] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[59] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[59]),
        .Q(\mem_rdata_r_reg_n_0_[59] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[5] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[5]),
        .Q(\mem_rdata_r_reg_n_0_[5] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[60] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[60]),
        .Q(\mem_rdata_r_reg_n_0_[60] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[61] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[61]),
        .Q(\mem_rdata_r_reg_n_0_[61] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[62] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[62]),
        .Q(\mem_rdata_r_reg_n_0_[62] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[63] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[63]),
        .Q(\mem_rdata_r_reg_n_0_[63] ),
        .R(SR));
  FDRE \mem_rdata_r_reg[64] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[64]),
        .Q(p_0_in[0]),
        .R(SR));
  FDRE \mem_rdata_r_reg[65] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[65]),
        .Q(p_0_in[1]),
        .R(SR));
  FDRE \mem_rdata_r_reg[66] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[66]),
        .Q(p_0_in[2]),
        .R(SR));
  FDRE \mem_rdata_r_reg[67] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[67]),
        .Q(p_0_in[3]),
        .R(SR));
  FDRE \mem_rdata_r_reg[6] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[6]),
        .Q(mem_vc[0]),
        .R(SR));
  FDRE \mem_rdata_r_reg[7] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[7]),
        .Q(mem_vc[1]),
        .R(SR));
  FDRE \mem_rdata_r_reg[8] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[8]),
        .Q(mem_wc[0]),
        .R(SR));
  FDRE \mem_rdata_r_reg[9] 
       (.C(m_axis_aclk),
        .CE(\TUSER_WIDTH_GTE96.m_axis_tuser[95]_i_1_n_0 ),
        .D(mem_rdata[9]),
        .Q(mem_wc[1]),
        .R(SR));
  FDRE mem_rvld_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(rd_en),
        .Q(mem_rvld),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT4 #(
    .INIT(16'h0CEC)) 
    pend_data_i_1
       (.I0(mem_rvld),
        .I1(pend_data),
        .I2(m_axis_tvalid_reg_0),
        .I3(m_axis_tready),
        .O(pend_data_i_1_n_0));
  FDRE pend_data_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(pend_data_i_1_n_0),
        .Q(pend_data),
        .R(SR));
  LUT4 #(
    .INIT(16'h00AE)) 
    strm_prgrs_reg_i_1
       (.I0(strm_prgrs_reg),
        .I1(m_axis_tvalid_reg_0),
        .I2(tvalid_d1),
        .I3(tlast_d1),
        .O(p_149_in));
  FDRE strm_prgrs_reg_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(p_149_in),
        .Q(strm_prgrs_reg),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h80)) 
    tlast_d1_i_1
       (.I0(m_axis_tlast_reg_0),
        .I1(m_axis_tready),
        .I2(m_axis_tvalid_reg_0),
        .O(axis_last_beat));
  FDRE tlast_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(axis_last_beat),
        .Q(tlast_d1),
        .R(SR));
  FDRE tvalid_d1_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(m_axis_tvalid_reg_0),
        .Q(tvalid_d1),
        .R(SR));
endmodule

(* AXIS_FIFO_DCNT_WIDTH = "11" *) (* AXIS_FIFO_DEPTH = "2048" *) (* AXIS_TDATA_WIDTH = "64" *) 
(* AXIS_TDEST_WIDTH = "4" *) (* AXIS_TUSER_WIDTH = "96" *) (* CSI_EN_VC_SUPPORT = "1" *) 
(* CSI_FIXED_VC = "0" *) (* CSI_INV_SHUTDOWN = "1" *) (* CSI_LANES = "2" *) 
(* CSI_OFFLOAD_NONIMAGE = "0" *) (* CSI_VC_OFF_0 = "1" *) (* CSI_VC_OFF_1 = "2" *) 
(* CSI_VC_OFF_10 = "11" *) (* CSI_VC_OFF_11 = "12" *) (* CSI_VC_OFF_12 = "13" *) 
(* CSI_VC_OFF_13 = "14" *) (* CSI_VC_OFF_14 = "15" *) (* CSI_VC_OFF_2 = "3" *) 
(* CSI_VC_OFF_3 = "4" *) (* CSI_VC_OFF_4 = "5" *) (* CSI_VC_OFF_5 = "6" *) 
(* CSI_VC_OFF_6 = "7" *) (* CSI_VC_OFF_7 = "8" *) (* CSI_VC_OFF_8 = "9" *) 
(* CSI_VC_OFF_9 = "10" *) (* C_CSI2RX_DBG = "0" *) (* C_CSI_FILTER_USERDATATYPE = "0" *) 
(* C_CSI_OPT1_REGS = "0" *) (* C_CSI_OPT2_CRC = "0" *) (* C_CSI_OPT3_FIXEDLANES = "1" *) 
(* C_DISABLE_LITE = "0" *) (* C_EN_CSI_V2_0 = "false" *) (* C_EN_VCX = "false" *) 
(* C_FAMILY = "zynquplus" *) (* C_HS_LINE_RATE = "750" *) (* C_IS_EVAL = "0" *) 
(* C_MIPI_SLV_INT = "0" *) (* C_RCVE_DESKEW_SEQ = "false" *) (* C_S_AXI_ADDR_WIDTH = "8" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_csi2_rx_ctrl_v1_0_8_top" *) 
(* VC_H = "4" *) (* VC_L = "0" *) (* VC_NUMS = "4" *) 
(* VFB_FIFO = "16" *) 
module bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_top
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    vfb_full,
    dl0_rxbyteclkhs,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_stopstate,
    dl0_shutdown,
    dl0_rxulpmesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errcontrol,
    dl0_rxskewcalhs,
    dl1_rxbyteclkhs,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_stopstate,
    dl1_shutdown,
    dl1_rxulpmesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errcontrol,
    dl1_rxskewcalhs,
    dl2_rxbyteclkhs,
    dl2_rxdatahs,
    dl2_rxvalidhs,
    dl2_rxactivehs,
    dl2_rxsynchs,
    dl2_stopstate,
    dl2_shutdown,
    dl2_rxulpmesc,
    dl2_errsoths,
    dl2_errsotsynchs,
    dl2_erresc,
    dl2_errcontrol,
    dl2_rxskewcalhs,
    dl3_rxbyteclkhs,
    dl3_rxdatahs,
    dl3_rxvalidhs,
    dl3_rxactivehs,
    dl3_rxsynchs,
    dl3_stopstate,
    dl3_shutdown,
    dl3_rxulpmesc,
    dl3_errsoths,
    dl3_errsotsynchs,
    dl3_erresc,
    dl3_errcontrol,
    dl3_rxskewcalhs,
    video_aclk,
    m_axis_aclk,
    m_axis_aresetn,
    m_axis_tready,
    m_axis_tvalid,
    m_axis_tlast,
    m_axis_tdata,
    m_axis_tkeep,
    m_axis_tuser,
    m_axis_tdest,
    m_axis_eni_tready,
    m_axis_eni_tvalid,
    m_axis_eni_tlast,
    m_axis_eni_tdata,
    m_axis_eni_tkeep,
    m_axis_eni_tuser,
    m_axis_eni_tdest,
    mdt_tv,
    mdt_tr,
    sdt_tv,
    sdt_tr,
    vfb_tv,
    vfb_tr,
    core_enable,
    disable_in_progress,
    ecc_status_intr,
    crc_status_intr,
    errsotsynchs_intr,
    errsoths_intr,
    frame_rcvd_pulse_out,
    linebuffer_full,
    cl_stopstate_intr,
    dl0_stopstate_intr,
    dl1_stopstate_intr,
    dl2_stopstate_intr,
    dl3_stopstate_intr,
    interrupt);
  input s_axi_aclk;
  input s_axi_aresetn;
  input [7:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [7:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  input cl_stopstate;
  output cl_enable;
  input cl_rxulpsclknot;
  input vfb_full;
  input dl0_rxbyteclkhs;
  input [7:0]dl0_rxdatahs;
  input dl0_rxvalidhs;
  input dl0_rxactivehs;
  input dl0_rxsynchs;
  input dl0_stopstate;
  output dl0_shutdown;
  input dl0_rxulpmesc;
  input dl0_errsoths;
  input dl0_errsotsynchs;
  input dl0_erresc;
  input dl0_errcontrol;
  input dl0_rxskewcalhs;
  input dl1_rxbyteclkhs;
  input [7:0]dl1_rxdatahs;
  input dl1_rxvalidhs;
  input dl1_rxactivehs;
  input dl1_rxsynchs;
  input dl1_stopstate;
  output dl1_shutdown;
  input dl1_rxulpmesc;
  input dl1_errsoths;
  input dl1_errsotsynchs;
  input dl1_erresc;
  input dl1_errcontrol;
  input dl1_rxskewcalhs;
  input dl2_rxbyteclkhs;
  input [7:0]dl2_rxdatahs;
  input dl2_rxvalidhs;
  input dl2_rxactivehs;
  input dl2_rxsynchs;
  input dl2_stopstate;
  output dl2_shutdown;
  input dl2_rxulpmesc;
  input dl2_errsoths;
  input dl2_errsotsynchs;
  input dl2_erresc;
  input dl2_errcontrol;
  input dl2_rxskewcalhs;
  input dl3_rxbyteclkhs;
  input [7:0]dl3_rxdatahs;
  input dl3_rxvalidhs;
  input dl3_rxactivehs;
  input dl3_rxsynchs;
  input dl3_stopstate;
  output dl3_shutdown;
  input dl3_rxulpmesc;
  input dl3_errsoths;
  input dl3_errsotsynchs;
  input dl3_erresc;
  input dl3_errcontrol;
  input dl3_rxskewcalhs;
  input video_aclk;
  input m_axis_aclk;
  input m_axis_aresetn;
  input m_axis_tready;
  output m_axis_tvalid;
  output m_axis_tlast;
  output [63:0]m_axis_tdata;
  output [7:0]m_axis_tkeep;
  output [95:0]m_axis_tuser;
  output [3:0]m_axis_tdest;
  input m_axis_eni_tready;
  output m_axis_eni_tvalid;
  output m_axis_eni_tlast;
  output [63:0]m_axis_eni_tdata;
  output [7:0]m_axis_eni_tkeep;
  output [95:0]m_axis_eni_tuser;
  output [3:0]m_axis_eni_tdest;
  input mdt_tv;
  input mdt_tr;
  input sdt_tv;
  input sdt_tr;
  input vfb_tv;
  input vfb_tr;
  input core_enable;
  output disable_in_progress;
  output [1:0]ecc_status_intr;
  output crc_status_intr;
  output errsotsynchs_intr;
  output errsoths_intr;
  output frame_rcvd_pulse_out;
  output linebuffer_full;
  output cl_stopstate_intr;
  output dl0_stopstate_intr;
  output dl1_stopstate_intr;
  output dl2_stopstate_intr;
  output dl3_stopstate_intr;
  output interrupt;

  wire \<const0> ;
  wire \AXI_LITE.isr_cdc_n_75 ;
  wire \AXI_LITE.isr_cdc_n_76 ;
  wire \AXI_LITE.isr_cdc_n_77 ;
  wire \AXI_LITE.isr_cdc_n_78 ;
  wire \AXI_LITE.reg_inf_n_12 ;
  wire \AXI_LITE.reg_inf_n_15 ;
  wire \AXI_LITE.reg_inf_n_28 ;
  wire \AXI_LITE.reg_inf_n_30 ;
  wire \AXI_LITE.reg_inf_n_5 ;
  wire [15:3]\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg ;
  wire \RX_1500M.line_buffer_n_71 ;
  wire \RX_1500M.line_buffer_n_72 ;
  wire \RX_1500M.line_buffer_n_73 ;
  wire [15:0]byt_cnt_adj;
  wire [15:0]byte_cnt;
  wire [15:0]c_data;
  wire cl_enable;
  wire [1:1]cl_info_all;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire control_n_1;
  wire control_n_53;
  wire control_n_54;
  wire control_n_55;
  wire control_n_56;
  wire control_n_57;
  wire control_n_58;
  wire control_n_59;
  wire control_n_60;
  wire control_n_61;
  wire control_n_62;
  wire control_n_63;
  wire control_n_64;
  wire control_n_65;
  wire control_n_66;
  wire control_n_67;
  wire control_n_72;
  wire control_n_73;
  wire control_n_74;
  wire control_n_75;
  wire control_n_91;
  wire control_n_93;
  wire control_n_94;
  wire control_n_98;
  wire core_men_r2c;
  wire [3:0]crc_blk_sel;
  wire crc_done;
  wire crc_en;
  wire crc_n_36;
  wire crc_n_37;
  wire crc_n_38;
  wire crc_n_39;
  wire crc_n_40;
  wire crc_n_41;
  wire crc_n_42;
  wire crc_n_43;
  wire crc_partial0;
  wire crc_rst;
  wire crc_start;
  wire crc_start_d1;
  wire crc_status;
  wire crc_trig_d10;
  wire crc_trig_d2;
  wire [3:0]cur_byte_cnt;
  wire cur_lp_vc0;
  wire [2:0]cur_state;
  wire data_done;
  wire data_done_3;
  wire data_donei120_out;
  wire data_n_127;
  wire data_n_128;
  wire data_n_129;
  wire data_n_13;
  wire data_n_130;
  wire data_n_131;
  wire data_n_132;
  wire data_n_133;
  wire data_n_135;
  wire data_n_136;
  wire data_n_137;
  wire data_n_138;
  wire data_n_155;
  wire data_n_18;
  wire data_n_19;
  wire data_n_20;
  wire data_n_21;
  wire data_n_22;
  wire data_n_23;
  wire data_n_24;
  wire data_n_25;
  wire data_n_26;
  wire data_n_27;
  wire data_n_28;
  wire data_n_29;
  wire data_n_30;
  wire data_n_31;
  wire data_n_32;
  wire data_n_33;
  wire data_n_34;
  wire data_n_36;
  wire data_p_strb;
  wire data_shutdown;
  wire [5:4]data_type;
  wire data_wip;
  wire data_wip_reg;
  wire [25:0]diwc_corrected;
  wire diwc_corrected_lte4;
  wire diwc_corrected_zero;
  wire diwc_valid;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_rxactivehs;
  wire dl0_rxbyteclkhs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl0_rxulpmesc;
  wire dl0_rxvalidhs;
  wire dl0_shutdown;
  wire dl0_stopstate;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_rxactivehs;
  wire dl1_rxbyteclkhs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxulpmesc;
  wire dl1_rxvalidhs;
  wire dl1_shutdown;
  wire dl1_stopstate;
  wire dl2_errcontrol;
  wire dl2_erresc;
  wire dl2_rxulpmesc;
  wire dl2_shutdown;
  wire dl2_stopstate;
  wire dl3_errcontrol;
  wire dl3_erresc;
  wire dl3_rxulpmesc;
  wire dl3_shutdown;
  wire dl3_stopstate;
  wire end_mem_wr2;
  wire [31:0]errframe_status;
  wire [15:0]exp_crc;
  wire [15:0]exp_crc_i;
  wire [5:0]exp_ecc;
  wire fifo_arst;
  wire fifo_arst_i_1_n_0;
  wire fifo_rst_c2p;
  wire fifo_rst_p2c;
  wire fifo_rst_r2c;
  wire frame_rcvd;
  wire frst_d2_reg_srl2_n_0;
  wire frst_d3;
  wire fsm_wip_reg;
  wire gen_pkt_fifo_n_73;
  wire gen_pkt_fifo_n_74;
  wire [9:3]ier;
  wire img_rcv;
  wire img_send;
  wire interrupt;
  wire isr_55;
  wire isr_i0;
  wire [46:0]isr_o;
  wire lane_merger_n_0;
  wire lane_merger_n_44;
  wire lane_merger_n_45;
  wire lbuf_blk_wen_i;
  wire linebuf_almost_full;
  wire linebuf_full;
  wire [2:0]live_fifo_sts;
  wire [3:0]lp_count_en;
  wire lp_data;
  wire lp_wc0;
  wire [11:2]lx_info_all;
  wire m_axis_aclk;
  wire m_axis_aresetn;
  wire [63:0]m_axis_tdata;
  wire [3:0]m_axis_tdest;
  wire [7:0]m_axis_tkeep;
  wire m_axis_tlast;
  wire m_axis_tready;
  wire [95:0]\^m_axis_tuser ;
  wire m_axis_tvalid;
  wire [31:0]mem_data;
  wire mem_data1;
  wire mem_data_l320;
  wire [67:0]mem_rdata;
  wire mem_rempty;
  wire mem_ren;
  wire [67:0]mem_wdata;
  wire mem_wen;
  wire [5:2]p_0_in;
  wire p_0_in27_in;
  wire p_0_in28_in;
  wire p_0_in29_in;
  wire p_0_in30_in;
  wire p_0_in33_in;
  wire p_0_in34_in;
  wire p_0_in39_in;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire p_0_in7_in;
  wire p_0_in8_in;
  wire p_0_in_1;
  wire [3:1]p_0_in_4;
  wire [11:6]p_0_in__0;
  wire p_0_in__0_6;
  wire [3:2]p_0_out__0;
  wire p_11_in;
  wire p_13_in137_in;
  wire p_141_in;
  wire p_15_in;
  wire p_17_in;
  wire p_19_in138_in;
  wire [45:43]p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in19_in;
  wire p_1_in1_in;
  wire p_1_in22_in;
  wire p_1_in25_in;
  wire p_1_in28_in;
  wire p_1_in31_in;
  wire p_1_in34_in;
  wire p_1_in37_in;
  wire p_1_in40_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_1_in_2;
  wire [15:0]p_1_in_5;
  wire p_21_in;
  wire p_23_in;
  wire p_25_in140_in;
  wire p_26_in;
  wire p_27_in;
  wire p_29_in;
  wire [15:0]p_2_in;
  wire [23:0]p_3_in;
  wire p_3_in_0;
  wire p_50_out;
  wire p_52_out;
  wire p_54_out;
  wire p_56_out;
  wire p_58_out;
  wire p_5_in;
  wire p_60_out;
  wire p_62_out;
  wire p_64_out;
  wire p_66_out;
  wire p_68_out;
  wire p_70_out;
  wire p_72_out;
  wire p_74_out;
  wire p_76_out;
  wire p_78_out;
  wire p_7_in136_in;
  wire p_80_out;
  wire p_9_in;
  wire phecc_done;
  wire phecc_n_0;
  wire phecc_n_101;
  wire phecc_n_102;
  wire phecc_n_103;
  wire phecc_n_104;
  wire phecc_n_121;
  wire phecc_n_122;
  wire phecc_n_123;
  wire phecc_n_140;
  wire phecc_n_141;
  wire phecc_n_150;
  wire phecc_n_151;
  wire phecc_n_152;
  wire phecc_n_153;
  wire phecc_n_154;
  wire phecc_n_155;
  wire phecc_n_157;
  wire phecc_n_158;
  wire phecc_n_159;
  wire phecc_n_160;
  wire phecc_n_161;
  wire phecc_n_162;
  wire phecc_n_163;
  wire phecc_n_164;
  wire phecc_n_165;
  wire phecc_n_166;
  wire phecc_n_167;
  wire phecc_n_168;
  wire phecc_n_169;
  wire phecc_n_170;
  wire phecc_n_171;
  wire phecc_n_172;
  wire phecc_n_2;
  wire phecc_n_3;
  wire phecc_n_31;
  wire phecc_n_48;
  wire phecc_n_50;
  wire phecc_n_51;
  wire phecc_n_55;
  wire phecc_n_57;
  wire phecc_n_58;
  wire phecc_n_62;
  wire phecc_n_91;
  wire phecc_n_92;
  wire phecc_n_93;
  wire phecc_n_94;
  wire phecc_n_95;
  wire phecc_n_96;
  wire phecc_n_97;
  wire phecc_start_d1;
  wire [2:1]phecc_status;
  wire pkt_fifo_empty;
  wire [41:0]pkt_fifo_rdata;
  wire pkt_fifo_ren;
  wire [41:0]pkt_fifo_wdata;
  wire pkt_fifo_wen;
  wire pkt_valid;
  wire pktnppi_fifo_rst;
  wire ppi_fifo_l0_empty;
  wire [11:0]ppi_fifo_l0_rdata;
  wire [11:0]ppi_fifo_l0_wdata;
  wire ppi_fifo_l0_wen;
  wire ppi_fifo_l1_empty;
  wire [11:0]ppi_fifo_l1_rdata;
  wire [11:0]ppi_fifo_l1_wdata;
  wire ppi_fifo_l1_wen;
  wire ppi_fifo_rst;
  wire ppi_ss1;
  wire reg_crc_status;
  wire reg_data_status;
  wire [5:0]reg_ppi_status;
  wire [35:34]reg_status;
  wire rstn_i1;
  wire rstn_o0;
  wire rstn_o1;
  wire s_axi_aclk;
  wire [7:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [7:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire soft_rst;
  wire spkt_fifo_full;
  wire spkt_fifo_wen;
  (* DONT_TOUCH *) wire [3:0]vc_fixed;
  wire vcx_err;
  wire wc_err;
  wire wc_err_c2r;
  wire wc_gt_pload;
  wire wr2_isr1;
  wire wr2_isr2;

  assign cl_stopstate_intr = \<const0> ;
  assign crc_status_intr = \<const0> ;
  assign disable_in_progress = \<const0> ;
  assign dl0_stopstate_intr = \<const0> ;
  assign dl1_stopstate_intr = \<const0> ;
  assign dl2_stopstate_intr = \<const0> ;
  assign dl3_stopstate_intr = \<const0> ;
  assign ecc_status_intr[1] = \<const0> ;
  assign ecc_status_intr[0] = \<const0> ;
  assign errsoths_intr = \<const0> ;
  assign errsotsynchs_intr = \<const0> ;
  assign frame_rcvd_pulse_out = \<const0> ;
  assign linebuffer_full = \<const0> ;
  assign m_axis_eni_tdata[63] = \<const0> ;
  assign m_axis_eni_tdata[62] = \<const0> ;
  assign m_axis_eni_tdata[61] = \<const0> ;
  assign m_axis_eni_tdata[60] = \<const0> ;
  assign m_axis_eni_tdata[59] = \<const0> ;
  assign m_axis_eni_tdata[58] = \<const0> ;
  assign m_axis_eni_tdata[57] = \<const0> ;
  assign m_axis_eni_tdata[56] = \<const0> ;
  assign m_axis_eni_tdata[55] = \<const0> ;
  assign m_axis_eni_tdata[54] = \<const0> ;
  assign m_axis_eni_tdata[53] = \<const0> ;
  assign m_axis_eni_tdata[52] = \<const0> ;
  assign m_axis_eni_tdata[51] = \<const0> ;
  assign m_axis_eni_tdata[50] = \<const0> ;
  assign m_axis_eni_tdata[49] = \<const0> ;
  assign m_axis_eni_tdata[48] = \<const0> ;
  assign m_axis_eni_tdata[47] = \<const0> ;
  assign m_axis_eni_tdata[46] = \<const0> ;
  assign m_axis_eni_tdata[45] = \<const0> ;
  assign m_axis_eni_tdata[44] = \<const0> ;
  assign m_axis_eni_tdata[43] = \<const0> ;
  assign m_axis_eni_tdata[42] = \<const0> ;
  assign m_axis_eni_tdata[41] = \<const0> ;
  assign m_axis_eni_tdata[40] = \<const0> ;
  assign m_axis_eni_tdata[39] = \<const0> ;
  assign m_axis_eni_tdata[38] = \<const0> ;
  assign m_axis_eni_tdata[37] = \<const0> ;
  assign m_axis_eni_tdata[36] = \<const0> ;
  assign m_axis_eni_tdata[35] = \<const0> ;
  assign m_axis_eni_tdata[34] = \<const0> ;
  assign m_axis_eni_tdata[33] = \<const0> ;
  assign m_axis_eni_tdata[32] = \<const0> ;
  assign m_axis_eni_tdata[31] = \<const0> ;
  assign m_axis_eni_tdata[30] = \<const0> ;
  assign m_axis_eni_tdata[29] = \<const0> ;
  assign m_axis_eni_tdata[28] = \<const0> ;
  assign m_axis_eni_tdata[27] = \<const0> ;
  assign m_axis_eni_tdata[26] = \<const0> ;
  assign m_axis_eni_tdata[25] = \<const0> ;
  assign m_axis_eni_tdata[24] = \<const0> ;
  assign m_axis_eni_tdata[23] = \<const0> ;
  assign m_axis_eni_tdata[22] = \<const0> ;
  assign m_axis_eni_tdata[21] = \<const0> ;
  assign m_axis_eni_tdata[20] = \<const0> ;
  assign m_axis_eni_tdata[19] = \<const0> ;
  assign m_axis_eni_tdata[18] = \<const0> ;
  assign m_axis_eni_tdata[17] = \<const0> ;
  assign m_axis_eni_tdata[16] = \<const0> ;
  assign m_axis_eni_tdata[15] = \<const0> ;
  assign m_axis_eni_tdata[14] = \<const0> ;
  assign m_axis_eni_tdata[13] = \<const0> ;
  assign m_axis_eni_tdata[12] = \<const0> ;
  assign m_axis_eni_tdata[11] = \<const0> ;
  assign m_axis_eni_tdata[10] = \<const0> ;
  assign m_axis_eni_tdata[9] = \<const0> ;
  assign m_axis_eni_tdata[8] = \<const0> ;
  assign m_axis_eni_tdata[7] = \<const0> ;
  assign m_axis_eni_tdata[6] = \<const0> ;
  assign m_axis_eni_tdata[5] = \<const0> ;
  assign m_axis_eni_tdata[4] = \<const0> ;
  assign m_axis_eni_tdata[3] = \<const0> ;
  assign m_axis_eni_tdata[2] = \<const0> ;
  assign m_axis_eni_tdata[1] = \<const0> ;
  assign m_axis_eni_tdata[0] = \<const0> ;
  assign m_axis_eni_tdest[3] = \<const0> ;
  assign m_axis_eni_tdest[2] = \<const0> ;
  assign m_axis_eni_tdest[1] = \<const0> ;
  assign m_axis_eni_tdest[0] = \<const0> ;
  assign m_axis_eni_tkeep[7] = \<const0> ;
  assign m_axis_eni_tkeep[6] = \<const0> ;
  assign m_axis_eni_tkeep[5] = \<const0> ;
  assign m_axis_eni_tkeep[4] = \<const0> ;
  assign m_axis_eni_tkeep[3] = \<const0> ;
  assign m_axis_eni_tkeep[2] = \<const0> ;
  assign m_axis_eni_tkeep[1] = \<const0> ;
  assign m_axis_eni_tkeep[0] = \<const0> ;
  assign m_axis_eni_tlast = \<const0> ;
  assign m_axis_eni_tuser[95] = \<const0> ;
  assign m_axis_eni_tuser[94] = \<const0> ;
  assign m_axis_eni_tuser[93] = \<const0> ;
  assign m_axis_eni_tuser[92] = \<const0> ;
  assign m_axis_eni_tuser[91] = \<const0> ;
  assign m_axis_eni_tuser[90] = \<const0> ;
  assign m_axis_eni_tuser[89] = \<const0> ;
  assign m_axis_eni_tuser[88] = \<const0> ;
  assign m_axis_eni_tuser[87] = \<const0> ;
  assign m_axis_eni_tuser[86] = \<const0> ;
  assign m_axis_eni_tuser[85] = \<const0> ;
  assign m_axis_eni_tuser[84] = \<const0> ;
  assign m_axis_eni_tuser[83] = \<const0> ;
  assign m_axis_eni_tuser[82] = \<const0> ;
  assign m_axis_eni_tuser[81] = \<const0> ;
  assign m_axis_eni_tuser[80] = \<const0> ;
  assign m_axis_eni_tuser[79] = \<const0> ;
  assign m_axis_eni_tuser[78] = \<const0> ;
  assign m_axis_eni_tuser[77] = \<const0> ;
  assign m_axis_eni_tuser[76] = \<const0> ;
  assign m_axis_eni_tuser[75] = \<const0> ;
  assign m_axis_eni_tuser[74] = \<const0> ;
  assign m_axis_eni_tuser[73] = \<const0> ;
  assign m_axis_eni_tuser[72] = \<const0> ;
  assign m_axis_eni_tuser[71] = \<const0> ;
  assign m_axis_eni_tuser[70] = \<const0> ;
  assign m_axis_eni_tuser[69] = \<const0> ;
  assign m_axis_eni_tuser[68] = \<const0> ;
  assign m_axis_eni_tuser[67] = \<const0> ;
  assign m_axis_eni_tuser[66] = \<const0> ;
  assign m_axis_eni_tuser[65] = \<const0> ;
  assign m_axis_eni_tuser[64] = \<const0> ;
  assign m_axis_eni_tuser[63] = \<const0> ;
  assign m_axis_eni_tuser[62] = \<const0> ;
  assign m_axis_eni_tuser[61] = \<const0> ;
  assign m_axis_eni_tuser[60] = \<const0> ;
  assign m_axis_eni_tuser[59] = \<const0> ;
  assign m_axis_eni_tuser[58] = \<const0> ;
  assign m_axis_eni_tuser[57] = \<const0> ;
  assign m_axis_eni_tuser[56] = \<const0> ;
  assign m_axis_eni_tuser[55] = \<const0> ;
  assign m_axis_eni_tuser[54] = \<const0> ;
  assign m_axis_eni_tuser[53] = \<const0> ;
  assign m_axis_eni_tuser[52] = \<const0> ;
  assign m_axis_eni_tuser[51] = \<const0> ;
  assign m_axis_eni_tuser[50] = \<const0> ;
  assign m_axis_eni_tuser[49] = \<const0> ;
  assign m_axis_eni_tuser[48] = \<const0> ;
  assign m_axis_eni_tuser[47] = \<const0> ;
  assign m_axis_eni_tuser[46] = \<const0> ;
  assign m_axis_eni_tuser[45] = \<const0> ;
  assign m_axis_eni_tuser[44] = \<const0> ;
  assign m_axis_eni_tuser[43] = \<const0> ;
  assign m_axis_eni_tuser[42] = \<const0> ;
  assign m_axis_eni_tuser[41] = \<const0> ;
  assign m_axis_eni_tuser[40] = \<const0> ;
  assign m_axis_eni_tuser[39] = \<const0> ;
  assign m_axis_eni_tuser[38] = \<const0> ;
  assign m_axis_eni_tuser[37] = \<const0> ;
  assign m_axis_eni_tuser[36] = \<const0> ;
  assign m_axis_eni_tuser[35] = \<const0> ;
  assign m_axis_eni_tuser[34] = \<const0> ;
  assign m_axis_eni_tuser[33] = \<const0> ;
  assign m_axis_eni_tuser[32] = \<const0> ;
  assign m_axis_eni_tuser[31] = \<const0> ;
  assign m_axis_eni_tuser[30] = \<const0> ;
  assign m_axis_eni_tuser[29] = \<const0> ;
  assign m_axis_eni_tuser[28] = \<const0> ;
  assign m_axis_eni_tuser[27] = \<const0> ;
  assign m_axis_eni_tuser[26] = \<const0> ;
  assign m_axis_eni_tuser[25] = \<const0> ;
  assign m_axis_eni_tuser[24] = \<const0> ;
  assign m_axis_eni_tuser[23] = \<const0> ;
  assign m_axis_eni_tuser[22] = \<const0> ;
  assign m_axis_eni_tuser[21] = \<const0> ;
  assign m_axis_eni_tuser[20] = \<const0> ;
  assign m_axis_eni_tuser[19] = \<const0> ;
  assign m_axis_eni_tuser[18] = \<const0> ;
  assign m_axis_eni_tuser[17] = \<const0> ;
  assign m_axis_eni_tuser[16] = \<const0> ;
  assign m_axis_eni_tuser[15] = \<const0> ;
  assign m_axis_eni_tuser[14] = \<const0> ;
  assign m_axis_eni_tuser[13] = \<const0> ;
  assign m_axis_eni_tuser[12] = \<const0> ;
  assign m_axis_eni_tuser[11] = \<const0> ;
  assign m_axis_eni_tuser[10] = \<const0> ;
  assign m_axis_eni_tuser[9] = \<const0> ;
  assign m_axis_eni_tuser[8] = \<const0> ;
  assign m_axis_eni_tuser[7] = \<const0> ;
  assign m_axis_eni_tuser[6] = \<const0> ;
  assign m_axis_eni_tuser[5] = \<const0> ;
  assign m_axis_eni_tuser[4] = \<const0> ;
  assign m_axis_eni_tuser[3] = \<const0> ;
  assign m_axis_eni_tuser[2] = \<const0> ;
  assign m_axis_eni_tuser[1] = \<const0> ;
  assign m_axis_eni_tuser[0] = \<const0> ;
  assign m_axis_eni_tvalid = \<const0> ;
  assign m_axis_tuser[95:72] = \^m_axis_tuser [95:72];
  assign m_axis_tuser[71] = \<const0> ;
  assign m_axis_tuser[70] = \<const0> ;
  assign m_axis_tuser[69:16] = \^m_axis_tuser [69:16];
  assign m_axis_tuser[15] = \<const0> ;
  assign m_axis_tuser[14] = \<const0> ;
  assign m_axis_tuser[13] = \<const0> ;
  assign m_axis_tuser[12] = \<const0> ;
  assign m_axis_tuser[11] = \<const0> ;
  assign m_axis_tuser[10] = \<const0> ;
  assign m_axis_tuser[9] = \<const0> ;
  assign m_axis_tuser[8] = \<const0> ;
  assign m_axis_tuser[7] = \<const0> ;
  assign m_axis_tuser[6] = \<const0> ;
  assign m_axis_tuser[5] = \<const0> ;
  assign m_axis_tuser[4] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1:0] = \^m_axis_tuser [1:0];
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_isr_cdc \AXI_LITE.isr_cdc 
       (.D({p_1_in[45],p_1_in[43]}),
        .E({\AXI_LITE.reg_inf_n_15 ,isr_i0}),
        .\HSC2R_CDC[0].hsc2r_send_reg[0]_0 (control_n_53),
        .\HSC2R_CDC[10].hsc2r_send_reg[10]_0 (control_n_58),
        .\HSC2R_CDC[12].hsc2r_send_reg[12]_0 (control_n_59),
        .\HSC2R_CDC[14].hsc2r_send_reg[14]_0 (control_n_60),
        .\HSC2R_CDC[16].hsc2r_send_reg[16]_0 (control_n_61),
        .\HSC2R_CDC[18].hsc2r_send_reg[18]_0 (control_n_62),
        .\HSC2R_CDC[20].hsc2r_send_reg[20]_0 (control_n_63),
        .\HSC2R_CDC[22].hsc2r_send_reg[22]_0 (control_n_64),
        .\HSC2R_CDC[24].hsc2r_send_reg[24]_0 (control_n_65),
        .\HSC2R_CDC[26].hsc2r_send_reg[26]_0 (control_n_66),
        .\HSC2R_CDC[28].hsc2r_send_reg[28]_0 (control_n_67),
        .\HSC2R_CDC[2].hsc2r_send_reg[2]_0 (control_n_54),
        .\HSC2R_CDC[30].hsc2r_send_reg[30]_0 ({p_141_in,p_29_in,p_27_in,p_25_in140_in,p_23_in,p_21_in,p_19_in138_in,p_17_in,p_15_in,p_13_in137_in,p_11_in,p_9_in,p_7_in136_in,p_5_in,p_3_in_0,control_n_91}),
        .\HSC2R_CDC[32].hsc2r_send_reg[32]_0 (phecc_n_31),
        .\HSC2R_CDC[35].hsc2r_send_reg[35]_0 (control_n_74),
        .\HSC2R_CDC[4].hsc2r_send_reg[4]_0 (control_n_55),
        .\HSC2R_CDC[6].hsc2r_send_reg[6]_0 (control_n_56),
        .\HSC2R_CDC[8].hsc2r_send_reg[8]_0 (control_n_57),
        .Q(phecc_status),
        .SR(p_0_in__0_6),
        .SS(\AXI_LITE.reg_inf_n_5 ),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .crc_done(crc_done),
        .crc_status(crc_status),
        .dest_out({live_fifo_sts[2],live_fifo_sts[0]}),
        .dest_pulse(wc_err_c2r),
        .diwc_valid(diwc_valid),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_rxulpmesc(dl0_rxulpmesc),
        .dl0_stopstate(dl0_stopstate),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_rxulpmesc(dl1_rxulpmesc),
        .dl1_stopstate(dl1_stopstate),
        .dl2_errcontrol(dl2_errcontrol),
        .dl2_erresc(dl2_erresc),
        .dl2_rxulpmesc(dl2_rxulpmesc),
        .dl2_stopstate(dl2_stopstate),
        .dl3_errcontrol(dl3_errcontrol),
        .dl3_erresc(dl3_erresc),
        .dl3_rxulpmesc(dl3_rxulpmesc),
        .dl3_stopstate(dl3_stopstate),
        .dout({pkt_fifo_rdata[40],pkt_fifo_rdata[19:18],pkt_fifo_rdata[9:8]}),
        .\ier_reg[3] (\AXI_LITE.isr_cdc_n_78 ),
        .interrupt_INST_0_i_3({ier[9],ier[4:3]}),
        .isr_55(isr_55),
        .\isr_i_reg[0]_0 (\AXI_LITE.reg_inf_n_12 ),
        .\isr_i_reg[46]_0 ({isr_o[46],isr_o[44],isr_o[42:38],isr_o[36:34],isr_o[31:14],isr_o[9:7],isr_o[5:0]}),
        .\isr_i_reg[55]_0 ({p_3_in[23],p_3_in[14:10],p_3_in[5:4],p_3_in[1:0],p_0_in,\AXI_LITE.isr_cdc_n_75 ,\AXI_LITE.isr_cdc_n_76 ,\AXI_LITE.isr_cdc_n_77 }),
        .lx_info_all({lx_info_all[11:8],lx_info_all[5:2]}),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .p_0_in(p_0_in_1),
        .p_0_in27_in(p_0_in27_in),
        .p_0_in28_in(p_0_in28_in),
        .p_0_in29_in(p_0_in29_in),
        .p_0_in30_in(p_0_in30_in),
        .p_0_in33_in(p_0_in33_in),
        .p_0_in34_in(p_0_in34_in),
        .p_0_in39_in(p_0_in39_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in6_in(p_0_in6_in),
        .p_0_in7_in(p_0_in7_in),
        .p_0_in8_in(p_0_in8_in),
        .phecc_done(phecc_done),
        .pkt_valid(pkt_valid),
        .s_axi_aclk(s_axi_aclk),
        .\s_axi_rdata_reg[23] (soft_rst),
        .s_axi_wdata({s_axi_wdata[31],s_axi_wdata[23:0]}),
        .\src_hsdata_ff_reg[0] ({reg_ppi_status,reg_crc_status,reg_data_status,errframe_status}),
        .\src_hsdata_ff_reg[0]_0 (frame_rcvd),
        .src_in({spkt_fifo_full,linebuf_full}),
        .\syncstages_ff_reg[2] (cl_info_all),
        .vcx_err(vcx_err),
        .wc_err(wc_err),
        .wr2_isr1(wr2_isr1),
        .wr2_isr2(wr2_isr2));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_reg_inf \AXI_LITE.reg_inf 
       (.D({p_1_in[45],p_1_in[43]}),
        .E({\AXI_LITE.reg_inf_n_15 ,isr_i0}),
        .Q(soft_rst),
        .SR(p_0_in__0_6),
        .SS(\AXI_LITE.reg_inf_n_5 ),
        .\active_lanes_reg[1]_0 (lane_merger_n_0),
        .cl_enable(cl_enable),
        .cl_info_reg_0(cl_info_all),
        .\core_config_reg[1]_0 (\AXI_LITE.reg_inf_n_12 ),
        .dest_out(core_men_r2c),
        .dest_pulse(wc_err_c2r),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dl0_stopstate(dl0_stopstate),
        .dl1_stopstate(dl1_stopstate),
        .dl2_stopstate(dl2_stopstate),
        .dl3_stopstate(dl3_stopstate),
        .end_mem_wr2(end_mem_wr2),
        .full(linebuf_full),
        .\gen_pf_ic_rc.ngen_full_rst_val.ram_full_i_reg (spkt_fifo_full),
        .\ier_reg[9]_0 ({ier[9],ier[4:3]}),
        .img_send_reg_0(phecc_n_0),
        .interrupt(interrupt),
        .interrupt_0({p_3_in[23],p_3_in[14:10],p_3_in[5:4],p_3_in[1:0],p_0_in,\AXI_LITE.isr_cdc_n_75 ,\AXI_LITE.isr_cdc_n_76 ,\AXI_LITE.isr_cdc_n_77 }),
        .interrupt_1({isr_o[46],isr_o[44],isr_o[42:38],isr_o[36:34],isr_o[31:14],isr_o[9:7],isr_o[5:0]}),
        .interrupt_2(\AXI_LITE.isr_cdc_n_78 ),
        .isr_55(isr_55),
        .lp_count_en(lp_count_en),
        .lp_data(lp_data),
        .lx_info_all({lx_info_all[11:8],lx_info_all[5:2]}),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .m_axis_aresetn_0(\AXI_LITE.reg_inf_n_28 ),
        .out({dl3_shutdown,dl2_shutdown,dl1_shutdown,dl0_shutdown}),
        .p_0_in27_in(p_0_in27_in),
        .p_0_in28_in(p_0_in28_in),
        .p_0_in29_in(p_0_in29_in),
        .p_0_in30_in(p_0_in30_in),
        .p_0_in33_in(p_0_in33_in),
        .p_0_in34_in(p_0_in34_in),
        .p_0_in39_in(p_0_in39_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in6_in(p_0_in6_in),
        .p_0_in7_in(p_0_in7_in),
        .p_0_in8_in(p_0_in8_in),
        .pktnppi_fifo_rst_reg_0(pktnppi_fifo_rst),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[7:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[7:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid_reg_0(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_reg[20]_0 ({live_fifo_sts[2],live_fifo_sts[0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid_reg_0(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31:29],s_axi_wdata[22:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .\src_hsdata_ff_reg[25] (diwc_corrected),
        .src_in({reg_ppi_status,reg_status,reg_crc_status,reg_data_status,errframe_status}),
        .src_rcv(img_rcv),
        .src_send(img_send),
        .\syncstages_ff_reg[0] (data_shutdown),
        .\syncstages_ff_reg[2] (\AXI_LITE.reg_inf_n_30 ),
        .vcx_err(vcx_err),
        .wr2_isr1(wr2_isr1),
        .wr2_isr2(wr2_isr2),
        .wr_en(spkt_fifo_wen));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__129 \AXI_LITE.xpm_single_fifo_rst 
       (.dest_clk(m_axis_aclk),
        .dest_out(fifo_rst_r2c),
        .src_clk(s_axi_aclk),
        .src_in(pktnppi_fifo_rst));
  GND GND
       (.G(\<const0> ));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo__xdcDup__1 \LANE_1.ppi_fifo0 
       (.din(ppi_fifo_l0_wdata),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dout(ppi_fifo_l0_rdata),
        .empty(ppi_fifo_l0_empty),
        .o_pkt_prcng_d1_reg(ppi_fifo_l1_empty),
        .o_pkt_prcng_d1_reg_0(ppi_fifo_l1_rdata[10]),
        .p_26_in(p_26_in),
        .ppi_fifo_wen(ppi_fifo_l0_wen),
        .rd_en(lane_merger_n_44),
        .rst(ppi_fifo_rst));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_inf \LANE_1.ppi_inf0 
       (.dest_arst(rstn_o1),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .pkt_wr_in_progress_d1_reg_0(rstn_o0),
        .ppi_fifo_wdata(ppi_fifo_l0_wdata),
        .ppi_fifo_wen(ppi_fifo_l0_wen));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_fifo \LANE_2.ppi_fifo1 
       (.din(ppi_fifo_l1_wdata),
        .dl1_rxbyteclkhs(dl1_rxbyteclkhs),
        .dout(ppi_fifo_l1_rdata),
        .empty(ppi_fifo_l1_empty),
        .ppi_fifo_wen(ppi_fifo_l1_wen),
        .rd_en(lane_merger_n_45),
        .rst(ppi_fifo_rst));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_ppi_inf_0 \LANE_2.ppi_inf1 
       (.dest_arst(rstn_o1),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxbyteclkhs(dl1_rxbyteclkhs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .pkt_wr_in_progress_d1_reg_0(rstn_o0),
        .ppi_fifo_wdata(ppi_fifo_l1_wdata),
        .ppi_fifo_wen(ppi_fifo_l1_wen));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_line_buffer \RX_1500M.line_buffer 
       (.D(mem_rdata),
        .SR(p_0_in__0_6),
        .almost_full(linebuf_almost_full),
        .din(mem_wdata),
        .empty(mem_rempty),
        .full(linebuf_full),
        .\gen_pntr_flags_cc.ngen_full_rst_val.ram_full_i_reg ({\RX_1500M.line_buffer_n_71 ,\RX_1500M.line_buffer_n_72 ,\RX_1500M.line_buffer_n_73 }),
        .lbuf_blk_wen_i(lbuf_blk_wen_i),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .\mem_wdata_reg[66] (phecc_n_97),
        .p_0_in(p_0_in_4),
        .rd_en(mem_ren),
        .wr_en(mem_wen));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_control control
       (.D(phecc_n_2),
        .E(mem_data_l320),
        .\ERR_FRAME_DATA[0].errframedata_reg[0]_0 (control_n_53),
        .\ERR_FRAME_DATA[10].errframedata_reg[10]_0 (control_n_63),
        .\ERR_FRAME_DATA[11].errframedata_reg[11]_0 (control_n_64),
        .\ERR_FRAME_DATA[12].errframedata_reg[12]_0 (control_n_65),
        .\ERR_FRAME_DATA[13].errframedata_reg[13]_0 (control_n_66),
        .\ERR_FRAME_DATA[14].errframedata_reg[14]_0 (control_n_67),
        .\ERR_FRAME_DATA[1].errframedata_reg[1]_0 (control_n_54),
        .\ERR_FRAME_DATA[2].errframedata_reg[2]_0 (control_n_55),
        .\ERR_FRAME_DATA[3].errframedata_reg[3]_0 (control_n_56),
        .\ERR_FRAME_DATA[4].errframedata_reg[4]_0 (control_n_57),
        .\ERR_FRAME_DATA[5].errframedata_reg[5]_0 (control_n_58),
        .\ERR_FRAME_DATA[6].errframedata_reg[6]_0 (control_n_59),
        .\ERR_FRAME_DATA[7].errframedata_reg[7]_0 (control_n_60),
        .\ERR_FRAME_DATA[8].errframedata_reg[8]_0 (control_n_61),
        .\ERR_FRAME_DATA[9].errframedata_reg[9]_0 (control_n_62),
        .\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_0 (reg_ppi_status[0]),
        .\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0]_1 (data_n_18),
        .\ERR_FRAME_SYNC_ALL[10].errframesync_reg[10]_0 (data_n_28),
        .\ERR_FRAME_SYNC_ALL[11].errframesync_reg[11]_0 (data_n_29),
        .\ERR_FRAME_SYNC_ALL[12].errframesync_reg[12]_0 (data_n_30),
        .\ERR_FRAME_SYNC_ALL[13].errframesync_reg[13]_0 (data_n_31),
        .\ERR_FRAME_SYNC_ALL[14].errframesync_reg[14]_0 (data_n_32),
        .\ERR_FRAME_SYNC_ALL[15].errframesync_reg[15]_0 (data_n_33),
        .\ERR_FRAME_SYNC_ALL[1].errframesync_reg[1]_0 (data_n_19),
        .\ERR_FRAME_SYNC_ALL[2].errframesync_reg[2]_0 (data_n_20),
        .\ERR_FRAME_SYNC_ALL[3].errframesync_reg[3]_0 (data_n_21),
        .\ERR_FRAME_SYNC_ALL[4].errframesync_reg[4]_0 (data_n_22),
        .\ERR_FRAME_SYNC_ALL[5].errframesync_reg[5]_0 (data_n_23),
        .\ERR_FRAME_SYNC_ALL[6].errframesync_reg[6]_0 (data_n_24),
        .\ERR_FRAME_SYNC_ALL[7].errframesync_reg[7]_0 (data_n_25),
        .\ERR_FRAME_SYNC_ALL[8].errframesync_reg[8]_0 (data_n_26),
        .\ERR_FRAME_SYNC_ALL[9].errframesync_reg[9]_0 (data_n_27),
        .\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_0 (control_n_1),
        .\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0]_1 (phecc_n_160),
        .\ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10]_0 (phecc_n_168),
        .\ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11]_0 (phecc_n_171),
        .\ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12]_0 (phecc_n_161),
        .\ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13]_0 (phecc_n_164),
        .\ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14]_0 (phecc_n_167),
        .\ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15]_0 (phecc_n_170),
        .\ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1]_0 (phecc_n_159),
        .\ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2]_0 (phecc_n_158),
        .\ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3]_0 (phecc_n_157),
        .\ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4]_0 (phecc_n_163),
        .\ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5]_0 (phecc_n_166),
        .\ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6]_0 (phecc_n_169),
        .\ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7]_0 (phecc_n_172),
        .\ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8]_0 (phecc_n_162),
        .\ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9]_0 (phecc_n_165),
        .\FSM_sequential_cur_state_reg[0]_0 (control_n_75),
        .\FSM_sequential_cur_state_reg[1]_0 (control_n_73),
        .\FSM_sequential_cur_state_reg[1]_1 (phecc_n_3),
        .\FSM_sequential_cur_state_reg[1]_2 (phecc_status[2]),
        .\FSM_sequential_cur_state_reg[2]_0 (control_n_72),
        .\FSM_sequential_cur_state_reg[2]_1 (control_n_98),
        .\FSM_sequential_cur_state_reg[2]_2 (\AXI_LITE.reg_inf_n_30 ),
        .\LINE_BUF_WR_64.mem_data_l32_reg[31] (data_n_13),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[0] (phecc_n_92),
        .Q({cur_state[2],cur_state[0]}),
        .SR(p_0_in__0_6),
        .crc_done(crc_done),
        .crc_rst(crc_rst),
        .crc_start(crc_start),
        .crc_start_d1_reg(phecc_n_48),
        .crc_status(crc_status),
        .crc_trig_d10(crc_trig_d10),
        .\cur_lp_vc_reg[3]_0 ({diwc_corrected[25:24],diwc_corrected[7:4]}),
        .\cur_lp_vc_reg[3]_1 (cur_lp_vc0),
        .data_done(data_done),
        .data_wip_reg(data_wip_reg),
        .dest_out(core_men_r2c),
        .diwc_corrected_zero(diwc_corrected_zero),
        .diwc_valid(diwc_valid),
        .dout({pkt_fifo_rdata[40],pkt_fifo_rdata[18],pkt_fifo_rdata[8]}),
        .empty(pkt_fifo_empty),
        .\errframedata_d1_reg[15]_0 ({p_141_in,p_29_in,p_27_in,p_25_in140_in,p_23_in,p_21_in,p_19_in138_in,p_17_in,p_15_in,p_13_in137_in,p_11_in,p_9_in,p_7_in136_in,p_5_in,p_3_in_0,control_n_91}),
        .lp_wc0(lp_wc0),
        .lp_wc0_i_reg_reg_0(phecc_n_55),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .mem_data1(mem_data1),
        .p_0_in(p_0_in_1),
        .p_1_in(p_1_in_2),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in19_in(p_1_in19_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in22_in(p_1_in22_in),
        .p_1_in25_in(p_1_in25_in),
        .p_1_in28_in(p_1_in28_in),
        .p_1_in31_in(p_1_in31_in),
        .p_1_in34_in(p_1_in34_in),
        .p_1_in37_in(p_1_in37_in),
        .p_1_in40_in(p_1_in40_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .p_50_out(p_50_out),
        .p_52_out(p_52_out),
        .p_54_out(p_54_out),
        .p_56_out(p_56_out),
        .p_58_out(p_58_out),
        .p_60_out(p_60_out),
        .p_62_out(p_62_out),
        .p_64_out(p_64_out),
        .p_66_out(p_66_out),
        .p_68_out(p_68_out),
        .p_70_out(p_70_out),
        .p_72_out(p_72_out),
        .p_74_out(p_74_out),
        .p_76_out(p_76_out),
        .p_78_out(p_78_out),
        .p_80_out(p_80_out),
        .phecc_done(phecc_done),
        .pkt_rdvld_reg_0(control_n_74),
        .pkt_rdvld_reg_1(control_n_93),
        .pkt_rdvld_reg_2(control_n_94),
        .pkt_valid(pkt_valid),
        .rd_en(pkt_fifo_ren),
        .\reg_ecc_status_i_reg[2]_0 ({phecc_n_50,phecc_n_51}),
        .src_in({reg_status,errframe_status}),
        .wc_gt_pload(wc_gt_pload));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_crc crc
       (.D({exp_crc[9],exp_crc[7]}),
        .E(data_p_strb),
        .Q(exp_crc_i),
        .SR(p_0_in__0_6),
        .\c_data_reg[15]_0 (c_data),
        .crc_blk_sel(crc_blk_sel),
        .crc_done(crc_done),
        .crc_en(crc_en),
        .\crc_reg_out_reg[15] ({crc_n_36,crc_n_37,crc_n_38,crc_n_39,crc_n_40,crc_n_41}),
        .crc_rst(crc_rst),
        .crc_start(crc_start),
        .crc_start_d1(crc_start_d1),
        .crc_status(crc_status),
        .\data_p_strb_reg[1]_0 ({crc_n_42,crc_n_43}),
        .\data_p_strb_reg[1]_1 ({data_n_135,data_n_136}),
        .dest_out(core_men_r2c),
        .dout({pkt_fifo_rdata[37:30],pkt_fifo_rdata[27:20],pkt_fifo_rdata[17:10],pkt_fifo_rdata[7:0]}),
        .\exp_crc_i_reg[12]_0 ({data_n_137,data_n_138}),
        .\exp_crc_i_reg[15]_0 (p_2_in),
        .lp_wc0(lp_wc0),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .\src_ff_reg[33] (gen_pkt_fifo_n_73),
        .\src_ff_reg[33]_0 (gen_pkt_fifo_n_74),
        .src_in(reg_crc_status));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_data data
       (.CO(phecc_n_154),
        .D(mem_data),
        .DI(phecc_n_140),
        .E(data_p_strb),
        .\ERR_FRAME_SYNC[15].fe_hunt_reg[15]_0 (\AXI_LITE.reg_inf_n_30 ),
        .\ERR_FRAME_SYNC_ALL[0].errframesync_reg[0] (control_n_1),
        .\ERR_FRAME_SYNC_ECCERR[0].ecc_errframesync_reg[0] (data_n_18),
        .\ERR_FRAME_SYNC_ECCERR[10].ecc_errframesync_reg[10] (data_n_28),
        .\ERR_FRAME_SYNC_ECCERR[11].ecc_errframesync_reg[11] (data_n_29),
        .\ERR_FRAME_SYNC_ECCERR[12].ecc_errframesync_reg[12] (data_n_30),
        .\ERR_FRAME_SYNC_ECCERR[13].ecc_errframesync_reg[13] (data_n_31),
        .\ERR_FRAME_SYNC_ECCERR[14].ecc_errframesync_reg[14] (data_n_32),
        .\ERR_FRAME_SYNC_ECCERR[15].ecc_errframesync_reg[15] (data_n_33),
        .\ERR_FRAME_SYNC_ECCERR[1].ecc_errframesync_reg[1] (data_n_19),
        .\ERR_FRAME_SYNC_ECCERR[2].ecc_errframesync_reg[2] (data_n_20),
        .\ERR_FRAME_SYNC_ECCERR[3].ecc_errframesync_reg[3] (data_n_21),
        .\ERR_FRAME_SYNC_ECCERR[4].ecc_errframesync_reg[4] (data_n_22),
        .\ERR_FRAME_SYNC_ECCERR[5].ecc_errframesync_reg[5] (data_n_23),
        .\ERR_FRAME_SYNC_ECCERR[6].ecc_errframesync_reg[6] (data_n_24),
        .\ERR_FRAME_SYNC_ECCERR[7].ecc_errframesync_reg[7] (data_n_25),
        .\ERR_FRAME_SYNC_ECCERR[8].ecc_errframesync_reg[8] (data_n_26),
        .\ERR_FRAME_SYNC_ECCERR[9].ecc_errframesync_reg[9] (data_n_27),
        .\FRAME_RCVD_GEN[2].frame_rcvd_i_reg[2]_0 (frame_rcvd),
        .\FSM_sequential_cur_state_reg[0] (data_n_155),
        .\FSM_sequential_cur_state_reg[0]_0 (cur_state[0]),
        .\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg[31]_0 (phecc_n_94),
        .\LINE_BUF_WR_64.mem_data_l32_reg[31]_0 (mem_data_l320),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[0]_0 (control_n_94),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[0]_1 (control_n_93),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[0]_2 (phecc_n_62),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 (phecc_n_96),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[65]_0 (phecc_n_153),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[67]_0 (p_0_in_4),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[67]_1 (p_0_out__0),
        .\LINE_BUF_WR_64.mem_wen_i_reg_0 (phecc_n_92),
        .\LINE_BUF_WR_64.str_fwd_reg_0 (data_n_13),
        .\LINE_BUF_WR_64.str_fwd_reg_1 (phecc_n_95),
        .Q(diwc_corrected),
        .S({data_n_127,data_n_128,data_n_129,data_n_130,data_n_131,data_n_132,data_n_133}),
        .SR(p_0_in__0_6),
        .almost_full(linebuf_almost_full),
        .crc_blk_sel(crc_blk_sel),
        .\crc_blk_sel_reg[0]_0 (phecc_n_152),
        .\crc_blk_sel_reg[1]_0 (phecc_n_151),
        .\crc_blk_sel_reg[2]_0 (phecc_n_150),
        .\crc_blk_sel_reg[3]_0 (phecc_n_141),
        .\crc_p_strb_reg[0]_0 ({data_n_135,data_n_136}),
        .\crc_p_strb_reg[1]_0 ({phecc_n_57,phecc_n_58}),
        .\crc_p_value_reg[15]_0 (p_2_in),
        .\crc_p_value_reg[15]_1 (p_1_in_5),
        .crc_partial0(crc_partial0),
        .crc_start_d1(crc_start_d1),
        .crc_start_d1_reg({data_n_137,data_n_138}),
        .crc_trig_d10(crc_trig_d10),
        .crc_trig_d2(crc_trig_d2),
        .crc_trig_d2_reg_0(data_n_34),
        .\cur_byte_cnt_reg[15]_0 (byt_cnt_adj),
        .\cur_byte_cnt_reg[3]_0 (cur_byte_cnt),
        .\cur_byte_cnt_reg[8]_0 ({p_0_in__0[11:10],p_0_in__0[7:6]}),
        .data_done(data_done),
        .data_done_0(data_done_3),
        .data_donei120_out(data_donei120_out),
        .data_sdown_reg_reg_0(data_shutdown),
        .data_wip(data_wip),
        .data_wip_reg(data_wip_reg),
        .data_wip_reg_i_2_0(data_type),
        .data_wip_reg_reg_0(data_n_36),
        .dest_out(core_men_r2c),
        .din(mem_wdata),
        .diwc_corrected_lte4(diwc_corrected_lte4),
        .diwc_corrected_zero(diwc_corrected_zero),
        .dout(pkt_fifo_rdata[41]),
        .end_mem_wr2(end_mem_wr2),
        .\exp_crc_i_reg[15] (c_data),
        .\exp_crc_i_reg[8] ({crc_n_42,crc_n_43}),
        .\exp_crc_r_reg[15]_0 (exp_crc),
        .fsm_wip_reg(fsm_wip_reg),
        .fsm_wip_reg_reg_0(phecc_n_155),
        .full(linebuf_full),
        .lbuf_blk_wen_i(lbuf_blk_wen_i),
        .lbuf_blk_wen_i_reg_0(phecc_n_97),
        .lp_count_en(lp_count_en),
        .lp_data(lp_data),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .mem_data1(mem_data1),
        .\mem_wdata_reg[5]_0 (exp_ecc),
        .\mem_wdata_reg[67]_0 ({\RX_1500M.line_buffer_n_71 ,\RX_1500M.line_buffer_n_72 ,\RX_1500M.line_buffer_n_73 }),
        .out(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg ),
        .p_1_in(p_1_in_2),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in19_in(p_1_in19_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in22_in(p_1_in22_in),
        .p_1_in25_in(p_1_in25_in),
        .p_1_in28_in(p_1_in28_in),
        .p_1_in31_in(p_1_in31_in),
        .p_1_in34_in(p_1_in34_in),
        .p_1_in37_in(p_1_in37_in),
        .p_1_in40_in(p_1_in40_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .phecc_start_d1(phecc_start_d1),
        .phecc_start_d1_reg_0(control_n_72),
        .pkt_valid(pkt_valid),
        .pre_byt_cnt1_reg_0({phecc_n_101,phecc_n_102,phecc_n_103,phecc_n_104}),
        .pre_byt_cnt2_reg_0({phecc_n_121,phecc_n_122,phecc_n_123}),
        .pre_byt_cnt2_reg_i_2_0(byte_cnt),
        .wc_err(wc_err),
        .wc_gt_pload(wc_gt_pload),
        .wr_en(mem_wen));
  LUT4 #(
    .INIT(16'hFF4F)) 
    fifo_arst_i_1
       (.I0(fifo_rst_p2c),
        .I1(fifo_arst),
        .I2(m_axis_aresetn),
        .I3(fifo_rst_r2c),
        .O(fifo_arst_i_1_n_0));
  FDRE fifo_arst_reg
       (.C(m_axis_aclk),
        .CE(1'b1),
        .D(fifo_arst_i_1_n_0),
        .Q(fifo_arst),
        .R(1'b0));
  (* srl_name = "inst/frst_d2_reg_srl2" *) 
  SRL16E frst_d2_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(dl0_rxbyteclkhs),
        .D(fifo_rst_c2p),
        .Q(frst_d2_reg_srl2_n_0));
  FDRE frst_d3_reg
       (.C(dl0_rxbyteclkhs),
        .CE(1'b1),
        .D(frst_d2_reg_srl2_n_0),
        .Q(frst_d3),
        .R(1'b0));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_pkt_fifo gen_pkt_fifo
       (.D(mem_data[31:28]),
        .\HSC2R_CDC[33].hsc2r_bus_cdc_i_2 ({crc_n_36,crc_n_37,crc_n_38,crc_n_39,crc_n_40,crc_n_41}),
        .\LINE_BUF_WR_64.mem_data_l32_reg[28] (phecc_n_93),
        .\LINE_BUF_WR_64.mem_data_l32_reg[28]_0 (phecc_n_91),
        .Q(byte_cnt[1:0]),
        .\crc_reg_out_reg[12] (gen_pkt_fifo_n_73),
        .\crc_reg_out_reg[15] (gen_pkt_fifo_n_74),
        .dest_out(fifo_rst_c2p),
        .din(pkt_fifo_wdata),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dout({pkt_fifo_rdata[41:40],pkt_fifo_rdata[37:30],pkt_fifo_rdata[27:0]}),
        .empty(pkt_fifo_empty),
        .\exp_crc_r_reg[15] (exp_crc_i),
        .\gen_rd_b.doutb_reg_reg[17] (exp_crc),
        .\gen_rd_b.doutb_reg_reg[27] (p_1_in_5[7:0]),
        .lp_wc0(lp_wc0),
        .m_axis_aclk(m_axis_aclk),
        .pkt_valid(pkt_valid),
        .rd_en(pkt_fifo_ren),
        .src_in(reg_ppi_status),
        .wr_en(pkt_fifo_wen));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(vc_fixed[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(vc_fixed[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(vc_fixed[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(vc_fixed[0]));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_lane_merger lane_merger
       (.\arststages_ff_reg[2] (lane_merger_n_0),
        .\buf0_reg[9]_0 (ppi_fifo_l0_empty),
        .dest_arst(ppi_ss1),
        .din(pkt_fifo_wdata),
        .dl0_rxbyteclkhs(dl0_rxbyteclkhs),
        .dout(ppi_fifo_l0_rdata),
        .empty(ppi_fifo_l1_empty),
        .l0_empty_reg_0(lane_merger_n_45),
        .l1_empty_reg_0(ppi_fifo_l1_rdata),
        .o_pkt_prcng_d1_reg_0(rstn_o0),
        .o_pkt_prcng_d1_reg_1(rstn_o1),
        .p_26_in(p_26_in),
        .rd_en(lane_merger_n_44),
        .rst(ppi_fifo_rst),
        .wr_en(pkt_fifo_wen));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_phecc phecc
       (.CO(phecc_n_154),
        .D(phecc_n_2),
        .DI(phecc_n_140),
        .E(phecc_start_d1),
        .\FSM_sequential_cur_state_reg[0] (control_n_75),
        .\FSM_sequential_cur_state_reg[0]_0 (data_n_155),
        .\FSM_sequential_cur_state_reg[0]_1 (control_n_73),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[64] (\AXI_LITE.reg_inf_n_28 ),
        .\LINE_BUF_WR_64.mem_wdata_i_reg[64]_0 (data_n_34),
        .Q(cur_state[2]),
        .S({data_n_127,data_n_128,data_n_129,data_n_130,data_n_131,data_n_132,data_n_133}),
        .SR(p_0_in__0_6),
        .byt_cnt_adj(byt_cnt_adj),
        .\byt_cnt_adj_reg[11]_0 ({phecc_n_101,phecc_n_102,phecc_n_103,phecc_n_104}),
        .byte_cnt(byte_cnt),
        .\byte_cnt_reg_reg[0]_0 ({phecc_n_57,phecc_n_58}),
        .\byte_cnt_reg_reg[11]_0 ({phecc_n_121,phecc_n_122,phecc_n_123}),
        .\byte_cnt_reg_reg[1]_0 (p_1_in_5[15:8]),
        .\byte_cnt_reg_reg[1]_1 (phecc_n_150),
        .\byte_cnt_reg_reg[1]_2 (phecc_n_152),
        .crc_en(crc_en),
        .crc_partial0(crc_partial0),
        .crc_partial_reg(data_n_36),
        .crc_trig_d2(crc_trig_d2),
        .crc_trig_d2_reg(p_0_out__0),
        .data_done(data_done),
        .data_done_0(data_done_3),
        .data_donei120_out(data_donei120_out),
        .\data_type_reg_reg[0]_0 (phecc_n_97),
        .\data_type_reg_reg[5]_0 (data_type),
        .data_wip(data_wip),
        .data_wip_reg(data_wip_reg),
        .data_wip_reg_reg(phecc_n_91),
        .dest_out(core_men_r2c),
        .diwc_corrected(diwc_corrected),
        .diwc_corrected_lte4(diwc_corrected_lte4),
        .\diwc_corrected_reg[0]_0 (phecc_n_31),
        .\diwc_corrected_reg[24]_0 (phecc_n_162),
        .\diwc_corrected_reg[24]_1 (phecc_n_165),
        .\diwc_corrected_reg[24]_2 (phecc_n_168),
        .\diwc_corrected_reg[24]_3 (phecc_n_171),
        .\diwc_corrected_reg[25]_0 (phecc_n_160),
        .\diwc_corrected_reg[25]_1 (phecc_n_161),
        .\diwc_corrected_reg[25]_2 (phecc_n_163),
        .\diwc_corrected_reg[25]_3 (phecc_n_164),
        .\diwc_corrected_reg[25]_4 (phecc_n_166),
        .\diwc_corrected_reg[25]_5 (phecc_n_167),
        .\diwc_corrected_reg[25]_6 (phecc_n_169),
        .\diwc_corrected_reg[25]_7 (phecc_n_170),
        .\diwc_corrected_reg[25]_8 (phecc_n_172),
        .\diwc_corrected_reg[5]_0 (phecc_n_48),
        .\diwc_corrected_reg[6]_0 (phecc_n_158),
        .\diwc_corrected_reg[7]_0 (phecc_n_157),
        .\diwc_corrected_reg[7]_1 (phecc_n_159),
        .diwc_corrected_zero(diwc_corrected_zero),
        .diwc_valid(diwc_valid),
        .diwc_valid_reg_0(phecc_n_0),
        .diwc_valid_reg_1(phecc_n_3),
        .diwc_valid_reg_2(cur_lp_vc0),
        .diwc_valid_reg_3(phecc_n_55),
        .dout({pkt_fifo_rdata[37:30],pkt_fifo_rdata[27:20],pkt_fifo_rdata[17:10],pkt_fifo_rdata[7:0]}),
        .exp_ecc(exp_ecc),
        .fsm_wip_reg(fsm_wip_reg),
        .fsm_wip_reg_reg(phecc_n_155),
        .fsm_wip_reg_reg_0(control_n_98),
        .\gen_rd_b.doutb_reg_reg[37] (mem_data[27:0]),
        .long_pkt_out_reg_0(phecc_n_92),
        .lp_wc0(lp_wc0),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .m_axis_aresetn_0(phecc_n_62),
        .m_axis_aresetn_1(phecc_n_93),
        .m_axis_aresetn_2(phecc_n_94),
        .m_axis_aresetn_3(phecc_n_95),
        .m_axis_aresetn_4(phecc_n_141),
        .m_axis_aresetn_5(phecc_n_151),
        .mem_data1(mem_data1),
        .out(\LINE_BUF_WR_64.lbuf_wr_byte_cnt_reg ),
        .p_50_out(p_50_out),
        .p_52_out(p_52_out),
        .p_54_out(p_54_out),
        .p_56_out(p_56_out),
        .p_58_out(p_58_out),
        .p_60_out(p_60_out),
        .p_62_out(p_62_out),
        .p_64_out(p_64_out),
        .p_66_out(p_66_out),
        .p_68_out(p_68_out),
        .p_70_out(p_70_out),
        .p_72_out(p_72_out),
        .p_74_out(p_74_out),
        .p_76_out(p_76_out),
        .p_78_out(p_78_out),
        .p_80_out(p_80_out),
        .phecc_done(phecc_done),
        .phecc_done_reg_0({phecc_n_50,phecc_n_51}),
        .phecc_status(phecc_status),
        .pkt_valid(pkt_valid),
        .pre_byt_cnt1_reg_i_3(cur_byte_cnt),
        .pre_byt_cnt1_reg_i_3_0({p_0_in__0[11:10],p_0_in__0[7:6]}),
        .short_pkt_reg_0(phecc_n_96),
        .short_pkt_reg_1(phecc_n_153),
        .src_in(reg_data_status),
        .src_rcv(img_rcv),
        .src_send(img_send),
        .vc_fixed(vc_fixed),
        .wr_en(spkt_fifo_wen));
  bd_d10d_rx_0_mipi_csi2_rx_ctrl_v1_0_8_stream stream
       (.SR(p_0_in__0_6),
        .empty(mem_rempty),
        .m_axis_aclk(m_axis_aclk),
        .m_axis_aresetn(m_axis_aresetn),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tdest(m_axis_tdest),
        .m_axis_tkeep(m_axis_tkeep),
        .m_axis_tlast_reg_0(m_axis_tlast),
        .m_axis_tready(m_axis_tready),
        .m_axis_tuser({\^m_axis_tuser [95:72],\^m_axis_tuser [69:16],\^m_axis_tuser [1:0]}),
        .m_axis_tvalid_reg_0(m_axis_tvalid),
        .mem_rdata(mem_rdata),
        .rd_en(mem_ren));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_async_rst xpm_arst_01
       (.dest_arst(ppi_ss1),
        .dest_clk(dl0_rxbyteclkhs),
        .src_arst(m_axis_aresetn));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_async_rst__2 xpm_arst_04
       (.dest_arst(rstn_o0),
        .dest_clk(dl0_rxbyteclkhs),
        .src_arst(m_axis_aresetn));
  (* DEF_VAL = "1'b1" *) 
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* INV_DEF_VAL = "1'b0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* RST_ACTIVE_HIGH = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "ASYNC_RST" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_async_rst__3 xpm_arst_05
       (.dest_arst(rstn_o1),
        .dest_clk(dl0_rxbyteclkhs),
        .src_arst(rstn_i1));
  LUT1 #(
    .INIT(2'h1)) 
    xpm_arst_05_i_1
       (.I0(pktnppi_fifo_rst),
        .O(rstn_i1));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single__258 xpm_single_frst_c2p
       (.dest_clk(dl0_rxbyteclkhs),
        .dest_out(fifo_rst_c2p),
        .src_clk(m_axis_aclk),
        .src_in(fifo_arst));
  (* DEST_SYNC_FF = "3" *) 
  (* INIT_SYNC_FF = "0" *) 
  (* KEEP_HIERARCHY = "true" *) 
  (* SIM_ASSERT_CHK = "0" *) 
  (* SRC_INPUT_REG = "0" *) 
  (* VERSION = "0" *) 
  (* XPM_CDC = "SINGLE" *) 
  (* XPM_MODULE = "TRUE" *) 
  bd_d10d_rx_0_xpm_cdc_single xpm_single_frst_p2c
       (.dest_clk(m_axis_aclk),
        .dest_out(fifo_rst_p2c),
        .src_clk(dl0_rxbyteclkhs),
        .src_in(frst_d3));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
